{"version":3,"sources":["../../../src/commands/apply/configureIOSProjectAsync.ts"],"names":["configureIOSProjectAsync","projectRoot","bundleIdentifier","expoUsername","process","env","EAS_BUILD_USERNAME","UserManager","getCurrentUsernameAsync","exp","config","skipSDKVersionRequirement"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEe,eAAeA,wBAAf,CAAwCC,WAAxC,EAA6D;AAC1E;AACA,QAAMC,gBAAgB,GAAG,MAAM,wDAA+BD,WAA/B,CAA/B;AACA,QAAME,YAAY,GAChBC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,KAAmC,MAAMC,mBAAYC,uBAAZ,EAAzC,CADF;AAGA,MAAI;AAAEC,IAAAA,GAAG,EAAEC;AAAP,MAAkB,iCAAkBT,WAAlB,EAA+B;AAAEU,IAAAA,yBAAyB,EAAE;AAA7B,GAA/B,CAAtB,CAN0E,CAQ1E;;AACAD,EAAAA,MAAM,GAAG,uCAAmBA,MAAnB,EAA2B;AAClCR,IAAAA,gBADkC;AAElCC,IAAAA;AAFkC,GAA3B,CAAT,CAT0E,CAc1E;;AACA,QAAM,qCAAiBO,MAAjB,EAAyBT,WAAzB,CAAN;AACD","sourcesContent":["import { getConfigWithMods } from '@expo/config';\nimport { withExpoIOSPlugins } from '@expo/config/build/plugins/expo-plugins';\nimport { compileModsAsync } from '@expo/config/build/plugins/mod-compiler';\nimport { UserManager } from '@expo/xdl';\n\nimport { getOrPromptForBundleIdentifier } from '../eject/ConfigValidation';\n\nexport default async function configureIOSProjectAsync(projectRoot: string) {\n  // Check bundle ID before reading the config because it may mutate the config if the user is prompted to define it.\n  const bundleIdentifier = await getOrPromptForBundleIdentifier(projectRoot);\n  const expoUsername =\n    process.env.EAS_BUILD_USERNAME || (await UserManager.getCurrentUsernameAsync());\n\n  let { exp: config } = getConfigWithMods(projectRoot, { skipSDKVersionRequirement: true });\n\n  // Add all built-in plugins\n  config = withExpoIOSPlugins(config, {\n    bundleIdentifier,\n    expoUsername,\n  });\n\n  // compile all plugins and mods\n  await compileModsAsync(config, projectRoot);\n}\n"],"file":"configureIOSProjectAsync.js"}