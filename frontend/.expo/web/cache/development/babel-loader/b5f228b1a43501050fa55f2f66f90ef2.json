{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/App.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { preventSplashScreenAutoHide } from \"./src/splash-screen\";\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ReduxNetworkProvider as ReactNativeOfflineProvider } from 'react-native-offline';\nimport { store, persistor } from \"./redux-things\";\nimport { SnackbarProvider } from \"./src/snackbars\";\nimport { registerNavigationRef } from \"./src/navigate-from-anywhere\";\nimport { setupAgroXNotificationListeners } from \"./src/notifications\";\nimport { AppRoot } from \"./components/app-root\";\npreventSplashScreenAutoHide();\nexport default function App() {\n  useEffect(setupAgroXNotificationListeners, []);\n  return React.createElement(ReduxProvider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, React.createElement(PersistGate, {\n    loading: null,\n    persistor: persistor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }\n  }, React.createElement(ReactNativeOfflineProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(PaperProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }\n  }, React.createElement(NavigationContainer, {\n    ref: registerNavigationRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(SnackbarProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 8\n    }\n  }, React.createElement(AppRoot, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })))))));\n}\n\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: '#327387',\n    accent: '#327387'\n  })\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/App.tsx"],"names":["React","useEffect","preventSplashScreenAutoHide","DefaultTheme","Provider","PaperProvider","NavigationContainer","ReduxProvider","PersistGate","ReduxNetworkProvider","ReactNativeOfflineProvider","store","persistor","SnackbarProvider","registerNavigationRef","setupAgroXNotificationListeners","AppRoot","App","theme","colors","primary","accent"],"mappings":";;;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,2BAAT;AACA,SAASC,YAAT,EAAuBC,QAAQ,IAAIC,aAAnC,QAAwD,oBAAxD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASF,QAAQ,IAAIG,aAArB,QAA0C,aAA1C;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,oBAAoB,IAAIC,0BAAjC,QAAmE,sBAAnE;AACA,SAASC,KAAT,EAAgBC,SAAhB;AACA,SAASC,gBAAT;AACA,SAASC,qBAAT;AACA,SAASC,+BAAT;AACA,SAASC,OAAT;AAEAd,2BAA2B;AAE3B,eAAe,SAASe,GAAT,GAAe;AAC7BhB,EAAAA,SAAS,CAACc,+BAAD,EAAkC,EAAlC,CAAT;AAEA,SACC,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEJ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAE,IAAtB;AAA4B,IAAA,SAAS,EAAEC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEM,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,mBAAD;AAAqB,IAAA,GAAG,EAAEJ,qBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CADD,CADD,CADD,CADD,CADD;AAeA;;AAED,IAAMI,KAAK,mCACPf,YADO;AAEVgB,EAAAA,MAAM,kCACFhB,YAAY,CAACgB,MADX;AAELC,IAAAA,OAAO,EAAE,SAFJ;AAGLC,IAAAA,MAAM,EAAE;AAHH;AAFI,EAAX","sourcesContent":["/* eslint-disable unicorn/filename-case */\n\nimport React, { useEffect } from 'react';\nimport { preventSplashScreenAutoHide } from './src/splash-screen';\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ReduxNetworkProvider as ReactNativeOfflineProvider } from 'react-native-offline';\nimport { store, persistor } from './redux-things';\nimport { SnackbarProvider } from './src/snackbars';\nimport { registerNavigationRef } from './src/navigate-from-anywhere';\nimport { setupAgroXNotificationListeners } from './src/notifications';\nimport { AppRoot } from './components/app-root';\n\npreventSplashScreenAutoHide();\n\nexport default function App() {\n\tuseEffect(setupAgroXNotificationListeners, []);\n\n\treturn (\n\t\t<ReduxProvider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReactNativeOfflineProvider>\n\t\t\t\t\t<PaperProvider theme={theme}>\n\t\t\t\t\t\t<NavigationContainer ref={registerNavigationRef}>\n\t\t\t\t\t\t\t<SnackbarProvider>\n\t\t\t\t\t\t\t\t<AppRoot />\n\t\t\t\t\t\t\t</SnackbarProvider>\n\t\t\t\t\t\t</NavigationContainer>\n\t\t\t\t\t</PaperProvider>\n\t\t\t\t</ReactNativeOfflineProvider>\n\t\t\t</PersistGate>\n\t\t</ReduxProvider>\n\t);\n}\n\nconst theme = {\n\t...DefaultTheme,\n\tcolors: {\n\t\t...DefaultTheme.colors,\n\t\tprimary: '#327387',\n\t\taccent: '#327387',\n\t},\n};\n"]},"metadata":{},"sourceType":"module"}