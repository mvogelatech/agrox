{"ast":null,"code":"var _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/00-common/field-card.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { icons, images, colors } from \"../../src/assets\";\nimport { createTStyleSheet, overrideTStyleSheet } from \"../../src/utils/style\";\nimport { getLatestCrop, getFieldInfestationText, REM_SCALE } from \"../../src/utils\";\nimport { getMapPinColorDate } from \"../../src/utils/semaphore\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FontAwesome } from '@expo/vector-icons';\nexport function FieldCard(props) {\n  var _props$customStyle;\n\n  var latestCrop = getLatestCrop(props.field);\n  var text = getFieldInfestationText(props.field, true);\n  var mapPinColor = getMapPinColorDate(props.field);\n  var styles = overrideTStyleSheet(defaultStyleSheet, {\n    $fieldImgSize: latestCrop ? '80%' : '72%',\n    card: {\n      elevation: props.isElevated ? '4rem' : 0\n    },\n    warningBox: {\n      backgroundColor: mapPinColor\n    },\n    circle: {\n      color: mapPinColor\n    },\n    contentView: {\n      justifyContent: props.isDiagnosisMode ? 'space-evenly' : 'center'\n    }\n  }, {\n    card: (_props$customStyle = props.customStyle) != null ? _props$customStyle : {}\n  });\n  return React.createElement(TouchableOpacity, {\n    style: styles.card,\n    onPress: props.onFieldPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, props.isHideCircle ? undefined : React.createElement(View, {\n    style: styles.circleView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    style: {\n      zIndex: 1,\n      position: 'absolute',\n      alignSelf: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.circleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }\n  }, props.field.code)), React.createElement(FontAwesome, {\n    name: \"circle\",\n    style: styles.circle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }))), React.createElement(View, {\n    style: styles.imageView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, React.createElement(Image, {\n    source: (latestCrop == null ? void 0 : latestCrop.crop_type) === 'Cana' ? images.crop.sugarCane : (latestCrop == null ? void 0 : latestCrop.crop_type) === 'Soja' ? images.crop.soy : (latestCrop == null ? void 0 : latestCrop.crop_type) === 'Milho' ? images.crop.corn : icons.weed,\n    style: styles.fieldImage,\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  })), React.createElement(View, {\n    style: styles.contentView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }\n  }, props.isDiagnosisMode ? text === 'AGUARDANDO\\nDIAGNÓSTICO' || text === 'DIAGNÓSTICO\\nNÃO CONTRATADO' ? React.createElement(View, {\n    style: styles.warningBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 2,\n    style: {\n      fontSize: 8 * REM_SCALE,\n      fontWeight: 'bold',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 8\n    }\n  }, text)) : React.createElement(Text, {\n    numberOfLines: 2,\n    style: {\n      fontSize: 14 * REM_SCALE,\n      fontWeight: 'bold',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, text) : undefined, !props.isDiagnosisMode && props.isIndexNotAvailable ? React.createElement(View, {\n    style: styles.warningBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 2,\n    style: {\n      fontSize: 10 * REM_SCALE,\n      fontWeight: 'bold',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"\\xCDNDICES N\\xC3O DISPON\\xCDVEIS\")) : undefined, React.createElement(View, {\n    style: styles.textView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    numberOfLines: props.isDiagnosisMode || props.isIndexNotAvailable ? 3 : 2,\n    style: props.isDiagnosisMode || props.isIndexNotAvailable ? styles.textInfected : styles.textTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 6\n    }\n  }, props.field.name))));\n}\nvar defaultStyleSheet = createTStyleSheet({\n  card: {\n    marginHorizontal: '8rem',\n    height: '114rem',\n    width: '90rem',\n    borderRadius: '5rem',\n    backgroundColor: 'white',\n    alignItems: 'center'\n  },\n  imageView: {\n    flex: 0.5,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingTop: '12rem'\n  },\n  $fieldImgSize: '100%',\n  fieldImage: {\n    height: '$fieldImgSize',\n    tintColor: 'black'\n  },\n  textView: {\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  textTitle: {\n    fontSize: '14rem',\n    color: colors.neutral.darker_60,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  textInfected: {\n    fontSize: '10rem',\n    color: colors.neutral.darker_60,\n    textAlign: 'center'\n  },\n  warningBox: {\n    width: '76rem',\n    height: '28rem',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'black',\n    borderRadius: '3rem',\n    margin: '3rem'\n  },\n  circleView: {\n    zIndex: 1,\n    position: 'absolute',\n    left: '4rem',\n    top: '4rem'\n  },\n  circleText: {\n    fontSize: '14rem',\n    fontWeight: 'bold'\n  },\n  circle: {\n    fontSize: '28rem',\n    color: '#D8F6C4'\n  },\n  contentView: {\n    flex: 1,\n    justifyContent: 'space-evenly',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/00-common/field-card.tsx"],"names":["React","icons","images","colors","createTStyleSheet","overrideTStyleSheet","getLatestCrop","getFieldInfestationText","REM_SCALE","getMapPinColorDate","TouchableOpacity","FontAwesome","FieldCard","props","latestCrop","field","text","mapPinColor","styles","defaultStyleSheet","$fieldImgSize","card","elevation","isElevated","warningBox","backgroundColor","circle","color","contentView","justifyContent","isDiagnosisMode","customStyle","onFieldPress","isHideCircle","undefined","circleView","alignItems","zIndex","position","alignSelf","circleText","code","imageView","crop_type","crop","sugarCane","soy","corn","weed","fieldImage","fontSize","fontWeight","textAlign","isIndexNotAvailable","textView","textInfected","textTitle","name","marginHorizontal","height","width","borderRadius","flex","paddingTop","tintColor","neutral","darker_60","margin","left","top"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Image, Text } from 'react-native';\n\nimport { Models } from '../../models';\nimport { icons, images, colors } from '../../src/assets';\nimport { createTStyleSheet, overrideTStyleSheet, ExtendedStyle } from '../../src/utils/style';\nimport { getLatestCrop, getFieldInfestationText, REM_SCALE } from '../../src/utils';\nimport { getMapPinColorDate } from '../../src/utils/semaphore';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FontAwesome } from '@expo/vector-icons';\n\ntype FieldCardProps = {\n\tisDiagnosisMode: boolean;\n\tisElevated: boolean;\n\tfield: Models.field;\n\tcustomStyle?: ExtendedStyle;\n\tisHideCircle?: boolean;\n\tisIndexNotAvailable: boolean;\n\tonFieldPress?: () => void;\n};\n\nexport function FieldCard(props: FieldCardProps) {\n\tconst latestCrop = getLatestCrop(props.field);\n\tconst text = getFieldInfestationText(props.field, true);\n\n\t// const semaphoreThresholds = useThresholds();\n\n\tconst mapPinColor = getMapPinColorDate(props.field);\n\n\tconst styles = overrideTStyleSheet(\n\t\tdefaultStyleSheet,\n\t\t{\n\t\t\t$fieldImgSize: latestCrop ? '80%' : '72%',\n\t\t\tcard: {\n\t\t\t\televation: props.isElevated ? '4rem' : 0,\n\t\t\t},\n\n\t\t\twarningBox: {\n\t\t\t\tbackgroundColor: mapPinColor,\n\t\t\t},\n\t\t\tcircle: {\n\t\t\t\tcolor: mapPinColor,\n\t\t\t},\n\t\t\tcontentView: {\n\t\t\t\tjustifyContent: props.isDiagnosisMode ? 'space-evenly' : 'center',\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tcard: props.customStyle ?? {},\n\t\t},\n\t);\n\n\treturn (\n\t\t<TouchableOpacity style={styles.card} onPress={props.onFieldPress}>\n\t\t\t{props.isHideCircle ? undefined : (\n\t\t\t\t<View style={styles.circleView}>\n\t\t\t\t\t<View style={{ alignItems: 'center', justifyContent: 'center' }}>\n\t\t\t\t\t\t<View style={{ zIndex: 1, position: 'absolute', alignSelf: 'center' }}>\n\t\t\t\t\t\t\t<Text style={styles.circleText}>{props.field.code}</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<FontAwesome name=\"circle\" style={styles.circle} />\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t)}\n\t\t\t<View style={styles.imageView}>\n\t\t\t\t<Image\n\t\t\t\t\tsource={\n\t\t\t\t\t\tlatestCrop?.crop_type === 'Cana'\n\t\t\t\t\t\t\t? images.crop.sugarCane\n\t\t\t\t\t\t\t: latestCrop?.crop_type === 'Soja'\n\t\t\t\t\t\t\t? images.crop.soy\n\t\t\t\t\t\t\t: latestCrop?.crop_type === 'Milho'\n\t\t\t\t\t\t\t? images.crop.corn\n\t\t\t\t\t\t\t: icons.weed\n\t\t\t\t\t}\n\t\t\t\t\tstyle={styles.fieldImage}\n\t\t\t\t\tresizeMode=\"contain\"\n\t\t\t\t/>\n\t\t\t</View>\n\n\t\t\t<View style={styles.contentView}>\n\t\t\t\t{props.isDiagnosisMode ? (\n\t\t\t\t\ttext === 'AGUARDANDO\\nDIAGNÓSTICO' || text === 'DIAGNÓSTICO\\nNÃO CONTRATADO' ? (\n\t\t\t\t\t\t<View style={styles.warningBox}>\n\t\t\t\t\t\t\t<Text numberOfLines={2} style={{ fontSize: 8 * REM_SCALE, fontWeight: 'bold', textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Text numberOfLines={2} style={{ fontSize: 14 * REM_SCALE, fontWeight: 'bold', textAlign: 'center' }}>\n\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t)\n\t\t\t\t) : undefined}\n\t\t\t\t{!props.isDiagnosisMode && props.isIndexNotAvailable ? (\n\t\t\t\t\t<View style={styles.warningBox}>\n\t\t\t\t\t\t<Text numberOfLines={2} style={{ fontSize: 10 * REM_SCALE, fontWeight: 'bold', textAlign: 'center' }}>\n\t\t\t\t\t\t\tÍNDICES NÃO DISPONÍVEIS\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t) : undefined}\n\t\t\t\t<View style={styles.textView}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tnumberOfLines={props.isDiagnosisMode || props.isIndexNotAvailable ? 3 : 2}\n\t\t\t\t\t\tstyle={props.isDiagnosisMode || props.isIndexNotAvailable ? styles.textInfected : styles.textTitle}\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.field.name}\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t</TouchableOpacity>\n\t);\n}\n\nconst defaultStyleSheet = createTStyleSheet({\n\tcard: {\n\t\tmarginHorizontal: '8rem',\n\t\theight: '114rem',\n\t\twidth: '90rem',\n\t\tborderRadius: '5rem',\n\t\tbackgroundColor: 'white',\n\t\talignItems: 'center',\n\t},\n\timageView: {\n\t\tflex: 0.5,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-end',\n\t\tpaddingTop: '12rem',\n\t},\n\t$fieldImgSize: '100%',\n\tfieldImage: {\n\t\theight: '$fieldImgSize',\n\t\ttintColor: 'black',\n\t},\n\ttextView: {\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-start',\n\t},\n\ttextTitle: {\n\t\tfontSize: '14rem',\n\t\tcolor: colors.neutral.darker_60,\n\t\tfontWeight: 'bold',\n\t\ttextAlign: 'center',\n\t},\n\ttextInfected: {\n\t\tfontSize: '10rem',\n\t\tcolor: colors.neutral.darker_60,\n\t\ttextAlign: 'center',\n\t},\n\twarningBox: {\n\t\twidth: '76rem',\n\t\theight: '28rem',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tbackgroundColor: 'black',\n\t\tborderRadius: '3rem',\n\t\tmargin: '3rem',\n\t},\n\tcircleView: {\n\t\tzIndex: 1,\n\t\tposition: 'absolute',\n\t\tleft: '4rem',\n\t\ttop: '4rem',\n\t},\n\tcircleText: {\n\t\tfontSize: '14rem',\n\t\tfontWeight: 'bold',\n\t},\n\tcircle: {\n\t\tfontSize: '28rem',\n\t\tcolor: '#D8F6C4',\n\t},\n\tcontentView: {\n\t\tflex: 1,\n\t\tjustifyContent: 'space-evenly',\n\t\talignItems: 'center',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}