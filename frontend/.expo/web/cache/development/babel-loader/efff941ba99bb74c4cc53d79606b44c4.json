{"ast":null,"code":"var SUFFIX = 'rem';\nvar DEFAULT_REM = 16;\nexport default {\n  isRem: isRem,\n  calc: calc\n};\n\nfunction isRem(str) {\n  return str.substr(-SUFFIX.length) === SUFFIX;\n}\n\nfunction calc(str) {\n  var rem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_REM;\n  var koefStr = str.substr(0, str.length - SUFFIX.length);\n  var koef = koefStr === '' ? 1 : parseFloat(koefStr);\n\n  if (isNaN(koef)) {\n    throw new Error('Invalid rem value: ' + str);\n  }\n\n  return rem * koef;\n}","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/node_modules/react-native-extended-stylesheet/src/replacers/rem.js"],"names":["SUFFIX","DEFAULT_REM","isRem","calc","str","substr","length","rem","koefStr","koef","parseFloat","isNaN","Error"],"mappings":"AAIA,IAAMA,MAAM,GAAG,KAAf;AACA,IAAMC,WAAW,GAAG,EAApB;AAEA,eAAe;AACbC,EAAAA,KAAK,EAALA,KADa;AAEbC,EAAAA,IAAI,EAAJA;AAFa,CAAf;;AAUA,SAASD,KAAT,CAAeE,GAAf,EAAoB;AAClB,SAAOA,GAAG,CAACC,MAAJ,CAAW,CAACL,MAAM,CAACM,MAAnB,MAA+BN,MAAtC;AACD;;AAQD,SAASG,IAAT,CAAcC,GAAd,EAAsC;AAAA,MAAnBG,GAAmB,uEAAbN,WAAa;AACpC,MAAIO,OAAO,GAAGJ,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcD,GAAG,CAACE,MAAJ,GAAaN,MAAM,CAACM,MAAlC,CAAd;AACA,MAAIG,IAAI,GAAGD,OAAO,KAAK,EAAZ,GAAiB,CAAjB,GAAqBE,UAAU,CAACF,OAAD,CAA1C;;AACA,MAAIG,KAAK,CAACF,IAAD,CAAT,EAAiB;AACf,UAAM,IAAIG,KAAJ,CAAU,wBAAwBR,GAAlC,CAAN;AACD;;AACD,SAAOG,GAAG,GAAGE,IAAb;AACD","sourcesContent":["/**\n * Calculation of REM strings\n */\n\nconst SUFFIX = 'rem';\nconst DEFAULT_REM = 16;\n\nexport default {\n  isRem,\n  calc,\n};\n\n/**\n * Is string contains rem\n * @param {String} str\n * @returns {Boolean}\n */\nfunction isRem(str) {\n  return str.substr(-SUFFIX.length) === SUFFIX;\n}\n\n/**\n * Calculate rem to pixels: '1.2rem' => 1.2 * rem\n * @param {String} str\n * @param {Number} rem\n * @returns {number}\n */\nfunction calc(str, rem = DEFAULT_REM) {\n  let koefStr = str.substr(0, str.length - SUFFIX.length);\n  let koef = koefStr === '' ? 1 : parseFloat(koefStr);\n  if (isNaN(koef)) {\n    throw new Error('Invalid rem value: ' + str);\n  }\n  return rem * koef;\n}\n"]},"metadata":{},"sourceType":"module"}