{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/hire-diagnostic/index.tsx\";\n\nimport React, { useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button } from 'react-native-paper';\nimport { createTStyleSheet } from \"../../src/utils/style\";\nimport { useBackButton } from \"../../src/custom-hooks/use-back-button\";\nimport { asAliveOnlyScreenComponent } from \"../../src/utils/smart-lifecycle-components\";\nimport { SelectableFieldCard } from \"../03-field-selection/selectable-field-card\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { useMainSelector } from \"../../redux-things\";\nimport { ClosableHeader, CustomCheckbox } from \"../00-common\";\nimport { confirmQuotationLeave } from \"../../src/utils/alert-messages\";\nexport var HireDiagnostic = asAliveOnlyScreenComponent(function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(new Set()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checkedFields = _React$useState2[0],\n      setCheckedFields = _React$useState2[1];\n\n  var area = useMainSelector(function (state) {\n    return state.interactionData.general.currentArea;\n  });\n  var fields = area.field;\n\n  var _onClose = useCallback(function () {\n    setCheckedFields(new Set());\n  }, []);\n\n  useBackButton(function () {\n    _onClose();\n\n    return 'PROCEED';\n  }, [_onClose]);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, React.createElement(ClosableHeader, {\n    onClose: function onClose() {\n      _onClose();\n\n      void confirmQuotationLeave(navigation);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.mainView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, \"Selecione os talh\\xF5es que deseja contratar\"), React.createElement(View, {\n    style: styles.checkboxView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(CustomCheckbox, {\n    title: React.createElement(View, {\n      style: {\n        alignItems: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: styles.subtitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Todos os talh\\xF5es\"), React.createElement(Text, {\n      style: styles.selected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, checkedFields.size, \" Selecionados\")),\n    status: fields.length === checkedFields.size ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      setCheckedFields(fields.length === checkedFields.size ? new Set() : new Set(fields));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  })), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.gridView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }, fields.slice().map(function (field) {\n    return React.createElement(SelectableFieldCard, {\n      key: field.id.toString(),\n      isDiagnosisMode: true,\n      isSelected: checkedFields.has(field),\n      field: field,\n      onPress: function onPress() {\n        setCheckedFields(function (checkedFields) {\n          if (checkedFields.has(field)) checkedFields.delete(field);else checkedFields.add(field);\n          return new Set(checkedFields);\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 8\n      }\n    });\n  }))), React.createElement(Button, {\n    uppercase: false,\n    disabled: checkedFields.size === 0,\n    mode: \"contained\",\n    style: styles.button,\n    labelStyle: styles.buttonText,\n    onPress: function onPress() {\n      navigation.navigate('HiringReview', {\n        selectedFields: _toConsumableArray(checkedFields)\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, \"Continuar\")));\n});\nvar styles = createTStyleSheet({\n  mainView: {\n    flex: 1,\n    backgroundColor: 'white',\n    paddingHorizontal: '24rem'\n  },\n  checkboxView: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginVertical: '16rem',\n    flexDirection: 'row'\n  },\n  listView: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginHorizontal: '2rem'\n  },\n  button: {\n    marginVertical: '24rem',\n    height: '45rem',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  subtitle: {\n    fontSize: '16rem',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  selected: {\n    fontSize: '12rem',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: '#78849E'\n  },\n  titleText: {\n    paddingLeft: '8rem',\n    fontSize: '23rem'\n  },\n  buttonText: {\n    fontSize: '14rem'\n  },\n  gridView: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/hire-diagnostic/index.tsx"],"names":["React","useCallback","Button","createTStyleSheet","useBackButton","asAliveOnlyScreenComponent","SelectableFieldCard","ScrollView","useMainSelector","ClosableHeader","CustomCheckbox","confirmQuotationLeave","HireDiagnostic","navigation","useState","Set","checkedFields","setCheckedFields","area","state","interactionData","general","currentArea","fields","field","onClose","flex","styles","mainView","titleText","checkboxView","alignItems","subtitle","selected","size","length","gridView","slice","map","id","toString","has","delete","add","button","buttonText","navigate","selectedFields","backgroundColor","paddingHorizontal","justifyContent","marginVertical","flexDirection","listView","flexWrap","marginHorizontal","height","width","fontSize","color","paddingLeft","display"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { View, Text } from 'react-native';\n// import { Button, List } from 'react-native-paper';\nimport { Button } from 'react-native-paper';\nimport { createTStyleSheet } from '../../src/utils/style';\n\nimport { useBackButton } from '../../src/custom-hooks/use-back-button';\nimport { asAliveOnlyScreenComponent } from '../../src/utils/smart-lifecycle-components';\n\nimport { SelectableFieldCard } from '../03-field-selection/selectable-field-card';\n\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { useMainSelector } from '../../redux-things';\nimport { ClosableHeader, CustomCheckbox } from '../00-common';\n\nimport { AgroXScreenProps } from '../navigation-types';\n// import { Models, PulverizationMethods } from '../../models';\nimport { Models } from '../../models';\n// import { getLatestDiagnosis, getLatestPrescriptionPulverizationMethod } from '../../src/utils';\nimport { confirmQuotationLeave } from '../../src/utils/alert-messages';\n\ntype ScreenProps = AgroXScreenProps<'HireDiagnostic'>;\n\nexport const HireDiagnostic = asAliveOnlyScreenComponent(({ navigation }: ScreenProps) => {\n\tconst [checkedFields, setCheckedFields] = React.useState(new Set<Models.field>());\n\t// const [expanded, setExpanded] = React.useState(true);\n\n\t// const handlePress = () => setExpanded(!expanded);\n\n\tconst area = useMainSelector((state) => state.interactionData.general.currentArea)!;\n\tconst fields: Models.field[] = area.field;\n\t// for (const field of area.field) {\n\t// \tconsole.log('teste:  ', field.area_ha);\n\t// \tif (getLatestPrescriptionPulverizationMethod(field) !== PulverizationMethods.NOT_AVAILABLE) fields.push(field);\n\t// }\n\n\tconst onClose = useCallback(() => {\n\t\tsetCheckedFields(new Set<Models.field>());\n\t}, []);\n\n\tuseBackButton(() => {\n\t\tonClose();\n\t\treturn 'PROCEED';\n\t}, [onClose]);\n\n\t// function compare(a: Models.field, b: Models.field) {\n\t// \tif (getLatestDiagnosis(a)!.affected_area_ha > getLatestDiagnosis(b)!.affected_area_ha) return -1;\n\t// \tif (getLatestDiagnosis(b)!.affected_area_ha > getLatestDiagnosis(a)!.affected_area_ha) return 1;\n\t// \treturn 0;\n\t// }\n\n\treturn (\n\t\t<View style={{ flex: 1 }}>\n\t\t\t<ClosableHeader\n\t\t\t\tonClose={() => {\n\t\t\t\t\tonClose();\n\t\t\t\t\tvoid confirmQuotationLeave(navigation);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<View style={styles.mainView}>\n\t\t\t\t<Text style={styles.titleText}>Selecione os talhões que deseja contratar</Text>\n\t\t\t\t<View style={styles.checkboxView}>\n\t\t\t\t\t<CustomCheckbox\n\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t<View style={{ alignItems: 'flex-start' }}>\n\t\t\t\t\t\t\t\t<Text style={styles.subtitle}>Todos os talhões</Text>\n\t\t\t\t\t\t\t\t<Text style={styles.selected}>{checkedFields.size} Selecionados</Text>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstatus={fields.length === checkedFields.size ? 'checked' : 'unchecked'}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tsetCheckedFields(fields.length === checkedFields.size ? new Set() : new Set(fields));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t\t<ScrollView>\n\t\t\t\t\t{/* <List.Section> */}\n\t\t\t\t\t{/* <List.Accordion title=\"Área 1\" expanded={expanded} onPress={handlePress}> */}\n\t\t\t\t\t<View style={styles.gridView}>\n\t\t\t\t\t\t{fields.slice().map((field) => (\n\t\t\t\t\t\t\t<SelectableFieldCard\n\t\t\t\t\t\t\t\tkey={field.id.toString()}\n\t\t\t\t\t\t\t\tisDiagnosisMode\n\t\t\t\t\t\t\t\tisSelected={checkedFields.has(field)}\n\t\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\tsetCheckedFields((checkedFields) => {\n\t\t\t\t\t\t\t\t\t\tif (checkedFields.has(field)) checkedFields.delete(field);\n\t\t\t\t\t\t\t\t\t\telse checkedFields.add(field);\n\t\t\t\t\t\t\t\t\t\treturn new Set(checkedFields);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</View>\n\t\t\t\t\t{/* </List.Accordion> */}\n\t\t\t\t\t{/* </List.Section> */}\n\t\t\t\t</ScrollView>\n\t\t\t\t<Button\n\t\t\t\t\tuppercase={false}\n\t\t\t\t\tdisabled={checkedFields.size === 0}\n\t\t\t\t\tmode=\"contained\"\n\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\tlabelStyle={styles.buttonText}\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tnavigation.navigate('HiringReview', { selectedFields: [...checkedFields] });\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tContinuar\n\t\t\t\t</Button>\n\t\t\t</View>\n\t\t</View>\n\t);\n});\n\nconst styles = createTStyleSheet({\n\tmainView: {\n\t\tflex: 1,\n\t\tbackgroundColor: 'white',\n\t\tpaddingHorizontal: '24rem',\n\t},\n\tcheckboxView: {\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-between',\n\t\tmarginVertical: '16rem',\n\t\tflexDirection: 'row',\n\t},\n\tlistView: {\n\t\tflexDirection: 'row',\n\t\tflexWrap: 'wrap',\n\t\tmarginHorizontal: '2rem',\n\t},\n\tbutton: {\n\t\tmarginVertical: '24rem',\n\t\theight: '45rem',\n\t\tjustifyContent: 'center',\n\t\twidth: '100%',\n\t},\n\tsubtitle: {\n\t\tfontSize: '16rem',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tselected: {\n\t\tfontSize: '12rem',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tcolor: '#78849E',\n\t},\n\ttitleText: {\n\t\tpaddingLeft: '8rem',\n\t\tfontSize: '23rem',\n\t},\n\tbuttonText: {\n\t\tfontSize: '14rem',\n\t},\n\tgridView: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tflexWrap: 'wrap',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}