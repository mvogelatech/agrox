{"ast":null,"code":"import { useNavigationState } from '@react-navigation/native';\nexport function useIsAlive(route) {\n  var history = useNavigationState(function (state) {\n    return state.history;\n  });\n  if (!history) return false;\n  return history.some(function (history_item) {\n    return (history_item == null ? void 0 : history_item.key) === route.key;\n  });\n}","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/src/custom-hooks/use-is-alive.ts"],"names":["useNavigationState","useIsAlive","route","history","state","some","history_item","key"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,0BAAnC;AAYA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAAiE;AACvE,MAAMC,OAAO,GAAGH,kBAAkB,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACD,OAAjB;AAAA,GAAD,CAAlC;AACA,MAAI,CAACA,OAAL,EAAc,OAAO,KAAP;AAEd,SAAOA,OAAO,CAACE,IAAR,CAAa,UAACC,YAAD;AAAA,WAAkB,CAACA,YAAD,oBAACA,YAAD,CAAuBC,GAAvB,MAA+BL,KAAK,CAACK,GAAvD;AAAA,GAAb,CAAP;AACA","sourcesContent":["import { useNavigationState } from '@react-navigation/native';\n\ntype RoutePropForIsAliveChecking = {\n\tkey: string;\n\tname: string;\n};\n\n/**\n * Check whether or not the given route is alive in the navigation stack\n *\n * @returns boolean\n */\nexport function useIsAlive(route: RoutePropForIsAliveChecking): boolean {\n\tconst history = useNavigationState((state) => state.history);\n\tif (!history) return false;\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\treturn history.some((history_item) => (history_item as any)?.key === route.key);\n}\n"]},"metadata":{},"sourceType":"module"}