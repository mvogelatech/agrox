{"ast":null,"code":"var SCALABLE_PROPS = ['width', 'height', 'margin', 'padding', 'fontsize', 'radius'];\nexport default {\n  isScalable: isScalable,\n  calc: calc\n};\n\nfunction isScalable(value, prop) {\n  return typeof value === 'number' && isScalableProp(prop);\n}\n\nfunction calc(value, scaleFactor) {\n  if (typeof value !== 'number') {\n    throw new Error('Invalid value for scale: ' + value);\n  }\n\n  if (typeof scaleFactor !== 'number') {\n    throw new Error('Invalid scaleFactor for scale: ' + scaleFactor);\n  }\n\n  return value * scaleFactor;\n}\n\nfunction isScalableProp(prop) {\n  if (typeof prop !== 'string') {\n    return false;\n  }\n\n  prop = prop.toLowerCase();\n  return SCALABLE_PROPS.some(function (p) {\n    return prop.indexOf(p) >= 0;\n  });\n}","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/node_modules/react-native-extended-stylesheet/src/replacers/scale.js"],"names":["SCALABLE_PROPS","isScalable","calc","value","prop","isScalableProp","scaleFactor","Error","toLowerCase","some","p","indexOf"],"mappings":"AAIA,IAAMA,cAAc,GAAG,CACrB,OADqB,EAErB,QAFqB,EAGrB,QAHqB,EAIrB,SAJqB,EAKrB,UALqB,EAMrB,QANqB,CAAvB;AASA,eAAe;AACbC,EAAAA,UAAU,EAAVA,UADa;AAEbC,EAAAA,IAAI,EAAJA;AAFa,CAAf;;AAWA,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,IAA3B,EAAiC;AAC/B,SAAO,OAAOD,KAAP,KAAiB,QAAjB,IAA6BE,cAAc,CAACD,IAAD,CAAlD;AACD;;AAQD,SAASF,IAAT,CAAcC,KAAd,EAAqBG,WAArB,EAAkC;AAChC,MAAI,OAAOH,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAII,KAAJ,CAAU,8BAA8BJ,KAAxC,CAAN;AACD;;AACD,MAAI,OAAOG,WAAP,KAAuB,QAA3B,EAAqC;AACnC,UAAM,IAAIC,KAAJ,CAAU,oCAAoCD,WAA9C,CAAN;AACD;;AACD,SAAOH,KAAK,GAAGG,WAAf;AACD;;AAED,SAASD,cAAT,CAAwBD,IAAxB,EAA8B;AAC5B,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AACDA,EAAAA,IAAI,GAAGA,IAAI,CAACI,WAAL,EAAP;AACA,SAAOR,cAAc,CAACS,IAAf,CAAoB,UAAAC,CAAC,EAAI;AAC9B,WAAON,IAAI,CAACO,OAAL,CAAaD,CAAb,KAAmB,CAA1B;AACD,GAFM,CAAP;AAGD","sourcesContent":["/**\n * Scale property if needed\n */\n\nconst SCALABLE_PROPS = [\n  'width',\n  'height',\n  'margin',\n  'padding',\n  'fontsize',\n  'radius',\n];\n\nexport default {\n  isScalable,\n  calc,\n};\n\n/**\n * Is value & property scalable\n * @param {*} value\n * @param {String} prop\n * @returns {Boolean}\n */\nfunction isScalable(value, prop) {\n  return typeof value === 'number' && isScalableProp(prop);\n}\n\n/**\n * Performs scaling\n * @param {Number} value\n * @param {Number} scaleFactor\n * @returns {number}\n */\nfunction calc(value, scaleFactor) {\n  if (typeof value !== 'number') {\n    throw new Error('Invalid value for scale: ' + value);\n  }\n  if (typeof scaleFactor !== 'number') {\n    throw new Error('Invalid scaleFactor for scale: ' + scaleFactor);\n  }\n  return value * scaleFactor;\n}\n\nfunction isScalableProp(prop) {\n  if (typeof prop !== 'string') {\n    return false;\n  }\n  prop = prop.toLowerCase();\n  return SCALABLE_PROPS.some(p => {\n    return prop.indexOf(p) >= 0;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}