{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/02-general/bottom-cards/overview-details/overview-details.tsx\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createTStyleSheet } from \"../../../../src/utils/style\";\nimport { CardTitle } from \"../../../00-common/card-title\";\nimport { useMainSelector } from \"../../../../redux-things\";\nimport { getLatestCrop, getAllFieldsAreaHA } from \"../../../../src/utils\";\n\nfunction getFieldTypes(fields) {\n  var types = [];\n\n  for (var _iterator = _createForOfIteratorHelperLoose(fields), _step; !(_step = _iterator()).done;) {\n    var _field = _step.value;\n    var latestCrop = getLatestCrop(_field);\n    if (latestCrop) types.push(latestCrop.crop_type);\n  }\n\n  return types;\n}\n\nexport function OverviewDetails(props) {\n  var area = useMainSelector(function (state) {\n    return state.interactionData.general.currentArea;\n  });\n  var cropTypes = getFieldTypes(area.field);\n  return React.createElement(View, {\n    style: styles.mainView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, React.createElement(CardTitle, {\n    text: \"Detalhes\",\n    titleIcon: \"info\",\n    onClose: props.onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.contentView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.columnsView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }\n  }, \"TIPO(S) DE PLANTIO\"), React.createElement(Text, {\n    numberOfLines: 3,\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }\n  }, cropTypes.length === 0 ? '-' : _toConsumableArray(new Set(cropTypes)).join(', '))), React.createElement(View, {\n    style: styles.columnsView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }, \"\\xC1REA (HA)\"), React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.content2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, getAllFieldsAreaHA(area).toFixed(2))), React.createElement(View, {\n    style: styles.columnsView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }\n  }, \"TALH\\xD5ES\"), React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.content2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  }, area.field.length))));\n}\nvar styles = createTStyleSheet({\n  mainView: {\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    justifyContent: 'flex-end',\n    backgroundColor: 'white'\n  },\n  contentView: {\n    height: '100rem',\n    marginTop: '16rem',\n    marginHorizontal: '16rem',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  header: {\n    fontSize: '14rem',\n    color: '#78849E'\n  },\n  content: {\n    fontSize: '14rem',\n    color: '#6C6464'\n  },\n  content2: {\n    fontSize: '28rem'\n  },\n  columnsView: {\n    flexDirection: 'column',\n    maxWidth: '140rem'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/02-general/bottom-cards/overview-details/overview-details.tsx"],"names":["React","createTStyleSheet","CardTitle","useMainSelector","getLatestCrop","getAllFieldsAreaHA","getFieldTypes","fields","types","field","latestCrop","push","crop_type","OverviewDetails","props","area","state","interactionData","general","currentArea","cropTypes","styles","mainView","onClose","contentView","columnsView","header","content","length","Set","join","content2","toFixed","flexDirection","alignItems","justifyContent","backgroundColor","height","marginTop","marginHorizontal","fontSize","color","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text } from 'react-native';\nimport { createTStyleSheet } from '../../../../src/utils/style';\n\nimport { CardTitle } from '../../../00-common/card-title';\nimport { useMainSelector } from '../../../../redux-things';\nimport { CloseableBottomCardProps } from '../closeable-bottom-card-props';\nimport { getLatestCrop, getAllFieldsAreaHA } from '../../../../src/utils';\nimport { Models } from '../../../../models';\n\nfunction getFieldTypes(fields: Models.field[]) {\n\tconst types = [];\n\tfor (const field of fields) {\n\t\tconst latestCrop = getLatestCrop(field);\n\t\tif (latestCrop) types.push(latestCrop.crop_type);\n\t}\n\n\treturn types;\n}\n\nexport function OverviewDetails(props: CloseableBottomCardProps) {\n\tconst area = useMainSelector((state) => state.interactionData.general.currentArea)!;\n\tconst cropTypes = getFieldTypes(area.field);\n\n\treturn (\n\t\t<View style={styles.mainView}>\n\t\t\t<CardTitle text=\"Detalhes\" titleIcon=\"info\" onClose={props.onClose} />\n\n\t\t\t<View style={styles.contentView}>\n\t\t\t\t<View style={styles.columnsView}>\n\t\t\t\t\t<Text style={styles.header}>TIPO(S) DE PLANTIO</Text>\n\t\t\t\t\t<Text numberOfLines={3} style={styles.content}>\n\t\t\t\t\t\t{cropTypes.length === 0 ? '-' : [...new Set(cropTypes)].join(', ')}\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\n\t\t\t\t<View style={styles.columnsView}>\n\t\t\t\t\t<Text style={styles.header}>ÁREA (HA)</Text>\n\t\t\t\t\t<Text numberOfLines={1} style={styles.content2}>\n\t\t\t\t\t\t{getAllFieldsAreaHA(area).toFixed(2)}\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\n\t\t\t\t<View style={styles.columnsView}>\n\t\t\t\t\t<Text style={styles.header}>TALHÕES</Text>\n\t\t\t\t\t<Text numberOfLines={1} style={styles.content2}>\n\t\t\t\t\t\t{area.field.length}\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = createTStyleSheet({\n\tmainView: {\n\t\tflexDirection: 'column',\n\t\talignItems: 'stretch',\n\t\tjustifyContent: 'flex-end',\n\t\tbackgroundColor: 'white',\n\t},\n\tcontentView: {\n\t\theight: '100rem',\n\t\tmarginTop: '16rem',\n\t\tmarginHorizontal: '16rem',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'space-between',\n\t},\n\theader: {\n\t\tfontSize: '14rem',\n\t\tcolor: '#78849E',\n\t},\n\tcontent: {\n\t\tfontSize: '14rem',\n\t\tcolor: '#6C6464',\n\t},\n\tcontent2: {\n\t\tfontSize: '28rem',\n\t},\n\tcolumnsView: {\n\t\tflexDirection: 'column',\n\t\tmaxWidth: '140rem',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}