{"ast":null,"code":"import { combineReducers } from 'redux';\nimport ExpoFileSystemStorage from 'redux-persist-expo-filesystem';\nimport { persistReducer } from 'redux-persist';\nimport createReduxPersistCompressTransform from 'redux-persist-transform-compress';\nimport { reducer as networkReducer } from 'react-native-offline';\nimport mainTreeReducer, { persistList as mainTreeStatesToPersist } from \"./tree\";\nexport var rootReducerWithPersist = combineReducers({\n  mainTree: persistReducer({\n    key: 'mainTree',\n    keyPrefix: 'agroexplore',\n    storage: ExpoFileSystemStorage,\n    whitelist: mainTreeStatesToPersist,\n    timeout: 0,\n    transforms: [createReduxPersistCompressTransform()]\n  }, mainTreeReducer),\n  network: networkReducer\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/redux-things/root-structure.ts"],"names":["combineReducers","ExpoFileSystemStorage","persistReducer","createReduxPersistCompressTransform","reducer","networkReducer","mainTreeReducer","persistList","mainTreeStatesToPersist","rootReducerWithPersist","mainTree","key","keyPrefix","storage","whitelist","timeout","transforms","network"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,qBAAP,MAAkC,+BAAlC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,mCAAP,MAAgD,kCAAhD;AAEA,SAASC,OAAO,IAAIC,cAApB,QAA0C,sBAA1C;AAGA,OAAOC,eAAP,IAA0BC,WAAW,IAAIC,uBAAzC;AASA,OAAO,IAAMC,sBAAsB,GAAGT,eAAe,CAAC;AACrDU,EAAAA,QAAQ,EAAER,cAAc,CACvB;AACCS,IAAAA,GAAG,EAAE,UADN;AAECC,IAAAA,SAAS,EAAE,aAFZ;AAGCC,IAAAA,OAAO,EAAEZ,qBAHV;AAICa,IAAAA,SAAS,EAAEN,uBAJZ;AAKCO,IAAAA,OAAO,EAAE,CALV;AAMCC,IAAAA,UAAU,EAAE,CAACb,mCAAmC,EAApC;AANb,GADuB,EASvBG,eATuB,CAD6B;AAYrDW,EAAAA,OAAO,EAAEZ;AAZ4C,CAAD,CAA9C","sourcesContent":["import { combineReducers } from 'redux';\nimport ExpoFileSystemStorage from 'redux-persist-expo-filesystem';\nimport { persistReducer } from 'redux-persist';\nimport createReduxPersistCompressTransform from 'redux-persist-transform-compress';\n\nimport { reducer as networkReducer } from 'react-native-offline';\nimport type { NetworkState } from 'react-native-offline/dist/src/types';\n\nimport mainTreeReducer, { persistList as mainTreeStatesToPersist, State as MainState } from './tree';\n\nexport type RootReduxState = {\n\t// TODO: Improve this TypeScript definition to enforce this object has the same structure as `rootReducerWithPersist`.\n\tmainTree: MainState;\n\tnetwork: NetworkState;\n};\n\n// TODO: Check when and how data should be persisted (ex. updating the app)\nexport const rootReducerWithPersist = combineReducers({\n\tmainTree: persistReducer(\n\t\t{\n\t\t\tkey: 'mainTree',\n\t\t\tkeyPrefix: 'agroexplore', // The key prefix can be anything matching \\w+, it's here to override the default which has a colon\n\t\t\tstorage: ExpoFileSystemStorage,\n\t\t\twhitelist: mainTreeStatesToPersist,\n\t\t\ttimeout: 0,\n\t\t\ttransforms: [createReduxPersistCompressTransform()],\n\t\t},\n\t\tmainTreeReducer,\n\t),\n\tnetwork: networkReducer,\n});\n"]},"metadata":{},"sourceType":"module"}