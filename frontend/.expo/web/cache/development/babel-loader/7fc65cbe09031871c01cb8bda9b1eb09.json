{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { ky, kyWithoutAuth } from \"./ky\";\nimport { getAuthDataWithoutStateUpdate, dispatch } from \"../../redux-things/utils\";\nexport function getAuthenticatedUserId() {\n  return _regeneratorRuntime.async(function getAuthenticatedUserId$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", getAuthDataWithoutStateUpdate().userId);\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getAuthenticatedUserToken() {\n  return _regeneratorRuntime.async(function getAuthenticatedUserToken$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", getAuthDataWithoutStateUpdate().userToken);\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function userSignOut() {\n  return _regeneratorRuntime.async(function userSignOut$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          dispatch({\n            type: 'GLOBAL_RESET'\n          });\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function userSignIn(username, password) {\n  var _await$kyWithoutAuth$, access_token, profile;\n\n  return _regeneratorRuntime.async(function userSignIn$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log('user', username);\n          console.log('pass', password);\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(kyWithoutAuth.post('login', {\n            json: {\n              username: username,\n              password: password\n            }\n          }).json());\n\n        case 4:\n          _await$kyWithoutAuth$ = _context4.sent;\n          access_token = _await$kyWithoutAuth$.access_token;\n          console.log('entrou login2', access_token);\n          dispatch({\n            type: 'SET_AUTH_DATA_USER_TOKEN',\n            userToken: access_token\n          });\n          _context4.next = 10;\n          return _regeneratorRuntime.awrap(ky.get('profile').json());\n\n        case 10:\n          profile = _context4.sent;\n\n          if (profile) {\n            dispatch({\n              type: 'SET_AUTH_DATA_USER_ID',\n              userId: profile.userId\n            });\n          }\n\n          return _context4.abrupt(\"return\", profile !== null);\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function userSignInFromCode(code) {\n  return _regeneratorRuntime.async(function userSignInFromCode$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", userSignIn(\"''\", code));\n\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/src/network/auth.ts"],"names":["ky","kyWithoutAuth","getAuthDataWithoutStateUpdate","dispatch","getAuthenticatedUserId","userId","getAuthenticatedUserToken","userToken","userSignOut","type","userSignIn","username","password","console","log","post","json","access_token","get","profile","userSignInFromCode","code"],"mappings":";AAAA,SAASA,EAAT,EAAaC,aAAb;AACA,SAASC,6BAAT,EAAwCC,QAAxC;AAWA,OAAO,SAAeC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,2CACCF,6BAA6B,GAAGG,MADjC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP,OAAO,SAAeC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,4CACCJ,6BAA6B,GAAGK,SADjC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP,OAAO,SAAeC,WAAf;AAAA;AAAA;AAAA;AAAA;AACNL,UAAAA,QAAQ,CAAC;AAAEM,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAR;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP,OAAO,SAAeC,UAAf,CAA0BC,QAA1B,EAA4CC,QAA5C;AAAA;;AAAA;AAAA;AAAA;AAAA;AACNC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,QAApB;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,QAApB;AAFM;AAAA,2CAGyBX,aAAa,CAACc,IAAd,CAAmB,OAAnB,EAA4B;AAAEC,YAAAA,IAAI,EAAE;AAAEL,cAAAA,QAAQ,EAARA,QAAF;AAAYC,cAAAA,QAAQ,EAARA;AAAZ;AAAR,WAA5B,EAA8DI,IAA9D,EAHzB;;AAAA;AAAA;AAGEC,UAAAA,YAHF,yBAGEA,YAHF;AAINJ,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,YAA7B;AACAd,UAAAA,QAAQ,CAAC;AAAEM,YAAAA,IAAI,EAAE,0BAAR;AAAoCF,YAAAA,SAAS,EAAEU;AAA/C,WAAD,CAAR;AALM;AAAA,2CAMgBjB,EAAE,CAACkB,GAAH,CAAO,SAAP,EAAkBF,IAAlB,EANhB;;AAAA;AAMAG,UAAAA,OANA;;AASN,cAAIA,OAAJ,EAAa;AACZhB,YAAAA,QAAQ,CAAC;AAAEM,cAAAA,IAAI,EAAE,uBAAR;AAAiCJ,cAAAA,MAAM,EAAEc,OAAO,CAACd;AAAjD,aAAD,CAAR;AACA;;AAXK,4CAaCc,OAAO,KAAK,IAbb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBP,OAAO,SAAeC,kBAAf,CAAkCC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,4CACCX,UAAU,CAAC,IAAD,EAAOW,IAAP,CADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { ky, kyWithoutAuth } from './ky';\nimport { getAuthDataWithoutStateUpdate, dispatch } from '../../redux-things/utils';\n\nexport type UserProfile = {\n\tusername: string;\n\tuserId: number;\n};\n\nexport type LoginResponse = {\n\taccess_token: string;\n};\n\nexport async function getAuthenticatedUserId(): Promise<number | null> {\n\treturn getAuthDataWithoutStateUpdate().userId;\n}\n\nexport async function getAuthenticatedUserToken(): Promise<string | null> {\n\treturn getAuthDataWithoutStateUpdate().userToken;\n}\n\nexport async function userSignOut() {\n\tdispatch({ type: 'GLOBAL_RESET' });\n}\n\nexport async function userSignIn(username: string, password: string): Promise<boolean> {\n\tconsole.log('user', username);\n\tconsole.log('pass', password);\n\tconst { access_token } = await kyWithoutAuth.post('login', { json: { username, password } }).json<LoginResponse>();\n\tconsole.log('entrou login2', access_token);\n\tdispatch({ type: 'SET_AUTH_DATA_USER_TOKEN', userToken: access_token });\n\tconst profile = await ky.get('profile').json<UserProfile>();\n\n\t// get user profile and store on device\n\tif (profile) {\n\t\tdispatch({ type: 'SET_AUTH_DATA_USER_ID', userId: profile.userId });\n\t}\n\n\treturn profile !== null;\n}\n\nexport async function userSignInFromCode(code: string): Promise<boolean> {\n\treturn userSignIn(\"''\", code);\n}\n"]},"metadata":{},"sourceType":"module"}