{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Style from \"./style\";\nimport utils from \"./utils\";\nimport vars from \"./replacers/vars\";\nimport mediaQueries from \"./replacers/media-queries\";\n\nvar _default = function () {\n  function _default(source) {\n    _classCallCheck(this, _default);\n\n    this.source = source;\n    this.result = {};\n    this.cache = new Map();\n    this.nativeSheet = {};\n    this.globalVars = null;\n    this.localVars = null;\n    this.allVars = null;\n    this.processedSource = null;\n  }\n\n  _createClass(_default, [{\n    key: \"calc\",\n    value: function calc(globalVars) {\n      this.globalVars = globalVars;\n      this.clearResult();\n\n      if (this.hasCache()) {\n        this.applyCache();\n      } else {\n        this.processMediaQueries();\n        this.calcVars();\n        this.calcStyles();\n        this.calcNative();\n        this.storeCache();\n      }\n\n      return this.getResult();\n    }\n  }, {\n    key: \"processMediaQueries\",\n    value: function processMediaQueries() {\n      this.processedSource = mediaQueries.process(this.source);\n    }\n  }, {\n    key: \"calcVars\",\n    value: function calcVars() {\n      var rawLocalVars = vars.extract(this.processedSource);\n\n      if (rawLocalVars) {\n        this.localVars = new Style(rawLocalVars, [rawLocalVars, this.globalVars]).calc().calculatedVars;\n\n        _extends(this.result, this.localVars);\n      } else {\n        this.localVars = null;\n      }\n\n      this.allVars = [this.localVars, this.globalVars].filter(Boolean);\n    }\n  }, {\n    key: \"calcStyles\",\n    value: function calcStyles() {\n      var _this = this;\n\n      var extractedStyles = utils.excludeKeys(this.processedSource, this.localVars);\n      Object.keys(extractedStyles).forEach(function (key) {\n        var styles = extractedStyles[key];\n\n        if (typeof styles === 'function') {\n          styles = styles();\n        }\n\n        if (styles && typeof styles === 'object') {\n          _this.calcStyle(key, styles);\n        } else {\n          _this.result[key] = styles;\n        }\n      });\n    }\n  }, {\n    key: \"calcStyle\",\n    value: function calcStyle(key, styleProps) {\n      var style = new Style(styleProps, this.allVars);\n\n      var _style$calc = style.calc(),\n          calculatedProps = _style$calc.calculatedProps,\n          calculatedVars = _style$calc.calculatedVars;\n\n      var merged = _extends({}, calculatedVars, calculatedProps);\n\n      if (key.charAt(0) === '_') {\n        this.result[key] = merged;\n      } else {\n        this.result['_' + key] = merged;\n        this.nativeSheet[key] = calculatedProps;\n      }\n    }\n  }, {\n    key: \"calcNative\",\n    value: function calcNative() {\n      if (Object.keys(this.nativeSheet).length) {\n        var rnStyleSheet = StyleSheet.create(this.nativeSheet);\n\n        _extends(this.result, rnStyleSheet);\n      }\n    }\n  }, {\n    key: \"getResult\",\n    value: function getResult() {\n      return this.result;\n    }\n  }, {\n    key: \"clearResult\",\n    value: function clearResult() {\n      var _this2 = this;\n\n      Object.keys(this.result).forEach(function (key) {\n        return delete _this2.result[key];\n      });\n    }\n  }, {\n    key: \"hasCache\",\n    value: function hasCache() {\n      var key = this.getCacheKey();\n      return key && this.cache.has(key);\n    }\n  }, {\n    key: \"applyCache\",\n    value: function applyCache() {\n      var cachedResult = this.cache.get(this.getCacheKey());\n\n      _extends(this.result, cachedResult);\n    }\n  }, {\n    key: \"storeCache\",\n    value: function storeCache() {\n      var key = this.getCacheKey();\n\n      if (key) {\n        this.cache.set(key, _extends({}, this.result));\n      }\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this.cache.clear();\n    }\n  }, {\n    key: \"getCacheKey\",\n    value: function getCacheKey() {\n      return this.globalVars && this.globalVars.$theme;\n    }\n  }]);\n\n  return _default;\n}();\n\nexport { _default as default };","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/node_modules/react-native-extended-stylesheet/src/sheet.js"],"names":["Style","utils","vars","mediaQueries","source","result","cache","Map","nativeSheet","globalVars","localVars","allVars","processedSource","clearResult","hasCache","applyCache","processMediaQueries","calcVars","calcStyles","calcNative","storeCache","getResult","process","rawLocalVars","extract","calc","calculatedVars","filter","Boolean","extractedStyles","excludeKeys","Object","keys","forEach","key","styles","calcStyle","styleProps","style","calculatedProps","merged","charAt","length","rnStyleSheet","StyleSheet","create","getCacheKey","has","cachedResult","get","set","clear","$theme"],"mappings":"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","sourcesContent":["import {StyleSheet} from 'react-native';\nimport Style from './style';\nimport utils from './utils';\nimport vars from './replacers/vars';\nimport mediaQueries from './replacers/media-queries';\n\nexport default class {\n  /**\n   * Constructor\n   * @param {Object} source\n   */\n  constructor(source) {\n    this.source = source;\n    this.result = {};\n    this.cache = new Map(); // cache result for each theme\n    this.nativeSheet = {};\n    this.globalVars = null;\n    this.localVars = null;\n    this.allVars = null;\n    this.processedSource = null;\n  }\n\n  /**\n   * Calculates sheet and update result\n   * @param {Object} globalVars\n   */\n  calc(globalVars) {\n    this.globalVars = globalVars;\n    this.clearResult();\n    if (this.hasCache()) {\n      this.applyCache();\n    } else {\n      this.processMediaQueries();\n      this.calcVars();\n      this.calcStyles();\n      this.calcNative();\n      this.storeCache();\n    }\n    return this.getResult();\n  }\n\n  processMediaQueries() {\n    this.processedSource = mediaQueries.process(this.source);\n  }\n\n  calcVars() {\n    const rawLocalVars = vars.extract(this.processedSource);\n    if (rawLocalVars) {\n      this.localVars = new Style(rawLocalVars, [rawLocalVars, this.globalVars]).calc().calculatedVars;\n      Object.assign(this.result, this.localVars);\n    } else {\n      this.localVars = null;\n    }\n    this.allVars = [this.localVars, this.globalVars].filter(Boolean);\n  }\n\n  calcStyles() {\n    const extractedStyles = utils.excludeKeys(this.processedSource, this.localVars);\n    Object.keys(extractedStyles).forEach(key => {\n      let styles = extractedStyles[key];\n      if (typeof styles === 'function') {\n        styles = styles();\n      }\n      if (styles && typeof styles === 'object') {\n        this.calcStyle(key, styles);\n      } else {\n        // copy primitive values to result as-is\n        this.result[key] = styles;\n      }\n    });\n  }\n\n  calcStyle(key, styleProps) {\n    const style = new Style(styleProps, this.allVars);\n    const {calculatedProps, calculatedVars} = style.calc();\n    const merged = Object.assign({}, calculatedVars, calculatedProps);\n    if (key.charAt(0) === '_') {\n      this.result[key] = merged;\n    } else {\n      this.result['_' + key] = merged;\n      this.nativeSheet[key] = calculatedProps;\n    }\n  }\n\n  calcNative() {\n    if (Object.keys(this.nativeSheet).length) {\n      const rnStyleSheet = StyleSheet.create(this.nativeSheet);\n      Object.assign(this.result, rnStyleSheet);\n    }\n  }\n\n  getResult() {\n    return this.result;\n  }\n\n  clearResult() {\n    Object.keys(this.result).forEach(key => delete this.result[key]);\n  }\n\n  hasCache() {\n    const key = this.getCacheKey();\n    return key && this.cache.has(key);\n  }\n\n  applyCache() {\n    const cachedResult = this.cache.get(this.getCacheKey());\n    Object.assign(this.result, cachedResult);\n  }\n\n  storeCache() {\n    const key = this.getCacheKey();\n    if (key) {\n      this.cache.set(key, Object.assign({}, this.result));\n    }\n  }\n\n  clearCache() {\n    this.cache.clear();\n  }\n\n  getCacheKey() {\n    return this.globalVars && this.globalVars.$theme;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}