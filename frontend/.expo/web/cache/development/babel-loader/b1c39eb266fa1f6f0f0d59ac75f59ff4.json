{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/05-date-selection/index.tsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { createTStyleSheet } from \"../../src/utils/style\";\nimport dayjs from 'dayjs';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport { ClosableHeader } from \"../00-common\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { Button } from 'react-native-paper';\nimport { confirmQuotationLeave } from \"../../src/utils/alert-messages\";\nimport { asAliveOnlyScreenComponent } from \"../../src/utils/smart-lifecycle-components\";\nimport { dispatch } from \"../../redux-things\";\nimport { formatDate } from \"../../src/utils\";\ndayjs.extend(isSameOrAfter);\nexport var DateSelection = asAliveOnlyScreenComponent(function (_ref) {\n  var navigation = _ref.navigation;\n  var dateInterval = 1;\n  var today = dayjs().startOf('day');\n  var nextDay = today.add(dateInterval, 'day');\n\n  var _useState = useState(today),\n      _useState2 = _slicedToArray(_useState, 2),\n      startDate = _useState2[0],\n      setStartDate = _useState2[1];\n\n  var _useState3 = useState(nextDay),\n      _useState4 = _slicedToArray(_useState3, 2),\n      endDate = _useState4[0],\n      setEndDate = _useState4[1];\n\n  var _useState5 = useState('start'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selector = _useState6[0],\n      setSelector = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    setShow(false);\n    var currentDate = dayjs(selectedDate);\n\n    if (currentDate) {\n      var dateTime = new Date();\n      setStartDate(dayjs(dateTime));\n\n      if (selector === 'start') {\n        var _dateTime = new Date();\n\n        setStartDate(dayjs(_dateTime));\n        console.log('auqi kjnlkjnjkbnre', currentDate);\n\n        if (currentDate.isSameOrAfter(endDate)) {\n          setEndDate(currentDate.add(dateInterval, 'day'));\n        }\n      } else if (selector === 'end' && currentDate.isSameOrAfter(startDate.add(dateInterval, 'day'))) setEndDate(currentDate);else ToastAndroid.showWithGravity('Data Inv√°lida! Por favor, selecione novamente.', ToastAndroid.LONG, ToastAndroid.CENTER);\n    }\n  };\n\n  var showDatepicker = function showDatepicker(select) {\n    setSelector(select);\n    setShow(true);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, React.createElement(ClosableHeader, {\n    onBackPress: function onBackPress() {\n      navigation.goBack();\n    },\n    onClose: function onClose() {\n      void confirmQuotationLeave(navigation);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.mainView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, \"Em qual per\\xEDodo voc\\xEA deseja\\nrealizar a pulveriza\\xE7\\xE3o?\"), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }\n  }, show && React.createElement(DateTimePicker, {\n    display: \"spinner\",\n    minimumDate: today.toDate(),\n    value: selector === 'start' ? startDate.toDate() : endDate.toDate(),\n    mode: \"date\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }\n  })), React.createElement(View, {\n    style: styles.dateView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginLeft: '55%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 8\n    }\n  }, \"Terminar em\"), React.createElement(Text, {\n    style: styles.dateBox,\n    onPress: function onPress() {\n      return showDatepicker('end');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 8\n    }\n  }, formatDate(endDate.toISOString()))))), React.createElement(Button, {\n    uppercase: false,\n    disabled: false,\n    mode: \"contained\",\n    style: styles.button,\n    labelStyle: styles.buttonText,\n    onPress: function onPress() {\n      var pulverizationStartDate = startDate.toDate();\n      var pulverizationEndDate = endDate.toDate();\n      dispatch({\n        type: 'CHANGE_START_DATE',\n        pulverizationStartDate: pulverizationStartDate\n      });\n      dispatch({\n        type: 'CHANGE_END_DATE',\n        pulverizationEndDate: pulverizationEndDate\n      });\n      navigation.navigate('QuotationSummary');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, \"Continuar\")));\n});\nvar styles = createTStyleSheet({\n  mainView: {\n    flex: 1,\n    backgroundColor: 'white',\n    paddingHorizontal: '16rem',\n    justifyContent: 'space-between'\n  },\n  titleText: {\n    paddingLeft: '8rem',\n    paddingVertical: '8rem',\n    fontSize: '23rem'\n  },\n  title: {\n    fontSize: '24rem',\n    paddingTop: '24rem'\n  },\n  dateView: {\n    paddingTop: '56rem',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%'\n  },\n  divider: {\n    flex: 1,\n    height: '1rem',\n    marginHorizontal: '16rem',\n    marginTop: '30rem'\n  },\n  dateBox: {\n    paddingHorizontal: '32rem',\n    paddingVertical: '16rem',\n    marginLeft: '40%',\n    marginTop: '8rem',\n    backgroundColor: '#E8E8E8'\n  },\n  button: {\n    marginVertical: '24rem',\n    height: '45rem',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  buttonText: {\n    fontSize: '14rem'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/05-date-selection/index.tsx"],"names":["React","useState","createTStyleSheet","dayjs","isSameOrAfter","ClosableHeader","DateTimePicker","Button","confirmQuotationLeave","asAliveOnlyScreenComponent","dispatch","formatDate","extend","DateSelection","navigation","dateInterval","today","startOf","nextDay","add","startDate","setStartDate","endDate","setEndDate","selector","setSelector","show","setShow","onChange","event","selectedDate","currentDate","dateTime","Date","console","log","ToastAndroid","showWithGravity","LONG","CENTER","showDatepicker","select","flex","goBack","styles","mainView","titleText","toDate","dateView","marginLeft","dateBox","toISOString","button","buttonText","pulverizationStartDate","pulverizationEndDate","type","navigate","backgroundColor","paddingHorizontal","justifyContent","paddingLeft","paddingVertical","fontSize","title","paddingTop","flexDirection","alignItems","width","divider","height","marginHorizontal","marginTop","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, ToastAndroid } from 'react-native';\nimport { createTStyleSheet } from '../../src/utils/style';\nimport dayjs from 'dayjs';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\n\nimport { ClosableHeader } from '../00-common';\nimport { AgroXScreenProps } from '../navigation-types';\nimport DateTimePicker, { Event } from '@react-native-community/datetimepicker';\nimport { Button, Divider } from 'react-native-paper';\nimport { confirmQuotationLeave } from '../../src/utils/alert-messages';\n\nimport { asAliveOnlyScreenComponent } from '../../src/utils/smart-lifecycle-components';\nimport { dispatch } from '../../redux-things';\nimport { formatDate } from '../../src/utils';\n\ndayjs.extend(isSameOrAfter);\n\ntype ScreenProps = AgroXScreenProps<'DateSelection'>;\n\nexport const DateSelection = asAliveOnlyScreenComponent(({ navigation }: ScreenProps) => {\n\tconst dateInterval = 1;\n\tconst today = dayjs().startOf('day');\n\tconst nextDay = today.add(dateInterval, 'day');\n\n\tconst [startDate, setStartDate] = useState(today);\n\tconst [endDate, setEndDate] = useState(nextDay);\n\tconst [selector, setSelector] = useState('start');\n\n\tconst [show, setShow] = useState(false);\n\n\tconst onChange = (event: Event, selectedDate: Date | undefined) => {\n\t\tsetShow(false);\n\t\tconst currentDate = dayjs(selectedDate);\n\t\t// If OK is pressed on the DatePicker\n\t\tif (currentDate) {\n\t\t\t// And the desired start date is today or later\n\t\t\tconst dateTime = new Date();\n\t\t\tsetStartDate(dayjs(dateTime));\n\t\t\tif (selector === 'start') {\n\t\t\t\tconst dateTime = new Date();\n\t\t\t\tsetStartDate(dayjs(dateTime));\n\t\t\t\tconsole.log('auqi kjnlkjnjkbnre', currentDate);\n\t\t\t\tif (currentDate.isSameOrAfter(endDate)) {\n\t\t\t\t\tsetEndDate(currentDate.add(dateInterval, 'day'));\n\t\t\t\t}\n\t\t\t} else if (selector === 'end' && currentDate.isSameOrAfter(startDate.add(dateInterval, 'day'))) setEndDate(currentDate);\n\t\t\telse ToastAndroid.showWithGravity('Data Inv√°lida! Por favor, selecione novamente.', ToastAndroid.LONG, ToastAndroid.CENTER);\n\t\t}\n\t};\n\n\tconst showDatepicker = (select: string) => {\n\t\tsetSelector(select);\n\t\tsetShow(true);\n\t};\n\n\treturn (\n\t\t<View style={{ flex: 1 }}>\n\t\t\t<ClosableHeader\n\t\t\t\tonBackPress={() => {\n\t\t\t\t\tnavigation.goBack();\n\t\t\t\t}}\n\t\t\t\tonClose={() => {\n\t\t\t\t\tvoid confirmQuotationLeave(navigation);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<View style={styles.mainView}>\n\t\t\t\t<View>\n\t\t\t\t\t<Text style={styles.titleText}>{`Em qual per√≠odo voc√™ deseja\\nrealizar a pulveriza√ß√£o?`}</Text>\n\t\t\t\t\t<View>\n\t\t\t\t\t\t{show && (\n\t\t\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\t\t\tdisplay=\"spinner\"\n\t\t\t\t\t\t\t\tminimumDate={today.toDate()}\n\t\t\t\t\t\t\t\tvalue={selector === 'start' ? startDate.toDate() : endDate.toDate()}\n\t\t\t\t\t\t\t\tmode=\"date\"\n\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.dateView}>\n\t\t\t\t\t\t{/* <View>\n\t\t\t\t\t\t\t<Text>Come√ßar em</Text>\n\t\t\t\t\t\t\t<Text style={styles.dateBox} onPress={() => showDatepicker('start')}>\n\t\t\t\t\t\t\t\t{formatDate(startDate.toISOString())}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<Divider style={styles.divider} /> */}\n\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t<Text style={{ marginLeft: '55%' }}>Terminar em</Text>\n\t\t\t\t\t\t\t<Text style={styles.dateBox} onPress={() => showDatepicker('end')}>\n\t\t\t\t\t\t\t\t{formatDate(endDate.toISOString())}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<Button\n\t\t\t\t\tuppercase={false}\n\t\t\t\t\tdisabled={false}\n\t\t\t\t\tmode=\"contained\"\n\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\tlabelStyle={styles.buttonText}\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tconst pulverizationStartDate = startDate.toDate();\n\t\t\t\t\t\tconst pulverizationEndDate = endDate.toDate();\n\t\t\t\t\t\tdispatch({ type: 'CHANGE_START_DATE', pulverizationStartDate });\n\t\t\t\t\t\tdispatch({ type: 'CHANGE_END_DATE', pulverizationEndDate });\n\n\t\t\t\t\t\tnavigation.navigate('QuotationSummary');\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tContinuar\n\t\t\t\t</Button>\n\t\t\t</View>\n\t\t</View>\n\t);\n});\n\nconst styles = createTStyleSheet({\n\tmainView: {\n\t\tflex: 1,\n\t\tbackgroundColor: 'white',\n\t\tpaddingHorizontal: '16rem',\n\t\tjustifyContent: 'space-between',\n\t},\n\ttitleText: {\n\t\tpaddingLeft: '8rem',\n\t\tpaddingVertical: '8rem',\n\t\tfontSize: '23rem',\n\t},\n\ttitle: {\n\t\tfontSize: '24rem',\n\t\tpaddingTop: '24rem',\n\t},\n\tdateView: {\n\t\tpaddingTop: '56rem',\n\t\tflexDirection: 'row',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-between',\n\t\twidth: '100%',\n\t},\n\tdivider: {\n\t\tflex: 1,\n\t\theight: '1rem',\n\t\tmarginHorizontal: '16rem',\n\t\tmarginTop: '30rem',\n\t},\n\tdateBox: {\n\t\tpaddingHorizontal: '32rem',\n\t\tpaddingVertical: '16rem',\n\t\tmarginLeft: '40%',\n\t\tmarginTop: '8rem',\n\t\tbackgroundColor: '#E8E8E8',\n\t},\n\tbutton: {\n\t\tmarginVertical: '24rem',\n\t\theight: '45rem',\n\t\tjustifyContent: 'center',\n\t\twidth: '100%',\n\t},\n\tbuttonText: {\n\t\tfontSize: '14rem',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}