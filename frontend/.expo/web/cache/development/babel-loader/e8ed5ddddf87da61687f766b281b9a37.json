{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/00-common/default-header.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport { Appbar, Badge } from 'react-native-paper';\nimport { createTStyleSheet } from \"../../src/utils/style\";\nimport { REM_SCALE } from \"../../src/utils\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { fetchUserUnreadNotificationCount } from \"../../src/network\";\nimport { useFocusEffect } from '@react-navigation/native';\nexport function DefaultHeader(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      notificationCount = _useState2[0],\n      setNotificationCount = _useState2[1];\n\n  useFocusEffect(function () {\n    (function _callee() {\n      var num;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetchUserUnreadNotificationCount());\n\n            case 2:\n              num = _context.sent;\n              setNotificationCount(num);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  });\n  return React.createElement(Appbar.Header, {\n    style: styles.appbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, React.createElement(Appbar.Action, {\n    icon: \"menu\",\n    size: 24 * REM_SCALE,\n    onPress: props.onDrawerPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }), React.createElement(Appbar.Content, {\n    title: props.title,\n    style: styles.content,\n    titleStyle: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, React.createElement(Badge, {\n    visible: notificationCount > 0,\n    size: 16 * REM_SCALE,\n    style: styles.badge,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, notificationCount), React.createElement(Appbar.Action, {\n    color: \"white\",\n    icon: \"bell\",\n    size: 24 * REM_SCALE,\n    onPress: props.onNotificationPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  })));\n}\nvar styles = createTStyleSheet({\n  content: {\n    alignItems: 'center'\n  },\n  titleText: {\n    fontSize: '20rem'\n  },\n  appbar: {\n    height: '56.4rem'\n  },\n  badge: {\n    position: 'absolute',\n    top: '5rem',\n    right: '5rem'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/00-common/default-header.tsx"],"names":["React","useState","Appbar","Badge","createTStyleSheet","REM_SCALE","fetchUserUnreadNotificationCount","useFocusEffect","DefaultHeader","props","notificationCount","setNotificationCount","num","styles","appbar","onDrawerPress","title","content","titleText","badge","onNotificationPress","alignItems","fontSize","height","position","top","right"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,oBAA9B;AACA,SAASC,iBAAT;AACA,SAASC,SAAT;;AAEA,SAASC,gCAAT;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAQA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAAkD;AAAA,kBACNR,QAAQ,CAAC,CAAD,CADF;AAAA;AAAA,MACjDS,iBADiD;AAAA,MAC9BC,oBAD8B;;AAGxDJ,EAAAA,cAAc,CAAC,YAAM;AACpB,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACkBD,gCAAgC,EADlD;;AAAA;AACMM,cAAAA,GADN;AAEAD,cAAAA,oBAAoB,CAACC,GAAD,CAApB;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAIA,GALa,CAAd;AAOA,SACC,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAEC,MAAM,CAACC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,MAApB;AAA2B,IAAA,IAAI,EAAE,KAAKT,SAAtC;AAAiD,IAAA,OAAO,EAAEI,KAAK,CAACM,aAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,KAAK,EAAEN,KAAK,CAACO,KAA7B;AAAoC,IAAA,KAAK,EAAEH,MAAM,CAACI,OAAlD;AAA2D,IAAA,UAAU,EAAEJ,MAAM,CAACK,SAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAER,iBAAiB,GAAG,CAApC;AAAuC,IAAA,IAAI,EAAE,KAAKL,SAAlD;AAA6D,IAAA,KAAK,EAAEQ,MAAM,CAACM,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACET,iBADF,CADD,EAIC,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAC,OAArB;AAA6B,IAAA,IAAI,EAAC,MAAlC;AAAyC,IAAA,IAAI,EAAE,KAAKL,SAApD;AAA+D,IAAA,OAAO,EAAEI,KAAK,CAACW,mBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CAHD,CADD;AAYA;AAED,IAAMP,MAAM,GAAGT,iBAAiB,CAAC;AAChCa,EAAAA,OAAO,EAAE;AACRI,IAAAA,UAAU,EAAE;AADJ,GADuB;AAIhCH,EAAAA,SAAS,EAAE;AACVI,IAAAA,QAAQ,EAAE;AADA,GAJqB;AAOhCR,EAAAA,MAAM,EAAE;AACPS,IAAAA,MAAM,EAAE;AADD,GAPwB;AAUhCJ,EAAAA,KAAK,EAAE;AACNK,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,GAAG,EAAE,MAFC;AAGNC,IAAAA,KAAK,EAAE;AAHD;AAVyB,CAAD,CAAhC","sourcesContent":["import React, { useState } from 'react';\nimport { Appbar, Badge } from 'react-native-paper';\nimport { createTStyleSheet } from '../../src/utils/style';\nimport { REM_SCALE } from '../../src/utils';\nimport { View } from 'react-native';\nimport { fetchUserUnreadNotificationCount } from '../../src/network';\nimport { useFocusEffect } from '@react-navigation/native';\n\ntype DefaultHeaderProps = {\n\ttitle: string;\n\tonDrawerPress: () => void;\n\tonNotificationPress: () => void;\n};\n\nexport function DefaultHeader(props: DefaultHeaderProps) {\n\tconst [notificationCount, setNotificationCount] = useState(0);\n\n\tuseFocusEffect(() => {\n\t\t(async () => {\n\t\t\tconst num = await fetchUserUnreadNotificationCount();\n\t\t\tsetNotificationCount(num);\n\t\t})();\n\t});\n\n\treturn (\n\t\t<Appbar.Header style={styles.appbar}>\n\t\t\t<Appbar.Action icon=\"menu\" size={24 * REM_SCALE} onPress={props.onDrawerPress} />\n\t\t\t<Appbar.Content title={props.title} style={styles.content} titleStyle={styles.titleText} />\n\t\t\t<View>\n\t\t\t\t<Badge visible={notificationCount > 0} size={16 * REM_SCALE} style={styles.badge}>\n\t\t\t\t\t{notificationCount}\n\t\t\t\t</Badge>\n\t\t\t\t<Appbar.Action color=\"white\" icon=\"bell\" size={24 * REM_SCALE} onPress={props.onNotificationPress} />\n\t\t\t</View>\n\t\t</Appbar.Header>\n\t);\n}\n\nconst styles = createTStyleSheet({\n\tcontent: {\n\t\talignItems: 'center',\n\t},\n\ttitleText: {\n\t\tfontSize: '20rem',\n\t},\n\tappbar: {\n\t\theight: '56.4rem',\n\t},\n\tbadge: {\n\t\tposition: 'absolute',\n\t\ttop: '5rem',\n\t\tright: '5rem',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}