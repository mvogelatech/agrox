{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/50-notifications/notification-card.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Card, Text } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { createTStyleSheet, overrideTStyleSheet } from \"../../src/utils/style\";\nimport { colors } from \"../../src/assets\";\nimport { formatDateWithTime } from \"../../src/utils\";\nimport { RoundIcon } from \"../00-common\";\nimport { translateNotificationType } from \"./type-translation\";\n\nfunction getIconName(type) {\n  if (type === 'DIAGNOSIS') return 'assignment';\n  if (type === 'PRESCRIPTION') return 'format-list-bulleted';\n  if (type === 'TERMS') return 'assignment-turned-in';\n  if (type === 'QUOTATION') return 'receipt';\n  if (type === 'APPUPDATE') return 'system-update';\n  return 'message';\n}\n\nexport function NotificationCard(props) {\n  var _props$notification$r;\n\n  var _useState = useState((_props$notification$r = props.notification.read_date) != null ? _props$notification$r : false),\n      _useState2 = _slicedToArray(_useState, 2),\n      disabled = _useState2[0],\n      setDisabled = _useState2[1];\n\n  var type = translateNotificationType(props.notification.type);\n  var styles = overrideTStyleSheet(defaultStyleSheet, {\n    textViewTextHeader: {\n      fontWeight: disabled ? 'normal' : 'bold'\n    }\n  });\n  return React.createElement(Card, {\n    style: styles.card,\n    onPress: function onPress() {\n      setDisabled(true);\n      props.onPress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.contentView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.iconView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(RoundIcon, {\n    hasMaterial: true,\n    isEnabled: !disabled,\n    icon: getIconName(type),\n    color: colors.supportSuccess.lighter,\n    size: \"41rem\",\n    iconSize: \"20rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  })), React.createElement(View, {\n    style: styles.textView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.textViewTextHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, props.notification.body.title), props.notification.body.message && React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.textViewTextContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, props.notification.body.message), props.notification.body.quotationId && React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.textViewTextContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"This notification came with a quotationId: \", props.notification.body.quotationId), React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.textViewTextContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  }, formatDateWithTime(props.notification.sent_date))), React.createElement(MaterialIcons, {\n    name: \"navigate-next\",\n    color: \"#6C6464\",\n    style: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  })));\n}\nvar defaultStyleSheet = createTStyleSheet({\n  card: {\n    borderRadius: '8rem',\n    elevation: '4rem',\n    marginVertical: '8rem',\n    marginHorizontal: '16rem',\n    padding: '16rem'\n  },\n  contentView: {\n    flex: 1,\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  iconView: {\n    height: '100%',\n    justifyContent: 'flex-start'\n  },\n  textView: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingLeft: '16rem'\n  },\n  textViewTextHeader: {\n    fontSize: '13rem',\n    fontWeight: 'bold'\n  },\n  textViewTextContent: {\n    marginTop: '4rem',\n    fontSize: '12rem',\n    color: '#78849E'\n  },\n  icon: {\n    fontSize: '22rem'\n  },\n  $imageSize: '30rem',\n  image: {\n    width: '$imageSize',\n    height: '$imageSize',\n    tintColor: colors.lightGreen\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/50-notifications/notification-card.tsx"],"names":["React","useState","Card","Text","MaterialIcons","createTStyleSheet","overrideTStyleSheet","colors","formatDateWithTime","RoundIcon","translateNotificationType","getIconName","type","NotificationCard","props","notification","read_date","disabled","setDisabled","styles","defaultStyleSheet","textViewTextHeader","fontWeight","card","onPress","contentView","iconView","supportSuccess","lighter","textView","body","title","message","textViewTextContent","quotationId","sent_date","icon","borderRadius","elevation","marginVertical","marginHorizontal","padding","flex","justifyContent","flexDirection","alignItems","height","paddingLeft","fontSize","marginTop","color","$imageSize","image","width","tintColor","lightGreen"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport { Card, Text } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nimport { Models } from '../../models';\nimport { createTStyleSheet, overrideTStyleSheet } from '../../src/utils/style';\nimport { colors } from '../../src/assets';\nimport { formatDateWithTime } from '../../src/utils';\nimport { RoundIcon } from '../00-common';\nimport { NotificationType, translateNotificationType } from './type-translation';\n\ntype NotificationCardProps = {\n\tnotification: Models.notification;\n\tonPress: () => void;\n};\n\nfunction getIconName(type: NotificationType): string {\n\tif (type === 'DIAGNOSIS') return 'assignment';\n\tif (type === 'PRESCRIPTION') return 'format-list-bulleted';\n\tif (type === 'TERMS') return 'assignment-turned-in';\n\tif (type === 'QUOTATION') return 'receipt';\n\tif (type === 'APPUPDATE') return 'system-update';\n\treturn 'message';\n}\n\nexport function NotificationCard(props: NotificationCardProps) {\n\tconst [disabled, setDisabled] = useState(props.notification.read_date ?? false);\n\n\tconst type = translateNotificationType(props.notification.type);\n\tconst styles = overrideTStyleSheet(defaultStyleSheet, {\n\t\ttextViewTextHeader: {\n\t\t\tfontWeight: disabled ? 'normal' : 'bold',\n\t\t},\n\t});\n\n\treturn (\n\t\t<Card\n\t\t\tstyle={styles.card}\n\t\t\tonPress={() => {\n\t\t\t\tsetDisabled(true);\n\t\t\t\tprops.onPress();\n\t\t\t}}\n\t\t>\n\t\t\t<View style={styles.contentView}>\n\t\t\t\t<View style={styles.iconView}>\n\t\t\t\t\t<RoundIcon hasMaterial isEnabled={!disabled} icon={getIconName(type)} color={colors.supportSuccess.lighter} size=\"41rem\" iconSize=\"20rem\" />\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.textView}>\n\t\t\t\t\t<Text numberOfLines={1} style={styles.textViewTextHeader}>\n\t\t\t\t\t\t{props.notification.body.title}\n\t\t\t\t\t</Text>\n\t\t\t\t\t{props.notification.body.message && (\n\t\t\t\t\t\t<Text numberOfLines={1} style={styles.textViewTextContent}>\n\t\t\t\t\t\t\t{props.notification.body.message}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t)}\n\t\t\t\t\t{props.notification.body.quotationId && (\n\t\t\t\t\t\t<Text numberOfLines={1} style={styles.textViewTextContent}>\n\t\t\t\t\t\t\tThis notification came with a quotationId: {props.notification.body.quotationId}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t)}\n\t\t\t\t\t<Text numberOfLines={1} style={styles.textViewTextContent}>\n\t\t\t\t\t\t{formatDateWithTime(props.notification.sent_date)}\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t\t<MaterialIcons name=\"navigate-next\" color=\"#6C6464\" style={styles.icon} />\n\t\t\t</View>\n\t\t</Card>\n\t);\n}\n\nconst defaultStyleSheet = createTStyleSheet({\n\tcard: {\n\t\tborderRadius: '8rem',\n\t\televation: '4rem',\n\t\tmarginVertical: '8rem',\n\t\tmarginHorizontal: '16rem',\n\t\tpadding: '16rem',\n\t},\n\tcontentView: {\n\t\tflex: 1,\n\t\tjustifyContent: 'space-between',\n\t\tflexDirection: 'row',\n\t\talignItems: 'center',\n\t},\n\ticonView: {\n\t\theight: '100%',\n\t\tjustifyContent: 'flex-start',\n\t},\n\ttextView: {\n\t\tflex: 1,\n\t\tjustifyContent: 'center',\n\t\tpaddingLeft: '16rem',\n\t},\n\ttextViewTextHeader: {\n\t\tfontSize: '13rem',\n\t\tfontWeight: 'bold',\n\t},\n\ttextViewTextContent: {\n\t\tmarginTop: '4rem',\n\t\tfontSize: '12rem',\n\t\tcolor: '#78849E',\n\t},\n\n\ticon: {\n\t\tfontSize: '22rem',\n\t},\n\t$imageSize: '30rem',\n\timage: {\n\t\twidth: '$imageSize',\n\t\theight: '$imageSize',\n\t\ttintColor: colors.lightGreen,\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}