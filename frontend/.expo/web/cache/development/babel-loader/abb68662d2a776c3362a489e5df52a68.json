{"ast":null,"code":"import BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { useCallback } from 'react';\nexport function useBackButton(handler, deps) {\n  function convertedHandler() {\n    return handler() === 'CANCEL';\n  }\n\n  useFocusEffect(useCallback(function () {\n    BackHandler.addEventListener('hardwareBackPress', convertedHandler);\n    return function () {\n      BackHandler.removeEventListener('hardwareBackPress', convertedHandler);\n    };\n  }, deps));\n}","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/src/custom-hooks/use-back-button.ts"],"names":["useFocusEffect","useCallback","useBackButton","handler","deps","convertedHandler","BackHandler","addEventListener","removeEventListener"],"mappings":";AACA,SAASA,cAAT,QAA+B,0BAA/B;AACA,SAASC,WAAT,QAA4C,OAA5C;AA0BA,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAmDC,IAAnD,EAA+E;AACrF,WAASC,gBAAT,GAAqC;AAGpC,WAAOF,OAAO,OAAO,QAArB;AACA;;AAEDH,EAAAA,cAAc,CACbC,WAAW,CAAC,YAAM;AACjBK,IAAAA,WAAW,CAACC,gBAAZ,CAA6B,mBAA7B,EAAkDF,gBAAlD;AAEA,WAAO,YAAM;AACZC,MAAAA,WAAW,CAACE,mBAAZ,CAAgC,mBAAhC,EAAqDH,gBAArD;AACA,KAFD;AAGA,GANU,EAMRD,IANQ,CADE,CAAd;AASA","sourcesContent":["import { BackHandler } from 'react-native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { useCallback, DependencyList } from 'react';\n\nexport type BackButtonBehavior = 'PROCEED' | 'CANCEL';\n\nexport type BackButtonHandler = () => BackButtonBehavior;\n\n/**\n * Hook to enable behavior when the Android back button is pressed.\n *\n * The handler should be an arrow function passed directly, instead of a reference to some funcion.\n *\n * @example\n *\n * ```\n * // DO:\n * useBackButton(() => {\n *   console.log('This is good');\n * });\n *\n * // DON'T\n * function handler() {\n *   console.log('This is bad');\n * }\n * useBackButton(handler);\n * ```\n */\nexport function useBackButton(handler: BackButtonHandler, deps: DependencyList): void {\n\tfunction convertedHandler(): boolean {\n\t\t// Returning true from handler prevents the default behavior (which is to `goBack` in the navigation)\n\t\t// Returning false lets it proceed with the usual handling (which is to `goBack` in the navigation)\n\t\treturn handler() === 'CANCEL';\n\t}\n\n\tuseFocusEffect(\n\t\tuseCallback(() => {\n\t\t\tBackHandler.addEventListener('hardwareBackPress', convertedHandler);\n\n\t\t\treturn () => {\n\t\t\t\tBackHandler.removeEventListener('hardwareBackPress', convertedHandler);\n\t\t\t};\n\t\t}, deps), // eslint-disable-line react-hooks/exhaustive-deps\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}