{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/03-field-selection/from-services-report.tsx\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button, Divider } from 'react-native-paper';\nimport { createTStyleSheet } from \"../../src/utils/style\";\nimport { useBackButton } from \"../../src/custom-hooks/use-back-button\";\nimport { SelectableFieldCard } from \"./selectable-field-card\";\nimport { TouchableOpacity, ScrollView } from 'react-native-gesture-handler';\nimport { dispatch, useMainSelector } from \"../../redux-things\";\nimport { PulverizationMethods } from \"../../models\";\nimport { ClosableHeader, Accordion, CustomCheckbox } from \"../00-common\";\nimport { confirmQuotationLeave } from \"../../src/utils/alert-messages\";\nimport { asFocusedOnlyComponent } from \"../../src/utils/smart-lifecycle-components\";\nexport var FieldSelectionFromServicesReport = asFocusedOnlyComponent(function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(new Set()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checkedFields = _React$useState2[0],\n      setCheckedFields = _React$useState2[1];\n\n  var _React$useState3 = React.useState(new Set()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      expandedAreas = _React$useState4[0],\n      setExpandedAreas = _React$useState4[1];\n\n  var areas = useMainSelector(function (state) {\n    return state.backendData.user.many_user_has_many_farm[0].farm.area;\n  });\n  var fields = areas.flatMap(function (area) {\n    return area.field;\n  });\n  var fieldsWithMethods = new Map();\n\n  var _onClose = useCallback(function () {\n    setCheckedFields(new Set());\n  }, []);\n\n  useBackButton(function () {\n    _onClose();\n\n    return 'PROCEED';\n  }, [_onClose]);\n\n  function areaFieldsList(area) {\n    var _this2 = this;\n\n    return React.createElement(View, {\n      style: styles.listView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 4\n      }\n    }, area.field.map(function (field) {\n      return React.createElement(SelectableFieldCard, {\n        key: field.id.toString(),\n        isSelected: checkedFields.has(field),\n        field: field,\n        isDiagnosisMode: false,\n        onPress: function onPress() {\n          setCheckedFields(function (checkedFields) {\n            if (checkedFields.has(field)) checkedFields.delete(field);else checkedFields.add(field);\n            return new Set(checkedFields);\n          });\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }\n      });\n    }));\n  }\n\n  function countSelectedFields(area) {\n    var counter = 0;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(area.field), _step; !(_step = _iterator()).done;) {\n      var _field = _step.value;\n      if (checkedFields.has(_field)) counter++;\n    }\n\n    return counter;\n  }\n\n  function AreaAccordion(props) {\n    var area = props.area,\n        currentAreaAllSelected = props.isCurrentAreaAllSelected;\n    return React.createElement(Accordion, {\n      key: area.id.toString(),\n      isExpanded: expandedAreas.has(area),\n      title: area.name,\n      titleRight: React.createElement(View, {\n        style: {\n          alignItems: 'flex-end',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: styles.subtitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, area.field.length + \" TALH\\xD5ES\"), React.createElement(Text, {\n        style: styles.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }, countSelectedFields(area), \" Selecionados\")),\n      divider: React.createElement(Divider, {\n        style: {\n          width: '93%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 14\n        }\n      }),\n      onPress: function onPress() {\n        setExpandedAreas(function (expandedAreas) {\n          if (expandedAreas.has(area)) expandedAreas.delete(area);else expandedAreas.add(area);\n          return new Set(expandedAreas);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 4\n      }\n    }, React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, React.createElement(CustomCheckbox, {\n      title: \"Todos os talh\\xF5es desta \\xE1rea\",\n      status: currentAreaAllSelected ? 'checked' : 'unchecked',\n      customStyle: {\n        marginVertical: '15rem'\n      },\n      onPress: function onPress() {\n        setCheckedFields(function (checkedFields) {\n          if (currentAreaAllSelected) {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(area.field), _step2; !(_step2 = _iterator2()).done;) {\n              var _field2 = _step2.value;\n              checkedFields.delete(_field2);\n            }\n          } else {\n            for (var _iterator3 = _createForOfIteratorHelperLoose(area.field), _step3; !(_step3 = _iterator3()).done;) {\n              var _field3 = _step3.value;\n              checkedFields.add(_field3);\n            }\n          }\n\n          return new Set(checkedFields);\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 6\n      }\n    }), areaFieldsList(area)));\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 3\n    }\n  }, React.createElement(ClosableHeader, {\n    onClose: function onClose() {\n      _onClose();\n\n      void confirmQuotationLeave(navigation);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.mainView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, 'Quais talhões você\\nquer contratar?'), React.createElement(View, {\n    style: styles.checkboxView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, React.createElement(CustomCheckbox, {\n    title: React.createElement(View, {\n      style: {\n        alignItems: 'flex-start'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: styles.subtitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, \"Todos os talh\\xF5es\"), React.createElement(Text, {\n      style: styles.selected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, checkedFields.size, \" Selecionados\")),\n    status: fields.length === checkedFields.size ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      setCheckedFields(fields.length === checkedFields.size ? new Set() : new Set(fields));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 6\n    }\n  }), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    style: styles.expandButton,\n    onPress: function onPress() {\n      setExpandedAreas(areas.length === expandedAreas.size ? new Set() : new Set(areas));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      color: '#327387'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, areas.length === expandedAreas.size ? 'Recolher' : 'Expandir', \" \\xE1reas\"))), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, true ? React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, areas.map(function (area) {\n    var currentAreaAllSelected = area.field.every(function (field) {\n      return checkedFields.has(field);\n    });\n    return React.createElement(AreaAccordion, {\n      key: area.id.toString(),\n      area: area,\n      isCurrentAreaAllSelected: currentAreaAllSelected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 16\n      }\n    });\n  })) : undefined), React.createElement(Button, {\n    uppercase: false,\n    disabled: checkedFields.size === 0,\n    mode: \"contained\",\n    style: styles.button,\n    labelStyle: styles.buttonText,\n    onPress: function onPress() {\n      for (var _iterator4 = _createForOfIteratorHelperLoose(checkedFields), _step4; !(_step4 = _iterator4()).done;) {\n        var _field4 = _step4.value;\n        fieldsWithMethods.set(_field4.id, PulverizationMethods.PLANE);\n      }\n\n      dispatch({\n        type: 'SET_SERVICES_PULVERIZATION',\n        state: true\n      });\n      dispatch({\n        type: 'CHANGE_FIELD_WITH_METHODS',\n        fieldsWithMethods: fieldsWithMethods\n      });\n      navigation.navigate('FeedbackQuotationReport');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, \"Contratar\")));\n});\nvar styles = createTStyleSheet({\n  card: {\n    elevation: '4rem',\n    marginHorizontal: '2rem',\n    marginTop: '2rem',\n    marginBottom: '16rem',\n    borderRadius: '10rem'\n  },\n  touchable: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: '16rem',\n    paddingVertical: '16rem'\n  },\n  mainView: {\n    flex: 1,\n    backgroundColor: 'white',\n    paddingHorizontal: '14rem'\n  },\n  checkboxView: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginVertical: '20rem',\n    flexDirection: 'row'\n  },\n  listView: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  scrollView: {\n    paddingVertical: '8rem'\n  },\n  expandButton: {\n    padding: '15rem'\n  },\n  button: {\n    marginVertical: '24rem',\n    marginHorizontal: '11rem',\n    height: '45rem',\n    justifyContent: 'center'\n  },\n  subtitle: {\n    fontSize: '16rem',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  selected: {\n    fontSize: '12rem',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: '#78849E'\n  },\n  titleText: {\n    paddingLeft: '8rem',\n    fontSize: '23rem'\n  },\n  buttonText: {\n    fontSize: '14rem'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/03-field-selection/from-services-report.tsx"],"names":["React","useCallback","Button","Divider","createTStyleSheet","useBackButton","SelectableFieldCard","TouchableOpacity","ScrollView","dispatch","useMainSelector","PulverizationMethods","ClosableHeader","Accordion","CustomCheckbox","confirmQuotationLeave","asFocusedOnlyComponent","FieldSelectionFromServicesReport","navigation","useState","Set","checkedFields","setCheckedFields","expandedAreas","setExpandedAreas","areas","state","backendData","user","many_user_has_many_farm","farm","area","fields","flatMap","field","fieldsWithMethods","Map","onClose","areaFieldsList","styles","listView","map","id","toString","has","delete","add","countSelectedFields","counter","AreaAccordion","props","currentAreaAllSelected","isCurrentAreaAllSelected","name","alignItems","justifyContent","subtitle","length","selected","width","marginVertical","flex","mainView","titleText","checkboxView","size","expandButton","fontWeight","color","scrollView","every","undefined","button","buttonText","set","PLANE","type","navigate","card","elevation","marginHorizontal","marginTop","marginBottom","borderRadius","touchable","flexDirection","paddingHorizontal","paddingVertical","backgroundColor","flexWrap","padding","height","fontSize","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { View, Text } from 'react-native';\nimport { Button, Divider, Card } from 'react-native-paper';\nimport { createTStyleSheet } from '../../src/utils/style';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nimport { useBackButton } from '../../src/custom-hooks/use-back-button';\n\nimport { SelectableFieldCard } from './selectable-field-card';\n\nimport { TouchableOpacity, ScrollView } from 'react-native-gesture-handler';\nimport { dispatch, useMainSelector } from '../../redux-things';\nimport { Models, PulverizationMethod, PulverizationMethods } from '../../models';\nimport { ClosableHeader, Accordion, CustomCheckbox } from '../00-common';\n\nimport { AgroXScreenProps } from '../navigation-types';\nimport { confirmQuotationLeave } from '../../src/utils/alert-messages';\nimport { asFocusedOnlyComponent } from '../../src/utils/smart-lifecycle-components';\n\ntype ScreenProps = AgroXScreenProps<'FieldSelectionFromServices'>;\n\nexport const FieldSelectionFromServicesReport = asFocusedOnlyComponent(({ navigation }: ScreenProps) => {\n\tconst [checkedFields, setCheckedFields] = React.useState(new Set<Models.field>());\n\n\tconst [expandedAreas, setExpandedAreas] = React.useState(new Set<Models.area>());\n\n\tconst areas = useMainSelector((state) => state.backendData.user!.many_user_has_many_farm[0].farm.area)!;\n\tconst fields = areas.flatMap((area) => area.field);\n\tconst fieldsWithMethods = new Map<number, PulverizationMethod>();\n\n\tconst onClose = useCallback(() => {\n\t\tsetCheckedFields(new Set<Models.field>());\n\t}, []);\n\n\tuseBackButton(() => {\n\t\tonClose();\n\t\treturn 'PROCEED';\n\t}, [onClose]);\n\n\tfunction areaFieldsList(area: Models.area) {\n\t\treturn (\n\t\t\t<View style={styles.listView}>\n\t\t\t\t{area.field.map((field) => (\n\t\t\t\t\t<SelectableFieldCard\n\t\t\t\t\t\tkey={field.id.toString()}\n\t\t\t\t\t\tisSelected={checkedFields.has(field)}\n\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\tisDiagnosisMode={false}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tsetCheckedFields((checkedFields) => {\n\t\t\t\t\t\t\t\tif (checkedFields.has(field)) checkedFields.delete(field);\n\t\t\t\t\t\t\t\telse checkedFields.add(field);\n\t\t\t\t\t\t\t\treturn new Set(checkedFields);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</View>\n\t\t);\n\t}\n\n\tfunction countSelectedFields(area: Models.area) {\n\t\tlet counter = 0;\n\t\tfor (const field of area.field) {\n\t\t\tif (checkedFields.has(field)) counter++;\n\t\t}\n\n\t\treturn counter;\n\t}\n\n\ttype AreaAccordionProps = {\n\t\tarea: Models.area;\n\t\tisCurrentAreaAllSelected: boolean;\n\t};\n\n\tfunction AreaAccordion(props: AreaAccordionProps) {\n\t\tconst { area, isCurrentAreaAllSelected: currentAreaAllSelected } = props;\n\t\treturn (\n\t\t\t<Accordion\n\t\t\t\tkey={area.id.toString()}\n\t\t\t\tisExpanded={expandedAreas.has(area)}\n\t\t\t\ttitle={area.name}\n\t\t\t\ttitleRight={\n\t\t\t\t\t<View style={{ alignItems: 'flex-end', justifyContent: 'center' }}>\n\t\t\t\t\t\t<Text style={styles.subtitle}>{`${area.field.length} TALHÕES`}</Text>\n\t\t\t\t\t\t<Text style={styles.selected}>{countSelectedFields(area)} Selecionados</Text>\n\t\t\t\t\t</View>\n\t\t\t\t}\n\t\t\t\tdivider={<Divider style={{ width: '93%' }} />}\n\t\t\t\tonPress={() => {\n\t\t\t\t\tsetExpandedAreas((expandedAreas) => {\n\t\t\t\t\t\tif (expandedAreas.has(area)) expandedAreas.delete(area);\n\t\t\t\t\t\telse expandedAreas.add(area);\n\t\t\t\t\t\treturn new Set(expandedAreas);\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<View>\n\t\t\t\t\t<CustomCheckbox\n\t\t\t\t\t\ttitle=\"Todos os talhões desta área\"\n\t\t\t\t\t\tstatus={currentAreaAllSelected ? 'checked' : 'unchecked'}\n\t\t\t\t\t\tcustomStyle={{ marginVertical: '15rem' }}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tsetCheckedFields((checkedFields) => {\n\t\t\t\t\t\t\t\tif (currentAreaAllSelected)\n\t\t\t\t\t\t\t\t\tfor (const field of area.field) {\n\t\t\t\t\t\t\t\t\t\tcheckedFields.delete(field);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tfor (const field of area.field) {\n\t\t\t\t\t\t\t\t\t\tcheckedFields.add(field);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn new Set(checkedFields);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{areaFieldsList(area)}\n\t\t\t\t</View>\n\t\t\t</Accordion>\n\t\t);\n\t}\n\n\treturn (\n\t\t<View style={{ flex: 1 }}>\n\t\t\t<ClosableHeader\n\t\t\t\tonClose={() => {\n\t\t\t\t\tonClose();\n\t\t\t\t\tvoid confirmQuotationLeave(navigation);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<View style={styles.mainView}>\n\t\t\t\t<Text style={styles.titleText}>{'Quais talhões você\\nquer contratar?'}</Text>\n\t\t\t\t<View style={styles.checkboxView}>\n\t\t\t\t\t<CustomCheckbox\n\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t<View style={{ alignItems: 'flex-start' }}>\n\t\t\t\t\t\t\t\t<Text style={styles.subtitle}>Todos os talhões</Text>\n\t\t\t\t\t\t\t\t<Text style={styles.selected}>{checkedFields.size} Selecionados</Text>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstatus={fields.length === checkedFields.size ? 'checked' : 'unchecked'}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tsetCheckedFields(fields.length === checkedFields.size ? new Set() : new Set(fields));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\tactiveOpacity={0.5}\n\t\t\t\t\t\tstyle={styles.expandButton}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tsetExpandedAreas(areas.length === expandedAreas.size ? new Set() : new Set(areas));\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text style={{ fontWeight: 'bold', color: '#327387' }}>{areas.length === expandedAreas.size ? 'Recolher' : 'Expandir'} áreas</Text>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t</View>\n\t\t\t\t{/* <Card style={styles.card}>\n\t\t\t\t\t<TouchableOpacity activeOpacity={0.5} style={styles.touchable}>\n\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n\t\t\t\t\t\t\t<MaterialIcons name=\"keyboard-arrow-down\" color=\"#6C6464\" style={styles.icon} /> */}\n\t\t\t\t<View>\n\t\t\t\t\t{/* <Text numberOfLines={1} style={styles.title}>\n\t\t\t\t\t\t\t\t\taviao\n\t\t\t\t\t\t\t\t</Text> */}\n\t\t\t\t\t{true ? (\n\t\t\t\t\t\t<ScrollView style={styles.scrollView}>\n\t\t\t\t\t\t\t{areas.map((area) => {\n\t\t\t\t\t\t\t\tconst currentAreaAllSelected = area.field.every((field) => checkedFields.has(field));\n\t\t\t\t\t\t\t\treturn <AreaAccordion key={area.id.toString()} area={area} isCurrentAreaAllSelected={currentAreaAllSelected} />;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ScrollView>\n\t\t\t\t\t) : undefined}\n\t\t\t\t</View>\n\t\t\t\t{/* </View> */}\n\t\t\t\t{/* </TouchableOpacity>\n\t\t\t\t</Card> */}\n\n\t\t\t\t<Button\n\t\t\t\t\tuppercase={false}\n\t\t\t\t\tdisabled={checkedFields.size === 0}\n\t\t\t\t\tmode=\"contained\"\n\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\tlabelStyle={styles.buttonText}\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tfor (const field of checkedFields) {\n\t\t\t\t\t\t\tfieldsWithMethods.set(field.id, PulverizationMethods.PLANE);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdispatch({ type: 'SET_SERVICES_PULVERIZATION', state: true });\n\t\t\t\t\t\tdispatch({ type: 'CHANGE_FIELD_WITH_METHODS', fieldsWithMethods });\n\t\t\t\t\t\tnavigation.navigate('FeedbackQuotationReport');\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tContratar\n\t\t\t\t</Button>\n\t\t\t</View>\n\t\t</View>\n\t);\n});\n\nconst styles = createTStyleSheet({\n\tcard: {\n\t\televation: '4rem',\n\t\tmarginHorizontal: '2rem',\n\t\tmarginTop: '2rem',\n\t\tmarginBottom: '16rem',\n\t\tborderRadius: '10rem',\n\t},\n\ttouchable: {\n\t\tflexDirection: 'row',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-between',\n\t\tpaddingHorizontal: '16rem',\n\t\tpaddingVertical: '16rem',\n\t},\n\tmainView: {\n\t\tflex: 1,\n\t\tbackgroundColor: 'white',\n\t\tpaddingHorizontal: '14rem',\n\t},\n\tcheckboxView: {\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-between',\n\t\tmarginVertical: '20rem',\n\t\tflexDirection: 'row',\n\t},\n\tlistView: {\n\t\tflexDirection: 'row',\n\t\tflexWrap: 'wrap',\n\t},\n\tscrollView: {\n\t\tpaddingVertical: '8rem',\n\t},\n\texpandButton: {\n\t\tpadding: '15rem',\n\t},\n\tbutton: {\n\t\tmarginVertical: '24rem',\n\t\tmarginHorizontal: '11rem',\n\t\theight: '45rem',\n\t\tjustifyContent: 'center',\n\t},\n\tsubtitle: {\n\t\tfontSize: '16rem',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tselected: {\n\t\tfontSize: '12rem',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tcolor: '#78849E',\n\t},\n\ttitleText: {\n\t\tpaddingLeft: '8rem',\n\t\tfontSize: '23rem',\n\t},\n\tbuttonText: {\n\t\tfontSize: '14rem',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}