{"ast":null,"code":"var _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/02-general/bottom-cards/diagnosis-field-profile/diagnosis-field-profile.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { createTStyleSheet } from \"../../../../src/utils/style\";\nimport { CardTitle } from \"../../../00-common/card-title\";\nimport { useMainSelector } from \"../../../../redux-things\";\nimport { General, Prescription, Pulverization } from \"./infestation-report\";\nimport { TabBar } from \"./infestation-report/common/tab-bar\";\nimport { displayAlert, defaultNotImplemented, pulverizationQuoteNotAllowed } from \"../../../../src/utils/alert-messages\";\nimport { RoleTypeFarmManager } from \"../../../../models\";\n\nfunction getBottomComponent(card, user, onHirePulverizationButtonPress) {\n  var role = user.user_role.find(function (obj) {\n    return obj.role.name === RoleTypeFarmManager;\n  });\n  if (card === 'General') return React.createElement(General, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 33\n    }\n  });\n  if (card === 'Prescription') return React.createElement(Prescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 38\n    }\n  });\n  if (card === 'Pulverization') if (role) {\n    return React.createElement(Pulverization, {\n      onHirePulverizationButtonPress: onHirePulverizationButtonPress,\n      onWhatsAppButtonPress: function onWhatsAppButtonPress() {\n        return displayAlert(defaultNotImplemented);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    });\n  } else {\n    return React.createElement(Pulverization, {\n      onHirePulverizationButtonPress: function onHirePulverizationButtonPress() {\n        return displayAlert(pulverizationQuoteNotAllowed);\n      },\n      onWhatsAppButtonPress: function onWhatsAppButtonPress() {\n        return displayAlert(defaultNotImplemented);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    });\n  }\n}\n\nexport function DiagnosisFieldProfile(props) {\n  var field = useMainSelector(function (state) {\n    return state.interactionData.general.currentField;\n  });\n  var card = useMainSelector(function (state) {\n    return state.interactionData.infestation.currentCard;\n  });\n  var user = useMainSelector(function (state) {\n    return state.backendData.user;\n  });\n  return React.createElement(View, {\n    style: styles.mainView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, React.createElement(CardTitle, {\n    text: field.name,\n    titleIcon: \"location\",\n    onClose: props.onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }), React.createElement(TabBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }), getBottomComponent(card, user, props.onHirePulverizationButtonPress));\n}\nvar styles = createTStyleSheet({\n  mainView: {\n    backgroundColor: 'white',\n    flexDirection: 'column'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/02-general/bottom-cards/diagnosis-field-profile/diagnosis-field-profile.tsx"],"names":["React","createTStyleSheet","CardTitle","useMainSelector","General","Prescription","Pulverization","TabBar","displayAlert","defaultNotImplemented","pulverizationQuoteNotAllowed","RoleTypeFarmManager","getBottomComponent","card","user","onHirePulverizationButtonPress","role","user_role","find","obj","name","DiagnosisFieldProfile","props","field","state","interactionData","general","currentField","infestation","currentCard","backendData","styles","mainView","onClose","backgroundColor","flexDirection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,iBAAT;AAEA,SAASC,SAAT;AACA,SAAoBC,eAApB;AAEA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,aAAhC;AAEA,SAASC,MAAT;AACA,SAASC,YAAT,EAAuBC,qBAAvB,EAA8CC,4BAA9C;AACA,SAASC,mBAAT;;AAEA,SAASC,kBAAT,CACCC,IADD,EAECC,IAFD,EAGCC,8BAHD,EAIE;AACD,MAAMC,IAAI,GAAGF,IAAI,CAACG,SAAL,CAAeC,IAAf,CAAoB,UAACC,GAAD;AAAA,WAASA,GAAG,CAACH,IAAJ,CAASI,IAAT,KAAkBT,mBAA3B;AAAA,GAApB,CAAb;AAEA,MAAIE,IAAI,KAAK,SAAb,EAAwB,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACxB,MAAIA,IAAI,KAAK,cAAb,EAA6B,OAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAC7B,MAAIA,IAAI,KAAK,eAAb,EACC,IAAIG,IAAJ,EAAU;AACT,WACC,oBAAC,aAAD;AAAe,MAAA,8BAA8B,EAAED,8BAA/C;AAA+E,MAAA,qBAAqB,EAAE;AAAA,eAAMP,YAAY,CAACC,qBAAD,CAAlB;AAAA,OAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGA,GAJD,MAIO;AACN,WACC,oBAAC,aAAD;AACC,MAAA,8BAA8B,EAAE;AAAA,eAAMD,YAAY,CAACE,4BAAD,CAAlB;AAAA,OADjC;AAEC,MAAA,qBAAqB,EAAE;AAAA,eAAMF,YAAY,CAACC,qBAAD,CAAlB;AAAA,OAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAMA;AACF;;AAED,OAAO,SAASY,qBAAT,CAA+BC,KAA/B,EAAgE;AACtE,MAAMC,KAAK,GAAGpB,eAAe,CAAC,UAACqB,KAAD;AAAA,WAAWA,KAAK,CAACC,eAAN,CAAsBC,OAAtB,CAA8BC,YAAzC;AAAA,GAAD,CAA7B;AACA,MAAMd,IAAI,GAAGV,eAAe,CAAC,UAACqB,KAAD;AAAA,WAAWA,KAAK,CAACC,eAAN,CAAsBG,WAAtB,CAAkCC,WAA7C;AAAA,GAAD,CAA5B;AACA,MAAMf,IAAI,GAAGX,eAAe,CAAC,UAACqB,KAAD;AAAA,WAAWA,KAAK,CAACM,WAAN,CAAkBhB,IAA7B;AAAA,GAAD,CAA5B;AAEA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiB,MAAM,CAACC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAET,KAAK,CAACH,IAAvB;AAA6B,IAAA,SAAS,EAAC,UAAvC;AAAkD,IAAA,OAAO,EAAEE,KAAK,CAACW,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGErB,kBAAkB,CAACC,IAAD,EAAOC,IAAP,EAAaQ,KAAK,CAACP,8BAAnB,CAHpB,CADD;AAOA;AAED,IAAMgB,MAAM,GAAG9B,iBAAiB,CAAC;AAChC+B,EAAAA,QAAQ,EAAE;AACTE,IAAAA,eAAe,EAAE,OADR;AAETC,IAAAA,aAAa,EAAE;AAFN;AADsB,CAAD,CAAhC","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport { createTStyleSheet } from '../../../../src/utils/style';\n\nimport { CardTitle } from '../../../00-common/card-title';\nimport { MainState, useMainSelector } from '../../../../redux-things';\nimport { CloseableBottomCardProps } from '../closeable-bottom-card-props';\nimport { General, Prescription, Pulverization } from './infestation-report';\n\nimport { TabBar } from './infestation-report/common/tab-bar';\nimport { displayAlert, defaultNotImplemented, pulverizationQuoteNotAllowed } from '../../../../src/utils/alert-messages';\nimport { RoleTypeFarmManager, Models } from '../../../../models';\n\nfunction getBottomComponent(\n\tcard: MainState['interactionData']['infestation']['currentCard'],\n\tuser: Models.user,\n\tonHirePulverizationButtonPress: () => void,\n) {\n\tconst role = user.user_role.find((obj) => obj.role.name === RoleTypeFarmManager);\n\n\tif (card === 'General') return <General />;\n\tif (card === 'Prescription') return <Prescription />;\n\tif (card === 'Pulverization')\n\t\tif (role) {\n\t\t\treturn (\n\t\t\t\t<Pulverization onHirePulverizationButtonPress={onHirePulverizationButtonPress} onWhatsAppButtonPress={() => displayAlert(defaultNotImplemented)} />\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Pulverization\n\t\t\t\t\tonHirePulverizationButtonPress={() => displayAlert(pulverizationQuoteNotAllowed)}\n\t\t\t\t\tonWhatsAppButtonPress={() => displayAlert(defaultNotImplemented)}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n}\n\nexport function DiagnosisFieldProfile(props: CloseableBottomCardProps) {\n\tconst field = useMainSelector((state) => state.interactionData.general.currentField)!;\n\tconst card = useMainSelector((state) => state.interactionData.infestation.currentCard)!;\n\tconst user = useMainSelector((state) => state.backendData.user)!;\n\n\treturn (\n\t\t<View style={styles.mainView}>\n\t\t\t<CardTitle text={field.name} titleIcon=\"location\" onClose={props.onClose} />\n\t\t\t<TabBar />\n\t\t\t{getBottomComponent(card, user, props.onHirePulverizationButtonPress)}\n\t\t</View>\n\t);\n}\n\nconst styles = createTStyleSheet({\n\tmainView: {\n\t\tbackgroundColor: 'white',\n\t\tflexDirection: 'column',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}