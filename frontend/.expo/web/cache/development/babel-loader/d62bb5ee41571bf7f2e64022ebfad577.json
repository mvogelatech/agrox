{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as Notifications from 'expo-notifications';\nimport * as Permissions from 'expo-permissions';\nimport Constants from 'expo-constants';\nimport { debug } from \"../debug\";\nexport function getToken() {\n  var _await$Notifications$;\n\n  var _await$Permissions$ge, status;\n\n  return _regeneratorRuntime.async(function getToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (Constants.isDevice) {\n            _context.next = 3;\n            break;\n          }\n\n          debug('getToken(): Not a device!');\n          return _context.abrupt(\"return\");\n\n        case 3:\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n        case 5:\n          _await$Permissions$ge = _context.sent;\n          status = _await$Permissions$ge.status;\n\n          if (!(status !== 'granted')) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n        case 10:\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(Notifications.getDevicePushTokenAsync());\n\n        case 12:\n          _context.t0 = _await$Notifications$ = _context.sent;\n\n          if (!(_context.t0 == null)) {\n            _context.next = 17;\n            break;\n          }\n\n          _context.t1 = void 0;\n          _context.next = 18;\n          break;\n\n        case 17:\n          _context.t1 = _await$Notifications$.data;\n\n        case 18:\n          return _context.abrupt(\"return\", _context.t1);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/src/notifications/get-token.ts"],"names":["Notifications","Permissions","Constants","debug","getToken","isDevice","getAsync","NOTIFICATIONS","status","askAsync","getDevicePushTokenAsync","data"],"mappings":";AAAA,OAAO,KAAKA,aAAZ,MAA+B,oBAA/B;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,KAAT;AAEA,OAAO,SAAeC,QAAf;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,cACDF,SAAS,CAACG,QADT;AAAA;AAAA;AAAA;;AAELF,UAAAA,KAAK,CAAC,2BAAD,CAAL;AAFK;;AAAA;AAAA;AAAA,2CAMmBF,WAAW,CAACK,QAAZ,CAAqBL,WAAW,CAACM,aAAjC,CANnB;;AAAA;AAAA;AAMEC,UAAAA,MANF,yBAMEA,MANF;;AAAA,gBAOFA,MAAM,KAAK,SAPT;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAO0BP,WAAW,CAACQ,QAAZ,CAAqBR,WAAW,CAACM,aAAjC,CAP1B;;AAAA;AAAA;AAAA,2CAQQP,aAAa,CAACU,uBAAd,EARR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,wBAQC,sBAAiDC,IARlD;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as Notifications from 'expo-notifications';\nimport * as Permissions from 'expo-permissions';\nimport Constants from 'expo-constants';\nimport { debug } from '../debug';\n\nexport async function getToken(): Promise<string | undefined> {\n\tif (!Constants.isDevice) {\n\t\tdebug('getToken(): Not a device!');\n\t\treturn;\n\t}\n\n\tconst { status } = await Permissions.getAsync(Permissions.NOTIFICATIONS);\n\tif (status !== 'granted') await Permissions.askAsync(Permissions.NOTIFICATIONS);\n\treturn (await Notifications.getDevicePushTokenAsync())?.data;\n}\n"]},"metadata":{},"sourceType":"module"}