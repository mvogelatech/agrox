{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar V_PROPS = ['height', 'top', 'bottom', 'vertical'];\nvar H_PROPS = ['width', 'left', 'right', 'horizontal'];\nvar SUFFIX = '%';\nvar invalidPropMsg = [\"Name of variable or property with percent value should contain \", \"(\" + V_PROPS.concat(H_PROPS).join() + \") to define base for percent calculation\"].join('');\nexport default {\n  isPercent: isPercent,\n  calc: calc\n};\n\nfunction isPercent(str) {\n  return str.charAt(str.length - 1) === SUFFIX;\n}\n\nfunction calc(str, prop) {\n  var percent = parseInt(str.substring(0, str.length - 1), 10);\n  var base = isVertical(prop) ? height : width;\n  return base * percent / 100;\n}\n\nfunction isVertical(prop) {\n  prop = prop.toLowerCase();\n\n  if (V_PROPS.some(function (p) {\n    return prop.indexOf(p) >= 0;\n  })) {\n    return true;\n  }\n\n  if (H_PROPS.some(function (p) {\n    return prop.indexOf(p) >= 0;\n  })) {\n    return false;\n  }\n\n  throw new Error(invalidPropMsg);\n}","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/node_modules/react-native-extended-stylesheet/src/replacers/percent.js"],"names":["Dimensions","get","width","height","V_PROPS","H_PROPS","SUFFIX","invalidPropMsg","concat","join","isPercent","calc","str","charAt","length","prop","percent","parseInt","substring","base","isVertical","toLowerCase","some","p","indexOf","Error"],"mappings":";;sBAMwBA,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAjBC,K,mBAAAA,K;IAAOC,M,mBAAAA,M;;AACd,IAAMC,OAAO,GAAG,CACd,QADc,EAEd,KAFc,EAGd,QAHc,EAId,UAJc,CAAhB;AAMA,IAAMC,OAAO,GAAG,CACd,OADc,EAEd,MAFc,EAGd,OAHc,EAId,YAJc,CAAhB;AAMA,IAAMC,MAAM,GAAG,GAAf;AACA,IAAMC,cAAc,GAAG,0EAEjBH,OAAO,CAACI,MAAR,CAAeH,OAAf,EAAwBI,IAAxB,EAFiB,+CAGnBA,IAHmB,CAGd,EAHc,CAAvB;AAKA,eAAe;AACbC,EAAAA,SAAS,EAATA,SADa;AAEbC,EAAAA,IAAI,EAAJA;AAFa,CAAf;;AAUA,SAASD,SAAT,CAAmBE,GAAnB,EAAwB;AACtB,SAAOA,GAAG,CAACC,MAAJ,CAAWD,GAAG,CAACE,MAAJ,GAAa,CAAxB,MAA+BR,MAAtC;AACD;;AAQD,SAASK,IAAT,CAAcC,GAAd,EAAmBG,IAAnB,EAAyB;AACvB,MAAIC,OAAO,GAAGC,QAAQ,CAACL,GAAG,CAACM,SAAJ,CAAc,CAAd,EAAiBN,GAAG,CAACE,MAAJ,GAAa,CAA9B,CAAD,EAAmC,EAAnC,CAAtB;AACA,MAAIK,IAAI,GAAGC,UAAU,CAACL,IAAD,CAAV,GAAmBZ,MAAnB,GAA4BD,KAAvC;AACA,SAAOiB,IAAI,GAAGH,OAAP,GAAiB,GAAxB;AACD;;AAED,SAASI,UAAT,CAAoBL,IAApB,EAA0B;AACxBA,EAAAA,IAAI,GAAGA,IAAI,CAACM,WAAL,EAAP;;AACA,MAAIjB,OAAO,CAACkB,IAAR,CAAa,UAAAC,CAAC;AAAA,WAAIR,IAAI,CAACS,OAAL,CAAaD,CAAb,KAAmB,CAAvB;AAAA,GAAd,CAAJ,EAA6C;AAC3C,WAAO,IAAP;AACD;;AACD,MAAIlB,OAAO,CAACiB,IAAR,CAAa,UAAAC,CAAC;AAAA,WAAIR,IAAI,CAACS,OAAL,CAAaD,CAAb,KAAmB,CAAvB;AAAA,GAAd,CAAJ,EAA6C;AAC3C,WAAO,KAAP;AACD;;AACD,QAAM,IAAIE,KAAJ,CAAUlB,cAAV,CAAN;AACD","sourcesContent":["/**\n * Calculation of percent strings\n */\n\nimport {Dimensions} from 'react-native';\n\nconst {width, height} = Dimensions.get('window');\nconst V_PROPS = [\n  'height',\n  'top',\n  'bottom',\n  'vertical',\n];\nconst H_PROPS = [\n  'width',\n  'left',\n  'right',\n  'horizontal',\n];\nconst SUFFIX = '%';\nconst invalidPropMsg = [\n  `Name of variable or property with percent value should contain `,\n  `(${V_PROPS.concat(H_PROPS).join()}) to define base for percent calculation`\n  ].join('');\n\nexport default {\n  isPercent,\n  calc,\n};\n\n/**\n * Is string contains percent\n * @param {String} str\n * @returns {boolean}\n */\nfunction isPercent(str) {\n  return str.charAt(str.length - 1) === SUFFIX;\n}\n\n/**\n * Calc percent to pixels\n * @param {String} str\n * @param {String} prop\n * @returns {number}\n */\nfunction calc(str, prop) {\n  let percent = parseInt(str.substring(0, str.length - 1), 10);\n  let base = isVertical(prop) ? height : width;\n  return base * percent / 100;\n}\n\nfunction isVertical(prop) {\n  prop = prop.toLowerCase();\n  if (V_PROPS.some(p => prop.indexOf(p) >= 0)) {\n    return true;\n  }\n  if (H_PROPS.some(p => prop.indexOf(p) >= 0)) {\n    return false;\n  }\n  throw new Error(invalidPropMsg);\n}\n"]},"metadata":{},"sourceType":"module"}