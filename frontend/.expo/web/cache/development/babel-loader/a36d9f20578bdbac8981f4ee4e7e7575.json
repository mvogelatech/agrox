{"ast":null,"code":"var _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/00-common/tab-button.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport { createTStyleSheet } from \"../../src/utils/style\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nfunction selectIcon(icon) {\n  var selected = 'wifi-tethering';\n\n  if (icon === 'gradient') {\n    selected = 'gradient';\n  } else if (icon === 'equalizer') {\n    selected = 'equalizer';\n  }\n\n  return selected;\n}\n\nexport function TabButton(props) {\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    style: styles.default,\n    onPress: props.onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, React.createElement(MaterialIcons, {\n    name: selectIcon(props.icon),\n    color: \"white\",\n    style: styles.tabIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, props.text)), props.isSelected ? React.createElement(View, {\n    style: styles.selectedIndicator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }\n  }) : React.createElement(View, {\n    style: styles.unselectedIndicator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 68\n    }\n  }));\n}\nvar styles = createTStyleSheet({\n  $indicatorSize: '6rem',\n  $tabHeight: '50rem',\n  default: {\n    flexDirection: 'row',\n    height: '$tabHeight - $indicatorSize',\n    backgroundColor: '#0D3845',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    paddingTop: '$indicatorSize',\n    marginLeft: '8rem',\n    fontSize: '12rem',\n    color: 'white'\n  },\n  selectedIndicator: {\n    backgroundColor: '#99D19D',\n    height: '$indicatorSize'\n  },\n  unselectedIndicator: {\n    backgroundColor: '#0D3845',\n    height: '$indicatorSize'\n  },\n  tabIcon: {\n    paddingTop: '$indicatorSize',\n    fontSize: '17rem'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/00-common/tab-button.tsx"],"names":["React","Text","createTStyleSheet","TouchableOpacity","MaterialIcons","selectIcon","icon","selected","TabButton","props","flex","styles","default","onPress","tabIcon","text","isSelected","selectedIndicator","unselectedIndicator","$indicatorSize","$tabHeight","flexDirection","height","backgroundColor","alignItems","justifyContent","paddingTop","marginLeft","fontSize","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,iBAAT;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,aAAT,QAA8B,oBAA9B;;AASA,SAASC,UAAT,CAAoBC,IAApB,EAAuE;AACtE,MAAIC,QAAqD,GAAG,gBAA5D;;AACA,MAAID,IAAI,KAAK,UAAb,EAAyB;AACxBC,IAAAA,QAAQ,GAAG,UAAX;AACA,GAFD,MAEO,IAAID,IAAI,KAAK,WAAb,EAA0B;AAChCC,IAAAA,QAAQ,GAAG,WAAX;AACA;;AAED,SAAOA,QAAP;AACA;;AAED,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0C;AAChD,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAE,GAAjC;AAAsC,IAAA,KAAK,EAAEC,MAAM,CAACC,OAApD;AAA6D,IAAA,OAAO,EAAEH,KAAK,CAACI,OAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAER,UAAU,CAACI,KAAK,CAACH,IAAP,CAA/B;AAA6C,IAAA,KAAK,EAAC,OAAnD;AAA2D,IAAA,KAAK,EAAEK,MAAM,CAACG,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BN,KAAK,CAACM,IAAjC,CAFD,CADD,EAKEN,KAAK,CAACO,UAAN,GAAmB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAA+D,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALjE,CADD;AASA;AAED,IAAMP,MAAM,GAAGT,iBAAiB,CAAC;AAChCiB,EAAAA,cAAc,EAAE,MADgB;AAEhCC,EAAAA,UAAU,EAAE,OAFoB;AAGhCR,EAAAA,OAAO,EAAE;AACRS,IAAAA,aAAa,EAAE,KADP;AAERC,IAAAA,MAAM,EAAE,6BAFA;AAGRC,IAAAA,eAAe,EAAE,SAHT;AAIRC,IAAAA,UAAU,EAAE,QAJJ;AAKRC,IAAAA,cAAc,EAAE;AALR,GAHuB;AAUhCV,EAAAA,IAAI,EAAE;AACLW,IAAAA,UAAU,EAAE,gBADP;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLC,IAAAA,QAAQ,EAAE,OAHL;AAILC,IAAAA,KAAK,EAAE;AAJF,GAV0B;AAgBhCZ,EAAAA,iBAAiB,EAAE;AAClBM,IAAAA,eAAe,EAAE,SADC;AAElBD,IAAAA,MAAM,EAAE;AAFU,GAhBa;AAoBhCJ,EAAAA,mBAAmB,EAAE;AACpBK,IAAAA,eAAe,EAAE,SADG;AAEpBD,IAAAA,MAAM,EAAE;AAFY,GApBW;AAwBhCR,EAAAA,OAAO,EAAE;AACRY,IAAAA,UAAU,EAAE,gBADJ;AAERE,IAAAA,QAAQ,EAAE;AAFF;AAxBuB,CAAD,CAAhC","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport { Text } from 'react-native-paper';\nimport { createTStyleSheet } from '../../src/utils/style';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { MaterialIcons } from '@expo/vector-icons';\n\ntype TabButtonProps = {\n\ttext: string;\n\ticon: 'equalizer' | 'gradient' | 'wifi-tethering';\n\tisSelected: boolean;\n\tonPress: () => void;\n};\n\nfunction selectIcon(icon: 'equalizer' | 'gradient' | 'wifi-tethering') {\n\tlet selected: 'equalizer' | 'gradient' | 'wifi-tethering' = 'wifi-tethering';\n\tif (icon === 'gradient') {\n\t\tselected = 'gradient';\n\t} else if (icon === 'equalizer') {\n\t\tselected = 'equalizer';\n\t}\n\n\treturn selected;\n}\n\nexport function TabButton(props: TabButtonProps) {\n\treturn (\n\t\t<View style={{ flex: 1 }}>\n\t\t\t<TouchableOpacity activeOpacity={0.5} style={styles.default} onPress={props.onPress}>\n\t\t\t\t<MaterialIcons name={selectIcon(props.icon)} color=\"white\" style={styles.tabIcon} />\n\t\t\t\t<Text style={styles.text}>{props.text}</Text>\n\t\t\t</TouchableOpacity>\n\t\t\t{props.isSelected ? <View style={styles.selectedIndicator} /> : <View style={styles.unselectedIndicator} />}\n\t\t</View>\n\t);\n}\n\nconst styles = createTStyleSheet({\n\t$indicatorSize: '6rem',\n\t$tabHeight: '50rem',\n\tdefault: {\n\t\tflexDirection: 'row',\n\t\theight: '$tabHeight - $indicatorSize',\n\t\tbackgroundColor: '#0D3845',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\ttext: {\n\t\tpaddingTop: '$indicatorSize',\n\t\tmarginLeft: '8rem',\n\t\tfontSize: '12rem',\n\t\tcolor: 'white',\n\t},\n\tselectedIndicator: {\n\t\tbackgroundColor: '#99D19D',\n\t\theight: '$indicatorSize',\n\t},\n\tunselectedIndicator: {\n\t\tbackgroundColor: '#0D3845',\n\t\theight: '$indicatorSize',\n\t},\n\ttabIcon: {\n\t\tpaddingTop: '$indicatorSize',\n\t\tfontSize: '17rem',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}