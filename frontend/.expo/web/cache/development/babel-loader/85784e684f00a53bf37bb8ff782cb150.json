{"ast":null,"code":"import { showSnackbar } from \"../snackbars\";\nimport { debug as debug__, getDebugValue, clearDebugValue } from \"./debug\";\nexport { getDebugValue } from \"./debug\";\nvar debugEnabled = false;\n\nfunction debug_() {\n  var text = debug__.apply(void 0, arguments);\n  if (debugEnabled) console.log(text);\n}\n\nexport function enableDebugMode() {\n  debugEnabled = true;\n  debug_('Debug mode enabled!!');\n}\n\nfunction showDebugSnackbar() {\n  try {\n    showSnackbar({\n      text: getDebugValue(),\n      actionText: 'OK'\n    });\n  } catch (_unused) {\n    setTimeout(showDebugSnackbar, 200);\n  }\n}\n\nexport function debug() {\n  if (arguments.length !== 0) debug_.apply(void 0, arguments);\n  if (debugEnabled) showDebugSnackbar();\n}\nexport function isDebugModeEnabled() {\n  return debugEnabled;\n}\nexport function clearDebug() {\n  clearDebugValue();\n}","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/src/debug/index.ts"],"names":["showSnackbar","debug","debug__","getDebugValue","clearDebugValue","debugEnabled","debug_","text","console","log","enableDebugMode","showDebugSnackbar","actionText","setTimeout","length","isDebugModeEnabled","clearDebug"],"mappings":"AAAA,SAASA,YAAT;AACA,SAASC,KAAK,IAAIC,OAAlB,EAA2BC,aAA3B,EAA0CC,eAA1C;AAEA,SAASD,aAAT;AAEA,IAAIE,YAAY,GAAG,KAAnB;;AAEA,SAASC,MAAT,GAAoC;AACnC,MAAMC,IAAI,GAAGL,OAAO,MAAP,mBAAb;AACA,MAAIG,YAAJ,EAAkBG,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAClB;;AAED,OAAO,SAASG,eAAT,GAAiC;AACvCL,EAAAA,YAAY,GAAG,IAAf;AACAC,EAAAA,MAAM,CAAC,sBAAD,CAAN;AACA;;AAED,SAASK,iBAAT,GAAmC;AAClC,MAAI;AACHX,IAAAA,YAAY,CAAC;AAAEO,MAAAA,IAAI,EAAEJ,aAAa,EAArB;AAAyBS,MAAAA,UAAU,EAAE;AAArC,KAAD,CAAZ;AACA,GAFD,CAEE,gBAAM;AACPC,IAAAA,UAAU,CAACF,iBAAD,EAAoB,GAApB,CAAV;AACA;AACD;;AAED,OAAO,SAASV,KAAT,GAAyC;AAC/C,MAAI,UAAKa,MAAL,KAAgB,CAApB,EAAuBR,MAAM,MAAN;AACvB,MAAID,YAAJ,EAAkBM,iBAAiB;AACnC;AAED,OAAO,SAASI,kBAAT,GAAuC;AAC7C,SAAOV,YAAP;AACA;AAED,OAAO,SAASW,UAAT,GAA4B;AAClCZ,EAAAA,eAAe;AACf","sourcesContent":["import { showSnackbar } from '../snackbars';\nimport { debug as debug__, getDebugValue, clearDebugValue } from './debug';\n\nexport { getDebugValue } from './debug';\n\nlet debugEnabled = false;\n\nfunction debug_(...args: unknown[]) {\n\tconst text = debug__(...args);\n\tif (debugEnabled) console.log(text);\n}\n\nexport function enableDebugMode(): void {\n\tdebugEnabled = true;\n\tdebug_('Debug mode enabled!!');\n}\n\nfunction showDebugSnackbar(): void {\n\ttry {\n\t\tshowSnackbar({ text: getDebugValue(), actionText: 'OK' });\n\t} catch {\n\t\tsetTimeout(showDebugSnackbar, 200);\n\t}\n}\n\nexport function debug(...args: unknown[]): void {\n\tif (args.length !== 0) debug_(...args);\n\tif (debugEnabled) showDebugSnackbar();\n}\n\nexport function isDebugModeEnabled(): boolean {\n\treturn debugEnabled;\n}\n\nexport function clearDebug(): void {\n\tclearDebugValue();\n}\n"]},"metadata":{},"sourceType":"module"}