{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/02-general/bottom-cards/indices-overview/indices-selection.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useMemo, useRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createTStyleSheet } from \"../../../../src/utils/style\";\nimport Slider from '@react-native-community/slider';\nimport { CardTitle } from \"../../../00-common/card-title\";\nimport { dispatch, useMainSelector } from \"../../../../redux-things\";\nimport { TabButtonTextHighLight } from \"../../../00-common/tab-button-text-highlight\";\nimport { formatDate, scrollToEndAndBack } from \"../../../../src/utils\";\nimport dayjs from 'dayjs';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { Button, Divider } from 'react-native-paper';\nimport { NDVI, NDWI, NDRE, Greenness } from \"../../../../models\";\nimport { WaitOverlay } from \"../../../00-common/wait-overlay\";\nimport { cacheFieldIndexImages, getDatesForIndexDataFromField } from \"../../../../src/utils/visiona-indices\";\nexport function IndicesSelection(props) {\n  var field = useMainSelector(function (state) {\n    return state.interactionData.general.currentField;\n  });\n  var today = dayjs().startOf('day');\n  var previousYear = dayjs().startOf('day').subtract(1, 'year');\n  var indicesTab = useMainSelector(function (state) {\n    return state.interactionData.general.indicesCurrentTab;\n  });\n  var scrollViewRef = useRef(null);\n  var scrollViewTextRef = useRef(null);\n\n  var _useState = useState(getDatesForIndexDataFromField(field)),\n      _useState2 = _slicedToArray(_useState, 2),\n      indexDates = _useState2[0],\n      setIndexDates = _useState2[1];\n\n  var _useState3 = useState(previousYear),\n      _useState4 = _slicedToArray(_useState3, 2),\n      startDate = _useState4[0],\n      setStartDate = _useState4[1];\n\n  var _useState5 = useState(today),\n      _useState6 = _slicedToArray(_useState5, 2),\n      endDate = _useState6[0],\n      setEndDate = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showDatePicker = _useState8[0],\n      setShowDatePicker = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showIndicator = _useState10[0],\n      setShowIndicator = _useState10[1];\n\n  var sliderRef = useRef();\n\n  var onChange = function onChange(event, selectedDate) {\n    setShowDatePicker(false);\n\n    if (selectedDate) {\n      setShowIndicator(true);\n      setStartDate(dayjs(selectedDate));\n      var newDates = getDatesForIndexDataFromField(field, selectedDate.toISOString());\n      setIndexDates(newDates);\n      setShowIndicator(false);\n    }\n  };\n\n  var showDatepicker = function showDatepicker() {\n    setShowDatePicker(true);\n  };\n\n  var onDateSliderChange = function onDateSliderChange(value) {\n    dispatch({\n      type: 'CHANGE_INDICES_DATE',\n      indexDate: indexDates[value]\n    });\n  };\n\n  useMemo(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!field) {\n                _context.next = 6;\n                break;\n              }\n\n              setShowIndicator(true);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(cacheFieldIndexImages(field, indicesTab));\n\n            case 4:\n              if (indexDates.length > 0) {\n                setStartDate(dayjs(indexDates[0]));\n                setEndDate(dayjs(indexDates[indexDates.length - 1]));\n                dispatch({\n                  type: 'CHANGE_INDICES_DATE',\n                  indexDate: indexDates[0]\n                });\n              }\n\n              setShowIndicator(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, [field, indicesTab, indexDates]);\n  return React.createElement(View, {\n    style: styles.mainView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }\n  }, showIndicator ? React.createElement(WaitOverlay, {\n    text: \"Aguarde\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }) : undefined, React.createElement(View, {\n    style: styles.tabMenuView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, React.createElement(ScrollView, {\n    ref: scrollViewRef,\n    horizontal: true,\n    contentContainerStyle: styles.tabMenuView,\n    showsHorizontalScrollIndicator: false,\n    onLayout: function onLayout() {\n      return scrollToEndAndBack(scrollViewRef, 'scrollview');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(TabButtonTextHighLight, {\n    isSelected: indicesTab === NDVI,\n    text: NDVI.text,\n    onPress: function onPress() {\n      (sliderRef == null ? void 0 : sliderRef.current).setNativeProps({\n        value: 0\n      });\n      dispatch({\n        type: 'CHANGE_INDICES_TAB',\n        tab: NDVI\n      });\n      dispatch({\n        type: 'CHANGE_INDICES_DATE',\n        indexDate: undefined\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  }), React.createElement(TabButtonTextHighLight, {\n    isSelected: indicesTab === NDWI,\n    text: NDWI.text,\n    onPress: function onPress() {\n      (sliderRef == null ? void 0 : sliderRef.current).setNativeProps({\n        value: 0\n      });\n      dispatch({\n        type: 'CHANGE_INDICES_TAB',\n        tab: NDWI\n      });\n      dispatch({\n        type: 'CHANGE_INDICES_DATE',\n        indexDate: undefined\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }\n  }), React.createElement(TabButtonTextHighLight, {\n    isSelected: indicesTab === NDRE,\n    text: NDRE.text,\n    onPress: function onPress() {\n      (sliderRef == null ? void 0 : sliderRef.current).setNativeProps({\n        value: 0\n      });\n      dispatch({\n        type: 'CHANGE_INDICES_TAB',\n        tab: NDRE\n      });\n      dispatch({\n        type: 'CHANGE_INDICES_DATE',\n        indexDate: undefined\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }\n  }), React.createElement(TabButtonTextHighLight, {\n    isSelected: indicesTab === Greenness,\n    text: Greenness.text,\n    onPress: function onPress() {\n      (sliderRef == null ? void 0 : sliderRef.current).setNativeProps({\n        value: 0\n      });\n      dispatch({\n        type: 'CHANGE_INDICES_TAB',\n        tab: Greenness\n      });\n      dispatch({\n        type: 'CHANGE_INDICES_DATE',\n        indexDate: undefined\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 6\n    }\n  }))), React.createElement(View, {\n    style: styles.cardView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }\n  }, React.createElement(CardTitle, {\n    text: \"Informa\\xE7\\xF5es\",\n    titleIcon: \"location\",\n    onClose: props.onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }), React.createElement(ScrollView, {\n    ref: scrollViewTextRef,\n    style: styles.textScroll,\n    onLayout: function onLayout() {\n      return scrollToEndAndBack(scrollViewTextRef, 'scrollview');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.indexText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 6\n    }\n  }, indicesTab.description)), React.createElement(Slider, {\n    ref: sliderRef,\n    style: styles.slider,\n    minimumValue: 0,\n    maximumValue: indexDates.length - 1,\n    step: 1,\n    minimumTrackTintColor: \"#0D3845\",\n    maximumTrackTintColor: \"#469BA2\",\n    onValueChange: onDateSliderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles.dateView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    icon: \"calendar\",\n    style: styles.dateBox,\n    onPress: function onPress() {\n      return showDatepicker();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 6\n    }\n  }, formatDate(startDate.toISOString())), React.createElement(Divider, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 6\n    }\n  }), React.createElement(Text, {\n    style: styles.endDateBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 6\n    }\n  }, formatDate(endDate.toISOString())))), showDatePicker && React.createElement(DateTimePicker, {\n    display: \"spinner\",\n    minimumDate: dayjs(endDate).subtract(1, 'year').toDate(),\n    value: startDate.toDate(),\n    mode: \"date\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }));\n}\nvar styles = createTStyleSheet({\n  mainView: {\n    backgroundColor: '#fff',\n    height: '35%'\n  },\n  tabMenuView: {\n    backgroundColor: '#0D3845'\n  },\n  cardView: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    alignItems: 'stretch'\n  },\n  indexText: {\n    paddingLeft: '20rem'\n  },\n  textScroll: {\n    textAlign: 'justify'\n  },\n  slider: {\n    alignSelf: 'stretch',\n    paddingBottom: '20rem',\n    marginHorizontal: '30rem'\n  },\n  dateView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: '20rem',\n    paddingBottom: '10rem'\n  },\n  divider: {\n    height: '0rem',\n    flex: 1\n  },\n  dateBox: {\n    flex: 1,\n    backgroundColor: '#f7f7fa',\n    borderWidth: '1rem',\n    borderColor: '#d1d4d5',\n    borderStyle: 'solid',\n    height: '40rem',\n    alignSelf: 'center'\n  },\n  endDateBox: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/02-general/bottom-cards/indices-overview/indices-selection.tsx"],"names":["React","useMemo","useRef","useState","createTStyleSheet","Slider","CardTitle","dispatch","useMainSelector","TabButtonTextHighLight","formatDate","scrollToEndAndBack","dayjs","DateTimePicker","Button","Divider","NDVI","NDWI","NDRE","Greenness","WaitOverlay","cacheFieldIndexImages","getDatesForIndexDataFromField","IndicesSelection","props","field","state","interactionData","general","currentField","today","startOf","previousYear","subtract","indicesTab","indicesCurrentTab","scrollViewRef","scrollViewTextRef","indexDates","setIndexDates","startDate","setStartDate","endDate","setEndDate","showDatePicker","setShowDatePicker","showIndicator","setShowIndicator","sliderRef","onChange","event","selectedDate","newDates","toISOString","showDatepicker","onDateSliderChange","value","type","indexDate","length","styles","mainView","undefined","tabMenuView","text","current","setNativeProps","tab","cardView","onClose","textScroll","indexText","description","slider","dateView","dateBox","divider","endDateBox","toDate","backgroundColor","height","flex","flexDirection","justifyContent","alignItems","paddingLeft","textAlign","alignSelf","paddingBottom","marginHorizontal","paddingHorizontal","borderWidth","borderColor","borderStyle"],"mappings":"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","sourcesContent":["import React, { useMemo, useRef, useState } from 'react';\nimport { View, ScrollView, Text } from 'react-native';\nimport { createTStyleSheet } from '../../../../src/utils/style';\nimport Slider, { SliderRef } from '@react-native-community/slider';\nimport { CardTitle } from '../../../00-common/card-title';\nimport { dispatch, useMainSelector } from '../../../../redux-things';\nimport { CloseableBottomCardProps } from '../closeable-bottom-card-props';\nimport { TabButtonTextHighLight } from '../../../00-common/tab-button-text-highlight';\nimport { formatDate, scrollToEndAndBack } from '../../../../src/utils';\nimport dayjs from 'dayjs';\nimport DateTimePicker, { Event } from '@react-native-community/datetimepicker';\nimport { Button, Divider } from 'react-native-paper';\nimport { NDVI, NDWI, NDRE, Greenness } from '../../../../models';\nimport { WaitOverlay } from '../../../00-common/wait-overlay';\nimport { cacheFieldIndexImages, getDatesForIndexDataFromField } from '../../../../src/utils/visiona-indices';\n\ntype MySliderRef = (React.LegacyRef<Slider> & React.MutableRefObject<SliderRef>) | undefined;\n\nexport function IndicesSelection(props: CloseableBottomCardProps) {\n\tconst field = useMainSelector((state) => state.interactionData.general.currentField)!;\n\n\tconst today = dayjs().startOf('day');\n\tconst previousYear = dayjs().startOf('day').subtract(1, 'year');\n\n\tconst indicesTab = useMainSelector((state) => state.interactionData.general.indicesCurrentTab);\n\n\tconst scrollViewRef = useRef<ScrollView>(null);\n\tconst scrollViewTextRef = useRef<ScrollView>(null);\n\n\tconst [indexDates, setIndexDates] = useState(getDatesForIndexDataFromField(field));\n\n\tconst [startDate, setStartDate] = useState(previousYear);\n\tconst [endDate, setEndDate] = useState(today);\n\n\tconst [showDatePicker, setShowDatePicker] = useState(false);\n\tconst [showIndicator, setShowIndicator] = useState(false);\n\n\tconst sliderRef = useRef() as MySliderRef;\n\n\tconst onChange = (event: Event, selectedDate: Date | undefined) => {\n\t\tsetShowDatePicker(false);\n\n\t\tif (selectedDate) {\n\t\t\tsetShowIndicator(true);\n\t\t\tsetStartDate(dayjs(selectedDate));\n\t\t\tconst newDates = getDatesForIndexDataFromField(field, selectedDate.toISOString());\n\t\t\tsetIndexDates(newDates);\n\t\t\tsetShowIndicator(false);\n\t\t}\n\t};\n\n\tconst showDatepicker = () => {\n\t\tsetShowDatePicker(true);\n\t};\n\n\tconst onDateSliderChange = (value: number) => {\n\t\tdispatch({ type: 'CHANGE_INDICES_DATE', indexDate: indexDates[value] });\n\t};\n\n\tuseMemo(() => {\n\t\t(async () => {\n\t\t\tif (field) {\n\t\t\t\tsetShowIndicator(true);\n\t\t\t\tawait cacheFieldIndexImages(field, indicesTab);\n\t\t\t\tif (indexDates.length > 0) {\n\t\t\t\t\tsetStartDate(dayjs(indexDates[0]));\n\t\t\t\t\tsetEndDate(dayjs(indexDates[indexDates.length - 1]));\n\t\t\t\t\tdispatch({ type: 'CHANGE_INDICES_DATE', indexDate: indexDates[0] });\n\t\t\t\t}\n\n\t\t\t\tsetShowIndicator(false);\n\t\t\t}\n\t\t})();\n\t}, [field, indicesTab, indexDates]);\n\n\treturn (\n\t\t<View style={styles.mainView}>\n\t\t\t{showIndicator ? <WaitOverlay text=\"Aguarde\" /> : undefined}\n\t\t\t<View style={styles.tabMenuView}>\n\t\t\t\t<ScrollView\n\t\t\t\t\tref={scrollViewRef}\n\t\t\t\t\thorizontal\n\t\t\t\t\tcontentContainerStyle={styles.tabMenuView}\n\t\t\t\t\tshowsHorizontalScrollIndicator={false}\n\t\t\t\t\tonLayout={() => scrollToEndAndBack(scrollViewRef, 'scrollview')}\n\t\t\t\t>\n\t\t\t\t\t<TabButtonTextHighLight\n\t\t\t\t\t\tisSelected={indicesTab === NDVI}\n\t\t\t\t\t\ttext={NDVI.text}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t(sliderRef?.current as Slider).setNativeProps({ value: 0 });\n\t\t\t\t\t\t\tdispatch({ type: 'CHANGE_INDICES_TAB', tab: NDVI });\n\t\t\t\t\t\t\tdispatch({ type: 'CHANGE_INDICES_DATE', indexDate: undefined });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<TabButtonTextHighLight\n\t\t\t\t\t\tisSelected={indicesTab === NDWI}\n\t\t\t\t\t\ttext={NDWI.text}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t(sliderRef?.current as Slider).setNativeProps({ value: 0 });\n\t\t\t\t\t\t\tdispatch({ type: 'CHANGE_INDICES_TAB', tab: NDWI });\n\t\t\t\t\t\t\tdispatch({ type: 'CHANGE_INDICES_DATE', indexDate: undefined });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<TabButtonTextHighLight\n\t\t\t\t\t\tisSelected={indicesTab === NDRE}\n\t\t\t\t\t\ttext={NDRE.text}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t(sliderRef?.current as Slider).setNativeProps({ value: 0 });\n\t\t\t\t\t\t\tdispatch({ type: 'CHANGE_INDICES_TAB', tab: NDRE });\n\t\t\t\t\t\t\tdispatch({ type: 'CHANGE_INDICES_DATE', indexDate: undefined });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<TabButtonTextHighLight\n\t\t\t\t\t\tisSelected={indicesTab === Greenness}\n\t\t\t\t\t\ttext={Greenness.text}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t(sliderRef?.current as Slider).setNativeProps({ value: 0 });\n\t\t\t\t\t\t\tdispatch({ type: 'CHANGE_INDICES_TAB', tab: Greenness });\n\t\t\t\t\t\t\tdispatch({ type: 'CHANGE_INDICES_DATE', indexDate: undefined });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</ScrollView>\n\t\t\t</View>\n\t\t\t<View style={styles.cardView}>\n\t\t\t\t<CardTitle text=\"Informações\" titleIcon=\"location\" onClose={props.onClose} />\n\t\t\t\t<ScrollView ref={scrollViewTextRef} style={styles.textScroll} onLayout={() => scrollToEndAndBack(scrollViewTextRef, 'scrollview')}>\n\t\t\t\t\t<Text style={styles.indexText}>{indicesTab.description}</Text>\n\t\t\t\t</ScrollView>\n\t\t\t\t<Slider\n\t\t\t\t\tref={sliderRef}\n\t\t\t\t\tstyle={styles.slider}\n\t\t\t\t\tminimumValue={0}\n\t\t\t\t\tmaximumValue={indexDates.length - 1}\n\t\t\t\t\tstep={1}\n\t\t\t\t\tminimumTrackTintColor=\"#0D3845\"\n\t\t\t\t\tmaximumTrackTintColor=\"#469BA2\"\n\t\t\t\t\tonValueChange={onDateSliderChange}\n\t\t\t\t/>\n\t\t\t\t<View style={styles.dateView}>\n\t\t\t\t\t<Button icon=\"calendar\" style={styles.dateBox} onPress={() => showDatepicker()}>\n\t\t\t\t\t\t{formatDate(startDate.toISOString())}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Divider style={styles.divider} />\n\t\t\t\t\t<Text style={styles.endDateBox}>{formatDate(endDate.toISOString())}</Text>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t{showDatePicker && (\n\t\t\t\t<DateTimePicker\n\t\t\t\t\tdisplay=\"spinner\"\n\t\t\t\t\tminimumDate={dayjs(endDate).subtract(1, 'year').toDate()}\n\t\t\t\t\tvalue={startDate.toDate()}\n\t\t\t\t\tmode=\"date\"\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</View>\n\t);\n}\n\nconst styles = createTStyleSheet({\n\tmainView: {\n\t\tbackgroundColor: '#fff',\n\t\theight: '35%',\n\t},\n\ttabMenuView: {\n\t\tbackgroundColor: '#0D3845',\n\t},\n\tcardView: {\n\t\tflex: 1,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'flex-end',\n\t\talignItems: 'stretch',\n\t},\n\tindexText: {\n\t\tpaddingLeft: '20rem',\n\t},\n\ttextScroll: {\n\t\ttextAlign: 'justify',\n\t},\n\tslider: {\n\t\talignSelf: 'stretch',\n\t\tpaddingBottom: '20rem',\n\t\tmarginHorizontal: '30rem',\n\t},\n\tdateView: {\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tpaddingHorizontal: '20rem',\n\t\tpaddingBottom: '10rem',\n\t},\n\tdivider: {\n\t\theight: '0rem',\n\t\tflex: 1,\n\t},\n\tdateBox: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#f7f7fa',\n\t\tborderWidth: '1rem',\n\t\tborderColor: '#d1d4d5',\n\t\tborderStyle: 'solid',\n\t\theight: '40rem',\n\t\talignSelf: 'center',\n\t},\n\tendDateBox: { flex: 1 },\n});\n"]},"metadata":{},"sourceType":"module"}