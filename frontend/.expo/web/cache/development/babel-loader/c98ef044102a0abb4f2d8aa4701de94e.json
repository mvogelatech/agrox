{"ast":null,"code":"var _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/00-common/card-button.tsx\";\nimport React from 'react';\nimport { Card } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { colors } from \"../../src/assets\";\nimport { RoundIcon } from \"./round-icon\";\nimport { createTStyleSheet, overrideTStyleSheet } from \"../../src/utils/style\";\nimport { displayAlert, alertDatePrescription } from \"../../src/utils/alert-messages\";\nexport function CardButton(props) {\n  var _props$customStyle;\n\n  displayAlert(alertDatePrescription);\n  var styles = overrideTStyleSheet(defaultStyleSheet, {\n    card: (_props$customStyle = props.customStyle) != null ? _props$customStyle : {},\n    text: {\n      color: props.enabled ? undefined : colors.gray\n    }\n  });\n  return React.createElement(View, {\n    style: styles.mainview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, React.createElement(Card, {\n    style: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      height: '100%'\n    },\n    onPress: props.enabled ? props.onPress : function () {\n      return displayAlert(props.disabledMessage);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, React.createElement(RoundIcon, {\n    isEnabled: props.enabled,\n    icon: props.icon,\n    color: props.iconColor,\n    size: \"30rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, props.text))));\n}\nvar defaultStyleSheet = createTStyleSheet({\n  mainView: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  card: {\n    elevation: '4rem',\n    height: '44rem',\n    width: '100%'\n  },\n  text: {\n    marginLeft: '10rem',\n    fontSize: '14rem',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontWeight: '500'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/00-common/card-button.tsx"],"names":["React","Card","colors","RoundIcon","createTStyleSheet","overrideTStyleSheet","displayAlert","alertDatePrescription","CardButton","props","styles","defaultStyleSheet","card","customStyle","text","color","enabled","undefined","gray","mainview","flexDirection","alignItems","justifyContent","width","height","onPress","disabledMessage","icon","iconColor","mainView","elevation","marginLeft","fontSize","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,oBAArB;;;;AAGA,SAAsBC,MAAtB;AACA,SAASC,SAAT;AACA,SAASC,iBAAT,EAA4BC,mBAA5B;AAEA,SAASC,YAAT,EAAuBC,qBAAvB;AAyBA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA4C;AAAA;;AAmBlDH,EAAAA,YAAY,CAACC,qBAAD,CAAZ;AAEA,MAAMG,MAAM,GAAGL,mBAAmB,CAACM,iBAAD,EAAoB;AACrDC,IAAAA,IAAI,wBAAEH,KAAK,CAACI,WAAR,iCAAuB,EAD0B;AAErDC,IAAAA,IAAI,EAAE;AACLC,MAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,GAAgBC,SAAhB,GAA4Bf,MAAM,CAACgB;AADrC;AAF+C,GAApB,CAAlC;AAMA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,gBAAD;AACC,IAAA,aAAa,EAAE,GADhB;AAEC,IAAA,KAAK,EAAE;AAAEQ,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,UAAU,EAAE,QAApC;AAA8CC,MAAAA,cAAc,EAAE,QAA9D;AAAwEC,MAAAA,KAAK,EAAE,MAA/E;AAAuFC,MAAAA,MAAM,EAAE;AAA/F,KAFR;AAGC,IAAA,OAAO,EAAEf,KAAK,CAACO,OAAN,GAAgBP,KAAK,CAACgB,OAAtB,GAAgC;AAAA,aAAMnB,YAAY,CAACG,KAAK,CAACiB,eAAP,CAAlB;AAAA,KAH1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEjB,KAAK,CAACO,OAA5B;AAAqC,IAAA,IAAI,EAAEP,KAAK,CAACkB,IAAjD;AAAuD,IAAA,KAAK,EAAElB,KAAK,CAACmB,SAApE;AAA+E,IAAA,IAAI,EAAC,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,EAMC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACI,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BL,KAAK,CAACK,IAAjC,CAND,CADD,CADD,CADD;AAcA;AAED,IAAMH,iBAAiB,GAAGP,iBAAiB,CAAC;AAC3CyB,EAAAA,QAAQ,EAAE;AACTR,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,cAAc,EAAE;AAFP,GADiC;AAK3CV,EAAAA,IAAI,EAAE;AACLkB,IAAAA,SAAS,EAAE,MADN;AAELN,IAAAA,MAAM,EAAE,OAFH;AAGLD,IAAAA,KAAK,EAAE;AAHF,GALqC;AAU3CT,EAAAA,IAAI,EAAE;AACLiB,IAAAA,UAAU,EAAE,OADP;AAELC,IAAAA,QAAQ,EAAE,OAFL;AAGLX,IAAAA,UAAU,EAAE,QAHP;AAILC,IAAAA,cAAc,EAAE,QAJX;AAKLW,IAAAA,UAAU,EAAE;AALP;AAVqC,CAAD,CAA3C","sourcesContent":["import React from 'react';\nimport { Card } from 'react-native-paper';\nimport { View, TouchableOpacity, Text } from 'react-native';\n\nimport { Icon, Color, colors } from '../../src/assets';\nimport { RoundIcon } from './round-icon';\nimport { createTStyleSheet, overrideTStyleSheet, ExtendedStyle } from '../../src/utils/style';\n\nimport { displayAlert, alertDatePrescription } from '../../src/utils/alert-messages';\n\ntype DisabledMessageType = {\n\ttitle: string;\n\tbody: string;\n\tbuttonText: string;\n};\n\ntype EnabledProp = {\n\tenabled: true;\n};\n\ntype DisabledProp = {\n\tenabled: false;\n\tdisabledMessage: DisabledMessageType;\n};\n\ntype CardButtonProps = {\n\ttext: string;\n\ticon: Icon;\n\ticonColor: Color;\n\tcustomStyle?: ExtendedStyle;\n\tonPress: () => void;\n} & (EnabledProp | DisabledProp);\n\nexport function CardButton(props: CardButtonProps) {\n\t// const field = useMainSelector((state) => state.interactionData.general.currentField)!;\n\t// if (field.crop[0].diagnosis[0]) {\n\t// \tconst now = new Date(); // Data de hoje\n\t// \tconst past = new Date(field.crop[0].diagnosis[0].report_date); // Outra data no passado\n\t// \tconst diff = Math.abs(now.getTime() - past.getTime()); // Subtrai uma data pela outra\n\t// \tconst days = Math.ceil(diff / (1000 * 60 * 60 * 24)); // Divide o total pelo total de milisegundos correspondentes a 1 dia. (1000 milisegundos = 1 segundo).\n\t// \tconsole.log('estou aqui', days);\n\n\t// \tif (days > 60) {\n\t// \t\tcontrol = false;\n\t// \t\tdisplayAlert(alertDatePrescription);\n\t// \t}\n\n\t// \tif (days > 30) {\n\t// \t\tcontrol = false;\n\t// \t\tdisplayAlert(alertDatePrescription);\n\t// \t}\n\t// }\n\tdisplayAlert(alertDatePrescription);\n\n\tconst styles = overrideTStyleSheet(defaultStyleSheet, {\n\t\tcard: props.customStyle ?? {},\n\t\ttext: {\n\t\t\tcolor: props.enabled ? undefined : colors.gray,\n\t\t},\n\t});\n\treturn (\n\t\t<View style={styles.mainview}>\n\t\t\t<Card style={styles.card}>\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tactiveOpacity={0.5}\n\t\t\t\t\tstyle={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'center', width: '100%', height: '100%' }}\n\t\t\t\t\tonPress={props.enabled ? props.onPress : () => displayAlert(props.disabledMessage)}\n\t\t\t\t>\n\t\t\t\t\t<RoundIcon isEnabled={props.enabled} icon={props.icon} color={props.iconColor} size=\"30rem\" />\n\t\t\t\t\t<Text style={styles.text}>{props.text}</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</Card>\n\t\t</View>\n\t);\n}\n\nconst defaultStyleSheet = createTStyleSheet({\n\tmainView: {\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tcard: {\n\t\televation: '4rem',\n\t\theight: '44rem',\n\t\twidth: '100%',\n\t},\n\ttext: {\n\t\tmarginLeft: '10rem',\n\t\tfontSize: '14rem',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tfontWeight: '500',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}