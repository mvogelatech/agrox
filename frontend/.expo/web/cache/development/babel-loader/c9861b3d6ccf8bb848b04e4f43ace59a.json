{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Sheet from \"./sheet\";\nimport Style from \"./style\";\nimport Value from \"./value\";\nimport vars from \"./replacers/vars\";\nimport mq from \"./replacers/media-queries\";\nimport child from \"./child\";\nvar BUILD_EVENT = 'build';\n\nvar EStyleSheet = function () {\n  function EStyleSheet() {\n    _classCallCheck(this, EStyleSheet);\n\n    this.child = child;\n    this.builded = false;\n    this.sheets = [];\n    this.globalVars = null;\n    this.listeners = {};\n\n    this._proxyToOriginal();\n  }\n\n  _createClass(EStyleSheet, [{\n    key: \"create\",\n    value: function create(obj) {\n      var sheet = new Sheet(obj);\n      this.sheets.push(sheet);\n\n      if (this.builded) {\n        sheet.calc(this.globalVars);\n      }\n\n      return sheet.getResult();\n    }\n  }, {\n    key: \"build\",\n    value: function build(rawGlobalVars) {\n      this.builded = true;\n\n      this._calcGlobalVars(rawGlobalVars);\n\n      this._calcSheets();\n\n      this._callListeners(BUILD_EVENT);\n    }\n  }, {\n    key: \"value\",\n    value: function value(expr, prop) {\n      var varsArr = this.globalVars ? [this.globalVars] : [];\n      return new Value(expr, prop, varsArr).calc();\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(event, listener) {\n      this._assertSubscriptionParams(event, listener);\n\n      this.listeners[BUILD_EVENT] = this.listeners[BUILD_EVENT] || [];\n      this.listeners[BUILD_EVENT].push(listener);\n\n      if (this.builded) {\n        listener();\n      }\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(event, listener) {\n      this._assertSubscriptionParams(event, listener);\n\n      if (this.listeners[BUILD_EVENT]) {\n        this.listeners[BUILD_EVENT] = this.listeners[BUILD_EVENT].filter(function (item) {\n          return item !== listener;\n        });\n      }\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this.sheets.forEach(function (sheet) {\n        return sheet.clearCache();\n      });\n    }\n  }, {\n    key: \"_calcGlobalVars\",\n    value: function _calcGlobalVars(rawGlobalVars) {\n      if (rawGlobalVars) {\n        this._checkGlobalVars(rawGlobalVars);\n\n        rawGlobalVars.$theme = rawGlobalVars.$theme || 'default';\n        this.globalVars = new Style(rawGlobalVars, [rawGlobalVars]).calc().calculatedVars;\n      }\n    }\n  }, {\n    key: \"_calcSheets\",\n    value: function _calcSheets() {\n      var _this = this;\n\n      this.sheets.forEach(function (sheet) {\n        return sheet.calc(_this.globalVars);\n      });\n    }\n  }, {\n    key: \"_callListeners\",\n    value: function _callListeners(event) {\n      if (Array.isArray(this.listeners[event])) {\n        this.listeners[event].forEach(function (listener) {\n          return listener();\n        });\n      }\n    }\n  }, {\n    key: \"_proxyToOriginal\",\n    value: function _proxyToOriginal() {\n      var _this2 = this;\n\n      var props = ['setStyleAttributePreprocessor', 'hairlineWidth', 'absoluteFill', 'absoluteFillObject', 'flatten'];\n      props.forEach(function (prop) {\n        Object.defineProperty(_this2, prop, {\n          get: function get() {\n            return StyleSheet[prop];\n          },\n          enumerable: true\n        });\n      });\n    }\n  }, {\n    key: \"_checkGlobalVars\",\n    value: function _checkGlobalVars(rawGlobalVars) {\n      Object.keys(rawGlobalVars).forEach(function (key) {\n        if (!vars.isVar(key) && !mq.isMediaQuery(key)) {\n          throw new Error(\"EStyleSheet.build() params should contain global variables (start with $) \" + (\"or media queries (start with @media). Got '\" + key + \"'.\"));\n        }\n      });\n    }\n  }, {\n    key: \"_assertSubscriptionParams\",\n    value: function _assertSubscriptionParams(event, listener) {\n      if (event !== BUILD_EVENT) {\n        throw new Error(\"Only '\" + BUILD_EVENT + \"' event is currently supported.\");\n      }\n\n      if (typeof listener !== 'function') {\n        throw new Error('Listener should be a function.');\n      }\n    }\n  }]);\n\n  return EStyleSheet;\n}();\n\nexport { EStyleSheet as default };","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/node_modules/react-native-extended-stylesheet/src/api.js"],"names":["Sheet","Style","Value","vars","mq","child","BUILD_EVENT","EStyleSheet","builded","sheets","globalVars","listeners","_proxyToOriginal","obj","sheet","push","calc","getResult","rawGlobalVars","_calcGlobalVars","_calcSheets","_callListeners","expr","prop","varsArr","event","listener","_assertSubscriptionParams","filter","item","forEach","clearCache","_checkGlobalVars","$theme","calculatedVars","Array","isArray","props","Object","defineProperty","get","StyleSheet","enumerable","keys","key","isVar","isMediaQuery","Error"],"mappings":"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","sourcesContent":["/**\n * Extended StyleSheet API\n */\n\nimport {StyleSheet} from 'react-native';\nimport Sheet from './sheet';\nimport Style from './style';\nimport Value from './value';\nimport vars from './replacers/vars';\nimport mq from './replacers/media-queries';\nimport child from './child';\n\nconst BUILD_EVENT = 'build';\n\nexport default class EStyleSheet {\n  /**\n   * Constructor\n   */\n  constructor() {\n    this.child = child;\n    this.builded = false;\n    this.sheets = [];\n    this.globalVars = null;\n    this.listeners = {};\n    this._proxyToOriginal();\n  }\n\n  /**\n   * Creates stylesheet that will be calculated after build\n   * @param {Object} obj\n   * @returns {Object}\n   */\n  create(obj) {\n    const sheet = new Sheet(obj);\n    // todo: add options param to allow create dynamic stylesheets that should not be stored\n    this.sheets.push(sheet);\n    if (this.builded) {\n      sheet.calc(this.globalVars);\n    }\n    return sheet.getResult();\n  }\n\n  /**\n   * Builds all created stylesheets with passed variables\n   * @param {Object} [rawGlobalVars]\n   */\n  build(rawGlobalVars) {\n    this.builded = true;\n    this._calcGlobalVars(rawGlobalVars);\n    this._calcSheets();\n    this._callListeners(BUILD_EVENT);\n  }\n\n  /**\n   * Calculates particular value. For some values you need to pass prop (e.g. percent)\n   * @param {*} expr\n   * @param {String} [prop]\n   * @returns {*}\n   */\n  value(expr, prop) {\n    let varsArr = this.globalVars ? [this.globalVars] : [];\n    return new Value(expr, prop, varsArr).calc();\n  }\n\n  /**\n   * Subscribe to event. Currently only 'build' event is supported.\n   * @param {String} event\n   * @param {Function} listener\n   */\n  subscribe(event, listener) {\n    this._assertSubscriptionParams(event, listener);\n    this.listeners[BUILD_EVENT] = this.listeners[BUILD_EVENT] || [];\n    this.listeners[BUILD_EVENT].push(listener);\n    if (this.builded) {\n      listener();\n    }\n  }\n\n  /**\n   * Unsubscribe from event. Currently only 'build' event is supported.\n   * @param {String} event\n   * @param {Function} listener\n   */\n  unsubscribe(event, listener) {\n    this._assertSubscriptionParams(event, listener);\n    if (this.listeners[BUILD_EVENT]) {\n      this.listeners[BUILD_EVENT] = this.listeners[BUILD_EVENT].filter(item => item !== listener);\n    }\n  }\n\n  /**\n   * Clears all cached styles.\n   */\n  clearCache() {\n    this.sheets.forEach(sheet => sheet.clearCache());\n  }\n\n  // todo: move global vars stuff to separate module\n  _calcGlobalVars(rawGlobalVars) {\n    if (rawGlobalVars) {\n      this._checkGlobalVars(rawGlobalVars);\n      // $theme is system variable used for caching\n      rawGlobalVars.$theme = rawGlobalVars.$theme || 'default';\n      this.globalVars = new Style(rawGlobalVars, [rawGlobalVars]).calc().calculatedVars;\n    }\n  }\n\n  _calcSheets() {\n    this.sheets.forEach(sheet => sheet.calc(this.globalVars));\n  }\n\n  _callListeners(event) {\n    if (Array.isArray(this.listeners[event])) {\n      this.listeners[event].forEach(listener => listener());\n    }\n  }\n\n  _proxyToOriginal() {\n    // see: https://facebook.github.io/react-native/docs/stylesheet.html\n    const props = [\n      'setStyleAttributePreprocessor',\n      'hairlineWidth',\n      'absoluteFill',\n      'absoluteFillObject',\n      'flatten',\n    ];\n    props.forEach(prop => {\n      Object.defineProperty(this, prop, {\n        get: () => StyleSheet[prop],\n        enumerable: true,\n      });\n    });\n  }\n\n  _checkGlobalVars(rawGlobalVars) {\n    Object.keys(rawGlobalVars).forEach(key => {\n      if (!vars.isVar(key) && !mq.isMediaQuery(key)) {\n        throw new Error(\n          `EStyleSheet.build() params should contain global variables (start with $) ` +\n          `or media queries (start with @media). Got '${key}'.`\n        );\n      }\n    });\n  }\n\n  _assertSubscriptionParams(event, listener) {\n    if (event !== BUILD_EVENT) {\n      throw new Error(`Only '${BUILD_EVENT}' event is currently supported.`);\n    }\n    if (typeof listener !== 'function') {\n      throw new Error('Listener should be a function.');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}