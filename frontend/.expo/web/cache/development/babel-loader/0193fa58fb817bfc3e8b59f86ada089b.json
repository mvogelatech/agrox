{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/50-notifications/index.tsx\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport * as ExpoNotifications from 'expo-notifications';\nimport { Button } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { createTStyleSheet } from \"../../src/utils/style\";\nimport { BackHeader } from \"../00-common/back-header\";\nimport { NotificationCard } from \"./notification-card\";\nimport { isDebugModeEnabled } from \"../../src/debug\";\nimport { dispatch, useMainSelector } from \"../../redux-things\";\nimport { translateNotificationType } from \"./type-translation\";\nimport { ky } from \"../../src/network/ky\";\nimport { displayAlert } from \"../../src/utils/alert-messages\";\nimport { WHATSTAPP_DEFAULT_URL } from \"../drawer-constants\";\n\nfunction testLocalNotification() {\n  var localNotification = {\n    title: 'Oi sou uma notification',\n    body: 'Alguma novidade serÃ¡ exibida aqui !',\n    icon: '../../assets/android/drawable-xxhdpi/ic_action_ic_static_launcher.png',\n    ios: {\n      sound: true\n    },\n    android: {\n      sound: true,\n      priority: 'high',\n      icon: '../../assets/android/drawable-xxhdpi/ic_action_ic_static_launcher.png',\n      color: '#42949D',\n      sticky: false,\n      vibrate: true\n    }\n  };\n  void ExpoNotifications.presentNotificationAsync(localNotification);\n  console.log('notification sent');\n}\n\nfunction postNotificationRead(notificationId) {\n  return _regeneratorRuntime.async(function postNotificationRead$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(ky.post('notification/set-read', {\n            json: {\n              notificationId: notificationId\n            }\n          }));\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('Post Notification Read', _context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n}\n\nexport function Notifications(_ref) {\n  var _route$params;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _ref2 = (_route$params = route.params) != null ? _route$params : {},\n      fromPushNotification = _ref2.fromPushNotification;\n\n  var realNotifications = useMainSelector(function (state) {\n    return state.backendData.user.notification;\n  });\n  var areas = useMainSelector(function (state) {\n    return state.backendData.user.many_user_has_many_farm[0].farm.area;\n  });\n\n  function processNotification(notification) {\n    void postNotificationRead(notification.id);\n    var type = translateNotificationType(notification.type);\n\n    if (type === 'DIAGNOSIS' || type === 'PRESCRIPTION') {\n      gotoArea(notification.body.genericId);\n    } else if (type === 'QUOTATION') {\n      gotoQuotations();\n    } else if (type === 'TERMS') {\n      navigation.navigate('TermsAndConditions');\n    } else if (type === 'MESSAGE') {\n      displayAlert({\n        title: notification.body.title,\n        body: notification.body.message,\n        buttonText: 'Ok'\n      });\n    } else if (type === 'APPUPDATE') {\n      var _notification$body$li;\n\n      void Linking.openURL((_notification$body$li = notification.body.link) != null ? _notification$body$li : WHATSTAPP_DEFAULT_URL);\n    }\n  }\n\n  function gotoArea(id) {\n    var desiredArea = areas.find(function (area) {\n      return area.id === id;\n    });\n    console.log(desiredArea);\n\n    if (desiredArea) {\n      dispatch({\n        type: 'CHANGE_GENERAL_TAB',\n        tab: 'Diagnosis'\n      });\n      dispatch({\n        type: 'CHANGE_GENERAL_CARD',\n        card: 'Fields'\n      });\n      dispatch({\n        type: 'CHANGE_FIELD',\n        field: undefined\n      });\n      dispatch({\n        type: 'SET_SERVICES_PULVERIZATION',\n        state: false\n      });\n      dispatch({\n        type: 'CHANGE_QUOTATION_TAB',\n        tab: 'Preparing'\n      });\n      dispatch({\n        type: 'CHANGE_AREA',\n        area: desiredArea\n      });\n      navigation.navigate('General');\n    }\n  }\n\n  function gotoQuotations() {\n    dispatch({\n      type: 'CHANGE_QUOTATION_TAB',\n      tab: 'Available'\n    });\n    navigation.navigate('Quotations');\n  }\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      deleteAll = _useState2[0],\n      setDeleteAll = _useState2[1];\n\n  var notifications = [];\n\n  for (var _iterator = _createForOfIteratorHelperLoose(realNotifications), _step; !(_step = _iterator()).done;) {\n    var _notification = _step.value;\n    if (_notification.read_date === null && !deleteAll) notifications.push(_notification);\n  }\n\n  function getBottomComponent() {\n    var _this = this;\n\n    if (notifications.length > 0) return React.createElement(View, {\n      style: styles.mainView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.listView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 6\n      }\n    }, React.createElement(ScrollView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, notifications.map(function (notification) {\n      return React.createElement(NotificationCard, {\n        key: notification.id,\n        notification: notification,\n        onPress: function onPress() {\n          return processNotification(notification);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      });\n    }), React.createElement(View, {\n      style: {\n        alignItems: 'flex-end'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 8\n      }\n    }, React.createElement(Button, {\n      uppercase: true,\n      disabled: false,\n      mode: \"text\",\n      style: styles.button,\n      labelStyle: styles.buttonText,\n      onPress: function onPress() {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(notifications), _step2; !(_step2 = _iterator2()).done;) {\n          var _notification2 = _step2.value;\n          setDeleteAll(true);\n          void postNotificationRead(_notification2.id);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, \"Apagar Todas\")))));\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 4\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      name: \"bell-ring\",\n      style: styles.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }\n    }), React.createElement(Text, {\n      style: styles.noQuotationText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }\n    }, \"Voc\\xEA n\\xE3o tem nenhuma notifica\\xE7\\xE3o\"));\n  }\n\n  return React.createElement(View, {\n    style: styles.mainView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 3\n    }\n  }, React.createElement(BackHeader, {\n    title: \"Notifica\\xE7\\xF5es\",\n    onBackPress: function onBackPress() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }\n  }), __DEV__ || isDebugModeEnabled() ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    uppercase: false,\n    disabled: false,\n    mode: \"contained\",\n    onPress: testLocalNotification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 6\n    }\n  }, \"Test\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 6\n    }\n  }, \"Voc\\xEA chegou aqui a partir da notifica\\xE7\\xE3o: \", JSON.stringify(fromPushNotification != null ? fromPushNotification : 'NONE', undefined, '\\t'))) : undefined, getBottomComponent());\n}\nvar styles = createTStyleSheet({\n  mainView: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  listView: {\n    marginVertical: '8rem',\n    justifyContent: 'flex-end'\n  },\n  icon: {\n    fontSize: '80rem',\n    color: '#D5D5DA'\n  },\n  noQuotationText: {\n    marginTop: '16rem',\n    color: '#78849E',\n    fontWeight: 'bold'\n  },\n  button: {\n    margin: '16rem',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontSize: '14rem'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/50-notifications/index.tsx"],"names":["React","useState","ExpoNotifications","Button","MaterialCommunityIcons","ScrollView","createTStyleSheet","BackHeader","NotificationCard","isDebugModeEnabled","dispatch","useMainSelector","translateNotificationType","ky","displayAlert","WHATSTAPP_DEFAULT_URL","testLocalNotification","localNotification","title","body","icon","ios","sound","android","priority","color","sticky","vibrate","presentNotificationAsync","console","log","postNotificationRead","notificationId","post","json","Notifications","navigation","route","params","fromPushNotification","realNotifications","state","backendData","user","notification","areas","many_user_has_many_farm","farm","area","processNotification","id","type","gotoArea","genericId","gotoQuotations","navigate","message","buttonText","Linking","openURL","link","desiredArea","find","tab","card","field","undefined","deleteAll","setDeleteAll","notifications","read_date","push","getBottomComponent","length","styles","mainView","listView","map","alignItems","button","flex","justifyContent","noQuotationText","goBack","__DEV__","JSON","stringify","backgroundColor","marginVertical","fontSize","marginTop","fontWeight","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as ExpoNotifications from 'expo-notifications';\nimport { Button } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { View, Text, Linking } from 'react-native';\n\nimport { createTStyleSheet } from '../../src/utils/style';\nimport { AgroXScreenProps } from '../navigation-types';\nimport { BackHeader } from '../00-common/back-header';\nimport { NotificationCard } from './notification-card';\nimport { isDebugModeEnabled } from '../../src/debug';\nimport { dispatch, useMainSelector } from '../../redux-things';\nimport { Models } from '../../models';\nimport { translateNotificationType } from './type-translation';\nimport { ky } from '../../src/network/ky';\nimport { displayAlert } from '../../src/utils/alert-messages';\nimport { WHATSTAPP_DEFAULT_URL } from '../drawer-constants';\n\n// import { makeDummyMessageNotification } from './fake-messages-for-testing';\n//  const dummyExtraNotifications = [\n//\tmakeDummyMessageNotification(),\n//\tmakeDummyMessageNotification(),\n// \tmakeDummyQuotationReadyNotification(),\n// \tmakeDummyMessageNotification(),\n// \tmakeDummyQuotationReadyNotification(),\n//  ];\n\nfunction testLocalNotification() {\n\tconst localNotification = {\n\t\ttitle: 'Oi sou uma notification',\n\t\tbody: 'Alguma novidade serÃ¡ exibida aqui !',\n\t\ticon: '../../assets/android/drawable-xxhdpi/ic_action_ic_static_launcher.png',\n\t\tios: {\n\t\t\tsound: true,\n\t\t},\n\t\tandroid: {\n\t\t\tsound: true,\n\t\t\tpriority: 'high',\n\t\t\ticon: '../../assets/android/drawable-xxhdpi/ic_action_ic_static_launcher.png',\n\t\t\tcolor: '#42949D',\n\t\t\tsticky: false,\n\t\t\tvibrate: true,\n\t\t},\n\t};\n\n\tvoid ExpoNotifications.presentNotificationAsync(localNotification);\n\n\tconsole.log('notification sent');\n}\n\nasync function postNotificationRead(notificationId: number) {\n\ttry {\n\t\tawait ky.post('notification/set-read', {\n\t\t\tjson: {\n\t\t\t\tnotificationId,\n\t\t\t},\n\t\t});\n\t} catch (error) {\n\t\tconsole.log('Post Notification Read', error);\n\t}\n}\n\nexport function Notifications({ navigation, route }: AgroXScreenProps<'Notifications'>) {\n\tconst { fromPushNotification } = route.params ?? {};\n\n\tconst realNotifications = useMainSelector((state) => state.backendData.user!.notification);\n\tconst areas = useMainSelector((state) => state.backendData.user!.many_user_has_many_farm[0].farm.area);\n\n\tfunction processNotification(notification: Models.notification) {\n\t\tvoid postNotificationRead(notification.id);\n\t\tconst type = translateNotificationType(notification.type);\n\t\tif (type === 'DIAGNOSIS' || type === 'PRESCRIPTION') {\n\t\t\tgotoArea(notification.body.genericId);\n\t\t} else if (type === 'QUOTATION') {\n\t\t\tgotoQuotations();\n\t\t} else if (type === 'TERMS') {\n\t\t\tnavigation.navigate('TermsAndConditions');\n\t\t} else if (type === 'MESSAGE') {\n\t\t\tdisplayAlert({\n\t\t\t\ttitle: notification.body.title,\n\t\t\t\tbody: notification.body.message,\n\t\t\t\tbuttonText: 'Ok',\n\t\t\t});\n\t\t} else if (type === 'APPUPDATE') {\n\t\t\tvoid Linking.openURL(notification.body.link ?? WHATSTAPP_DEFAULT_URL);\n\t\t}\n\t}\n\n\tfunction gotoArea(id: number) {\n\t\tconst desiredArea = areas.find((area) => {\n\t\t\treturn area.id === id;\n\t\t});\n\t\tconsole.log(desiredArea);\n\t\tif (desiredArea) {\n\t\t\t// Set the states\n\t\t\tdispatch({ type: 'CHANGE_GENERAL_TAB', tab: 'Diagnosis' });\n\t\t\tdispatch({ type: 'CHANGE_GENERAL_CARD', card: 'Fields' });\n\t\t\tdispatch({ type: 'CHANGE_FIELD', field: undefined });\n\t\t\tdispatch({ type: 'SET_SERVICES_PULVERIZATION', state: false });\n\t\t\tdispatch({ type: 'CHANGE_QUOTATION_TAB', tab: 'Preparing' });\n\t\t\tdispatch({ type: 'CHANGE_AREA', area: desiredArea });\n\t\t\tnavigation.navigate('General');\n\t\t}\n\t}\n\n\tfunction gotoQuotations() {\n\t\tdispatch({ type: 'CHANGE_QUOTATION_TAB', tab: 'Available' });\n\t\tnavigation.navigate('Quotations');\n\t}\n\n\tconst [deleteAll, setDeleteAll] = useState(false);\n\n\tconst notifications: Models.notification[] = [];\n\tfor (const notification of realNotifications) {\n\t\tif (notification.read_date === null && !deleteAll) notifications.push(notification);\n\t}\n\n\t// const notifications = __DEV__ || isDebugModeEnabled() ? [...realNotifications, ...dummyExtraNotifications] : realNotifications;\n\n\tfunction getBottomComponent() {\n\t\tif (notifications.length > 0)\n\t\t\treturn (\n\t\t\t\t<View style={styles.mainView}>\n\t\t\t\t\t<View style={styles.listView}>\n\t\t\t\t\t\t<ScrollView>\n\t\t\t\t\t\t\t{notifications.map((notification) => (\n\t\t\t\t\t\t\t\t<NotificationCard key={notification.id} notification={notification} onPress={() => processNotification(notification)} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t<View style={{ alignItems: 'flex-end' }}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tuppercase\n\t\t\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\t\t\tmode=\"text\"\n\t\t\t\t\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\t\t\t\t\tlabelStyle={styles.buttonText}\n\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\tfor (const notification of notifications) {\n\t\t\t\t\t\t\t\t\t\t\tsetDeleteAll(true);\n\t\t\t\t\t\t\t\t\t\t\tvoid postNotificationRead(notification.id);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tApagar Todas\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</ScrollView>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t);\n\n\t\treturn (\n\t\t\t<View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n\t\t\t\t<MaterialCommunityIcons name=\"bell-ring\" style={styles.icon} />\n\t\t\t\t<Text style={styles.noQuotationText}>VocÃª nÃ£o tem nenhuma notificaÃ§Ã£o</Text>\n\t\t\t</View>\n\t\t);\n\t}\n\n\treturn (\n\t\t<View style={styles.mainView}>\n\t\t\t<BackHeader title=\"NotificaÃ§Ãµes\" onBackPress={() => navigation.goBack()} />\n\t\t\t{__DEV__ || isDebugModeEnabled() ? (\n\t\t\t\t<View>\n\t\t\t\t\t<Button uppercase={false} disabled={false} mode=\"contained\" onPress={testLocalNotification}>\n\t\t\t\t\t\tTest\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Text>VocÃª chegou aqui a partir da notificaÃ§Ã£o: {JSON.stringify(fromPushNotification ?? 'NONE', undefined, '\\t')}</Text>\n\t\t\t\t</View>\n\t\t\t) : undefined}\n\t\t\t{getBottomComponent()}\n\t\t</View>\n\t);\n}\n\nconst styles = createTStyleSheet({\n\tmainView: {\n\t\tflex: 1,\n\t\tbackgroundColor: 'white',\n\t},\n\tlistView: {\n\t\tmarginVertical: '8rem',\n\t\tjustifyContent: 'flex-end',\n\t},\n\ticon: {\n\t\tfontSize: '80rem',\n\t\tcolor: '#D5D5DA',\n\t},\n\tnoQuotationText: {\n\t\tmarginTop: '16rem',\n\t\tcolor: '#78849E',\n\t\tfontWeight: 'bold',\n\t},\n\tbutton: {\n\t\tmargin: '16rem',\n\t\tjustifyContent: 'center',\n\t},\n\tbuttonText: {\n\t\tfontSize: '14rem',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}