{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { showSnackbar } from \"../snackbars\";\nexport var serviceNotAvailable = {\n  title: 'Serviço indisponível',\n  body: 'Este serviço ainda não está disponível.\\nAguarde para mais novidades.',\n  buttonText: 'OK, entendi!'\n};\nexport var areaNotHired = {\n  title: 'Diagnóstico Não Contratado',\n  body: 'O serviço de diagnóstico ainda não foi contratado para este talhão.',\n  buttonText: 'OK, entendi!'\n};\nexport var areaHiredUnavailable = {\n  title: 'Diagnóstico Indisponível',\n  body: 'O diagnóstico ainda não está disponível para este talhão, por favor aguarde.',\n  buttonText: 'OK, entendi!'\n};\nexport var alertDatePrescription = {\n  title: 'Diagnóstico Desatualizado',\n  body: 'Este diagnóstico foi realizado a mais de um mês. \\n \\nDeseja continuar mesmo assim?',\n  buttonText: 'OK, entendi!'\n};\nexport var defaultNotImplemented = {\n  title: 'Em Construção',\n  body: 'Esta função ainda não está disponível em nosso aplicativo.\\n\\nAguarde para mais novidades.',\n  buttonText: 'OK, entendi!'\n};\nexport var quotationNotAvailable = {\n  title: 'Orçamento ainda não disponível',\n  body: 'O orçamento está sendo preparado e você será notificado quando ele estiver disponivel.',\n  buttonText: 'OK, entendi!'\n};\nexport var waitingForPrescription = {\n  title: 'Aguardando Receituários',\n  body: \"O agr\\xF4nomo est\\xE1 preparando os receitu\\xE1rios.\\n\\nVoc\\xEA ser\\xE1 notificado quando eles estiverem dispon\\xEDveis.\",\n  buttonText: 'OK, entendi!'\n};\nexport var dbHasNoCompanies = {\n  title: 'Aguardando Empresas De Pulverização',\n  body: \"Estamos reunindo as melhores empresas para a presta\\xE7\\xE3o do servi\\xE7o de pulveriza\\xE7\\xE3o.\\n\\nVoc\\xEA ser\\xE1 notificado quando elas estiverem dispon\\xEDveis.\",\n  buttonText: 'OK, entendi!'\n};\nexport var needsToBeOnline = {\n  title: 'Sem conexão',\n  body: 'Esta ação requer conexão com a internet.\\n\\nTente novamente quando sua conexão for reestabelecida.',\n  buttonText: 'OK, entendi!'\n};\nexport var userHasChangedSuggestedMethod = {\n  title: 'Atenção!',\n  body: 'Você alterou algum método de pulverização que sugerimos para os seus talhões. Não recomendamos que essa alteração seja feita, afim de garantir a qualidade e eficiência do serviço.\\n\\nEssa ação não poderá ser desfeita e caso continue, será de sua inteira responsabilidade.\\n\\nTem certeza que deseja continuar?',\n  confirmButtonText: 'Sim, continuar',\n  cancelButtonText: 'Cancelar'\n};\nexport var userHasCancelledQuotation = {\n  title: 'Deseja Realmente Sair?',\n  body: 'Você ainda possui pendências no pedido de orçamento de pulverização.',\n  confirmButtonText: 'Sair',\n  cancelButtonText: 'Não Sair '\n};\nexport var userDidNotSelectPaymentMethod = {\n  title: 'Atenção!',\n  body: 'Você não selecionou uma empresa para pulverização via Drone para algum dos talhões.\\n\\nTem certeza que deseja prosseguir?\\n\\nEssa ação não poderá ser desfeita.',\n  confirmButtonText: 'Sim, avançar',\n  cancelButtonText: 'Cancelar'\n};\nexport var plantingReport = {\n  title: 'Relatório de Plantio',\n  body: 'Qual ação gostaria de tomar ?',\n  confirmButtonText: 'Novo Relatório',\n  cancelButtonText: 'Visualizar Relatório'\n};\nexport var pulverizationNotInfested = {\n  title: 'Fique tranquilo!',\n  firstLine: 'Este talhão não está infestado.',\n  secondLine: 'Este talhão não precisa de pulverização.'\n};\nexport var pulverizationNotAvailable = {\n  title: 'Fique tranquilo!',\n  firstLine: 'O agrônomo está preparando o receituário deste talhão.',\n  secondLine: 'Você será notificado quando ele estiver disponível.'\n};\nexport var prescriptionNotInfested = {\n  title: 'Fique tranquilo!',\n  firstLine: 'Este talhão não está infestado.',\n  secondLine: 'Este talhão não precisa de um receituário.'\n};\nexport var prescriptionNotAvailable = {\n  title: 'Fique tranquilo!',\n  firstLine: 'O agrônomo está preparando o receituário deste talhão.',\n  secondLine: 'Você será notificado quando ele estiver disponível.'\n};\nexport var pulverizationQuoteNotAllowed = {\n  title: 'Atenção!',\n  body: 'Apenas o administrador da propriedade pode orçar uma pulverização.',\n  buttonText: 'OK, entendi!'\n};\nexport var termsAndConditions = {\n  title: 'Termos e Condições de Uso',\n  body: 'Para utilizar o aplicativo AgroExplore é necessário que os Termos e Condições de Uso sejam aceitos.\\n\\nSeu código de acesso ficará ativo por dez dias a partir da data de instalação.\\n\\nApós este período o código será desativado.',\n  buttonText: 'OK, entendi!'\n};\nexport var privacyPolicy = {\n  title: 'Termos de Política e Privacidade',\n  body: 'Para utilizar o aplicativo AgroExplore é necessário que os Termos de Política e privacidade sejam aceitos.\\n\\nSeu código de acesso ficará ativo por dez dias a partir da data de instalação.\\n\\nApós este período o código será desativado.',\n  buttonText: 'OK, entendi!'\n};\nexport var indexNotAvailable = {\n  title: 'Indices ainda não disponíveis',\n  body: 'Os indices para o campo selecionado ainda não foram processados ou não foi contratada esta funcionalidade.',\n  buttonText: 'OK, entendi!'\n};\nexport var fieldNotHired = areaNotHired;\nexport var fieldHiredUnavailable = areaHiredUnavailable;\nexport var fieldIndexNotAvailable = indexNotAvailable;\nexport function displayTimeoutErrorSnackbar(error, action) {\n  showSnackbar({\n    text: 'Ops! Um erro inesperado ocorreu.\\nPor favor, verifique sua conexão\\ncom a internet e tente novamente.',\n    textColor: '#70171F',\n    actionText: 'OK, ENTENDI!',\n    actionTextColor: '#70171F',\n    style: {\n      backgroundColor: '#F6C0C5'\n    }\n  });\n  console.log(action, error);\n}\nexport function confirmQuotationLeave(navigation) {\n  var response;\n  return _regeneratorRuntime.async(function confirmQuotationLeave$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(asyncCancelableAlert(userHasCancelledQuotation));\n\n        case 2:\n          response = _context.sent;\n          if (response === 'CONFIRM') navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'Areas'\n            }]\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function confirmplantingReport(navigation) {\n  var response;\n  return _regeneratorRuntime.async(function confirmplantingReport$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('ta aqui', navigation);\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(asyncCancelableAlert(plantingReport));\n\n        case 3:\n          response = _context2.sent;\n\n          if (response === 'CONFIRM') {\n            console.log('ta aqui');\n            navigation.navigate('MethodSelection');\n          }\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function displayAlert(props) {\n  return Alert.alert(props.title, props.body, [{\n    text: props.buttonText\n  }]);\n}\nexport function asyncCancelableAlert(props) {\n  return _regeneratorRuntime.async(function asyncCancelableAlert$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", new Promise(function (resolve) {\n            Alert.alert(props.title, props.body, [{\n              text: props.cancelButtonText,\n              style: 'cancel',\n              onPress: function onPress() {\n                return resolve('CANCEL');\n              }\n            }, {\n              text: props.confirmButtonText,\n              onPress: function onPress() {\n                return resolve('CONFIRM');\n              }\n            }], {\n              cancelable: true\n            });\n          }));\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/src/utils/alert-messages.ts"],"names":["showSnackbar","serviceNotAvailable","title","body","buttonText","areaNotHired","areaHiredUnavailable","alertDatePrescription","defaultNotImplemented","quotationNotAvailable","waitingForPrescription","dbHasNoCompanies","needsToBeOnline","userHasChangedSuggestedMethod","confirmButtonText","cancelButtonText","userHasCancelledQuotation","userDidNotSelectPaymentMethod","plantingReport","pulverizationNotInfested","firstLine","secondLine","pulverizationNotAvailable","prescriptionNotInfested","prescriptionNotAvailable","pulverizationQuoteNotAllowed","termsAndConditions","privacyPolicy","indexNotAvailable","fieldNotHired","fieldHiredUnavailable","fieldIndexNotAvailable","displayTimeoutErrorSnackbar","error","action","text","textColor","actionText","actionTextColor","style","backgroundColor","console","log","confirmQuotationLeave","navigation","asyncCancelableAlert","response","reset","index","routes","name","confirmplantingReport","navigate","displayAlert","props","Alert","alert","Promise","resolve","onPress","cancelable"],"mappings":"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","sourcesContent":["import { Alert } from 'react-native';\nimport { showSnackbar } from '../snackbars';\n\nexport const serviceNotAvailable = {\n\ttitle: 'Serviço indisponível',\n\tbody: 'Este serviço ainda não está disponível.\\nAguarde para mais novidades.',\n\tbuttonText: 'OK, entendi!',\n};\n\nexport const areaNotHired = {\n\ttitle: 'Diagnóstico Não Contratado',\n\tbody: 'O serviço de diagnóstico ainda não foi contratado para este talhão.',\n\tbuttonText: 'OK, entendi!',\n};\n\nexport const areaHiredUnavailable = {\n\ttitle: 'Diagnóstico Indisponível',\n\tbody: 'O diagnóstico ainda não está disponível para este talhão, por favor aguarde.',\n\tbuttonText: 'OK, entendi!',\n};\n\nexport const alertDatePrescription = {\n\ttitle: 'Diagnóstico Desatualizado',\n\tbody: 'Este diagnóstico foi realizado a mais de um mês. \\n \\nDeseja continuar mesmo assim?',\n\tbuttonText: 'OK, entendi!',\n};\n\nexport const defaultNotImplemented = {\n\ttitle: 'Em Construção',\n\tbody: 'Esta função ainda não está disponível em nosso aplicativo.\\n\\nAguarde para mais novidades.',\n\tbuttonText: 'OK, entendi!',\n};\n\nexport const quotationNotAvailable = {\n\ttitle: 'Orçamento ainda não disponível',\n\tbody: 'O orçamento está sendo preparado e você será notificado quando ele estiver disponivel.',\n\tbuttonText: 'OK, entendi!',\n};\n\nexport const waitingForPrescription = {\n\ttitle: 'Aguardando Receituários',\n\tbody: `O agrônomo está preparando os receituários.\\n\\nVocê será notificado quando eles estiverem disponíveis.`,\n\tbuttonText: 'OK, entendi!',\n};\n\nexport const dbHasNoCompanies = {\n\ttitle: 'Aguardando Empresas De Pulverização',\n\tbody: `Estamos reunindo as melhores empresas para a prestação do serviço de pulverização.\\n\\nVocê será notificado quando elas estiverem disponíveis.`,\n\tbuttonText: 'OK, entendi!',\n};\n\nexport const needsToBeOnline = {\n\ttitle: 'Sem conexão',\n\tbody: 'Esta ação requer conexão com a internet.\\n\\nTente novamente quando sua conexão for reestabelecida.',\n\tbuttonText: 'OK, entendi!',\n};\n\nexport const userHasChangedSuggestedMethod = {\n\ttitle: 'Atenção!',\n\tbody:\n\t\t'Você alterou algum método de pulverização que sugerimos para os seus talhões. Não recomendamos que essa alteração seja feita, afim de garantir a qualidade e eficiência do serviço.\\n\\nEssa ação não poderá ser desfeita e caso continue, será de sua inteira responsabilidade.\\n\\nTem certeza que deseja continuar?',\n\tconfirmButtonText: 'Sim, continuar',\n\tcancelButtonText: 'Cancelar',\n};\n\nexport const userHasCancelledQuotation = {\n\ttitle: 'Deseja Realmente Sair?',\n\tbody: 'Você ainda possui pendências no pedido de orçamento de pulverização.',\n\tconfirmButtonText: 'Sair',\n\tcancelButtonText: 'Não Sair ',\n};\n\nexport const userDidNotSelectPaymentMethod = {\n\ttitle: 'Atenção!',\n\tbody:\n\t\t'Você não selecionou uma empresa para pulverização via Drone para algum dos talhões.\\n\\nTem certeza que deseja prosseguir?\\n\\nEssa ação não poderá ser desfeita.',\n\tconfirmButtonText: 'Sim, avançar',\n\tcancelButtonText: 'Cancelar',\n};\n\nexport const plantingReport = {\n\ttitle: 'Relatório de Plantio',\n\tbody: 'Qual ação gostaria de tomar ?',\n\tconfirmButtonText: 'Novo Relatório',\n\tcancelButtonText: 'Visualizar Relatório',\n};\n\nexport const pulverizationNotInfested = {\n\ttitle: 'Fique tranquilo!',\n\tfirstLine: 'Este talhão não está infestado.',\n\tsecondLine: 'Este talhão não precisa de pulverização.',\n};\n\nexport const pulverizationNotAvailable = {\n\ttitle: 'Fique tranquilo!',\n\tfirstLine: 'O agrônomo está preparando o receituário deste talhão.',\n\tsecondLine: 'Você será notificado quando ele estiver disponível.',\n};\n\nexport const prescriptionNotInfested = {\n\ttitle: 'Fique tranquilo!',\n\tfirstLine: 'Este talhão não está infestado.',\n\tsecondLine: 'Este talhão não precisa de um receituário.',\n};\n\nexport const prescriptionNotAvailable = {\n\ttitle: 'Fique tranquilo!',\n\tfirstLine: 'O agrônomo está preparando o receituário deste talhão.',\n\tsecondLine: 'Você será notificado quando ele estiver disponível.',\n};\n\nexport const pulverizationQuoteNotAllowed = {\n\ttitle: 'Atenção!',\n\tbody: 'Apenas o administrador da propriedade pode orçar uma pulverização.',\n\tbuttonText: 'OK, entendi!',\n};\n\nexport const termsAndConditions = {\n\ttitle: 'Termos e Condições de Uso',\n\tbody:\n\t\t'Para utilizar o aplicativo AgroExplore é necessário que os Termos e Condições de Uso sejam aceitos.\\n\\nSeu código de acesso ficará ativo por dez dias a partir da data de instalação.\\n\\nApós este período o código será desativado.',\n\tbuttonText: 'OK, entendi!',\n};\n\nexport const privacyPolicy = {\n\ttitle: 'Termos de Política e Privacidade',\n\tbody:\n\t\t'Para utilizar o aplicativo AgroExplore é necessário que os Termos de Política e privacidade sejam aceitos.\\n\\nSeu código de acesso ficará ativo por dez dias a partir da data de instalação.\\n\\nApós este período o código será desativado.',\n\tbuttonText: 'OK, entendi!',\n};\n\nexport const indexNotAvailable = {\n\ttitle: 'Indices ainda não disponíveis',\n\tbody: 'Os indices para o campo selecionado ainda não foram processados ou não foi contratada esta funcionalidade.',\n\tbuttonText: 'OK, entendi!',\n};\n\nexport const fieldNotHired = areaNotHired;\n\nexport const fieldHiredUnavailable = areaHiredUnavailable;\n\nexport const fieldIndexNotAvailable = indexNotAvailable;\n\nexport function displayTimeoutErrorSnackbar(error: string, action: string) {\n\tshowSnackbar({\n\t\ttext: 'Ops! Um erro inesperado ocorreu.\\nPor favor, verifique sua conexão\\ncom a internet e tente novamente.',\n\t\ttextColor: '#70171F',\n\t\tactionText: 'OK, ENTENDI!',\n\t\tactionTextColor: '#70171F',\n\t\tstyle: {\n\t\t\tbackgroundColor: '#F6C0C5',\n\t\t},\n\t});\n\tconsole.log(action, error);\n}\n\nexport type DialogType = {\n\ttitle: string;\n\tbody: string;\n\tbuttonText: string;\n};\n\nexport type CancelableDialogType = {\n\ttitle: string;\n\tbody: string;\n\tconfirmButtonText: string;\n\tcancelButtonText: string;\n};\n\nexport async function confirmQuotationLeave(navigation: any) {\n\tconst response = await asyncCancelableAlert(userHasCancelledQuotation);\n\tif (response === 'CONFIRM')\n\t\tnavigation.reset({\n\t\t\tindex: 0,\n\t\t\troutes: [{ name: 'Areas' }],\n\t\t});\n}\n\nexport async function confirmplantingReport(navigation: any) {\n\tconsole.log('ta aqui', navigation);\n\n\tconst response = await asyncCancelableAlert(plantingReport);\n\tif (response === 'CONFIRM') {\n\t\tconsole.log('ta aqui');\n\t\tnavigation.navigate('MethodSelection');\n\t}\n\t// navigation.navigate({\n\t// \tindex: 0,\n\t// \troutes: [{ name: 'MethodSelection' }],\n\t// });\n}\n\nexport function displayAlert(props: DialogType) {\n\treturn Alert.alert(props.title, props.body, [{ text: props.buttonText }]);\n}\n\nexport async function asyncCancelableAlert(props: CancelableDialogType) {\n\treturn new Promise((resolve) => {\n\t\tAlert.alert(\n\t\t\tprops.title,\n\t\t\tprops.body,\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\ttext: props.cancelButtonText,\n\t\t\t\t\tstyle: 'cancel',\n\t\t\t\t\tonPress: () => resolve('CANCEL'),\n\t\t\t\t},\n\t\t\t\t{ text: props.confirmButtonText, onPress: () => resolve('CONFIRM') },\n\t\t\t],\n\t\t\t{ cancelable: true },\n\t\t);\n\t});\n}\n"]},"metadata":{},"sourceType":"module"}