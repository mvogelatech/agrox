{"ast":null,"code":"var _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/00-common/infestation-status.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text, Divider } from 'react-native-paper';\nimport { createTStyleSheet } from \"../../src/utils/style\";\nimport { getSemaphoreColor, useThresholds } from \"../../src/utils/semaphore\";\nimport { RoundIcon } from \"./round-icon\";\nexport function InfestationStatus(props) {\n  var semaphoreThresholds = useThresholds();\n  var infestationPercentage = props.totalArea === 0 ? 0 : props.affectedArea / props.totalArea * 100;\n  return React.createElement(View, {\n    style: styles.mainView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, \"\\xC1REA\", '\\n', \"TOTAL (HA)\"), React.createElement(Text, {\n    numberOfLines: 3,\n    style: styles.contentBig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, props.totalArea.toFixed(2))), React.createElement(View, {\n    style: styles.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \"\\xC1REA AFETADA\", '\\n', \"TOTAL (HA)\"), React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.contentBig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, props.affectedArea.toFixed(2))), React.createElement(View, {\n    style: styles.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"INFESTA\\xC7\\xC3O\", '\\n', \"TOTAL\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(RoundIcon, {\n    isEnabled: true,\n    icon: \"warning\",\n    color: getSemaphoreColor(infestationPercentage, semaphoreThresholds),\n    size: \"16rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }\n  }), React.createElement(Divider, {\n    style: styles.horizontalSpacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }), React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.contentBig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }, infestationPercentage.toFixed(2) + \"%\"))));\n}\nvar styles = createTStyleSheet({\n  mainView: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  item: {\n    alignItems: 'baseline'\n  },\n  header: {\n    fontSize: '12rem',\n    color: '#78849E',\n    fontWeight: '900'\n  },\n  contentBig: {\n    fontSize: '20rem'\n  },\n  horizontalSpacer: {\n    width: 0,\n    height: 0,\n    margin: '1rem'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/00-common/infestation-status.tsx"],"names":["React","Text","Divider","createTStyleSheet","getSemaphoreColor","useThresholds","RoundIcon","InfestationStatus","props","semaphoreThresholds","infestationPercentage","totalArea","affectedArea","styles","mainView","item","header","contentBig","toFixed","flexDirection","alignItems","horizontalSpacer","flexWrap","justifyContent","fontSize","color","fontWeight","width","height","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport { Text, Divider } from 'react-native-paper';\nimport { createTStyleSheet } from '../../src/utils/style';\nimport { getSemaphoreColor, useThresholds } from '../../src/utils/semaphore';\nimport { RoundIcon } from './round-icon';\n\ntype InfestationStatusProps = {\n\ttotalArea: number;\n\taffectedArea: number;\n};\n\nexport function InfestationStatus(props: InfestationStatusProps) {\n\tconst semaphoreThresholds = useThresholds();\n\n\tconst infestationPercentage = props.totalArea === 0 ? 0 : (props.affectedArea / props.totalArea) * 100;\n\treturn (\n\t\t<View style={styles.mainView}>\n\t\t\t<View style={styles.item}>\n\t\t\t\t<Text style={styles.header}>ÁREA{'\\n'}TOTAL (HA)</Text>\n\t\t\t\t<Text numberOfLines={3} style={styles.contentBig}>\n\t\t\t\t\t{props.totalArea.toFixed(2)}\n\t\t\t\t</Text>\n\t\t\t</View>\n\n\t\t\t<View style={styles.item}>\n\t\t\t\t<Text style={styles.header}>ÁREA AFETADA{'\\n'}TOTAL (HA)</Text>\n\t\t\t\t<Text numberOfLines={1} style={styles.contentBig}>\n\t\t\t\t\t{props.affectedArea.toFixed(2)}\n\t\t\t\t</Text>\n\t\t\t</View>\n\n\t\t\t<View style={styles.item}>\n\t\t\t\t<Text style={styles.header}>INFESTAÇÃO{'\\n'}TOTAL</Text>\n\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t<RoundIcon isEnabled icon=\"warning\" color={getSemaphoreColor(infestationPercentage, semaphoreThresholds)} size=\"16rem\" />\n\t\t\t\t\t<Divider style={styles.horizontalSpacer} />\n\t\t\t\t\t<Text numberOfLines={1} style={styles.contentBig}>\n\t\t\t\t\t\t{`${infestationPercentage.toFixed(2)}%`}\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = createTStyleSheet({\n\tmainView: {\n\t\tflexDirection: 'row',\n\t\tflexWrap: 'wrap',\n\t\tjustifyContent: 'space-between',\n\t},\n\titem: {\n\t\talignItems: 'baseline',\n\t},\n\theader: {\n\t\tfontSize: '12rem',\n\t\tcolor: '#78849E',\n\t\tfontWeight: '900',\n\t},\n\tcontentBig: {\n\t\tfontSize: '20rem',\n\t},\n\thorizontalSpacer: {\n\t\twidth: 0,\n\t\theight: 0,\n\t\tmargin: '1rem',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}