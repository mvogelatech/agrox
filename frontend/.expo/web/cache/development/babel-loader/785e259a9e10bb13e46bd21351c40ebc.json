{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport dayjs from 'dayjs';\nimport * as FileSystem from 'expo-file-system';\nimport { downloadIndexImage } from \"../network\";\nexport function isAnyIndexAvailableForArea(area) {\n  var isAny = false;\n\n  for (var _iterator = _createForOfIteratorHelperLoose(area.field), _step; !(_step = _iterator()).done;) {\n    var field = _step.value;\n    isAny = isIndexAvailable(field) || isAny;\n  }\n\n  return isAny;\n}\nexport function isIndexAvailable(field) {\n  if (field.visiona) return field.visiona.length > 0;\n  return false;\n}\nexport function getIndexImageLocalUri(field, idxName, date) {\n  if (field != null && field.visiona && (field == null ? void 0 : field.visiona.length) > 0) {\n    var obs = field.visiona.find(function (observation) {\n      return dayjs(observation.date).format('YYYY-MM-DD') === date;\n    });\n\n    if (obs) {\n      var idx = getProperty(obs.stats.indice, idxName);\n\n      if (idx) {\n        return translateToLocalUri(idx.browseUrl);\n      }\n    }\n  }\n\n  return undefined;\n}\nexport function cacheAreaIndexImages(area, index) {\n  var proms, _iterator2, _step2, field;\n\n  return _regeneratorRuntime.async(function cacheAreaIndexImages$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          proms = [];\n\n          for (_iterator2 = _createForOfIteratorHelperLoose(area.field); !(_step2 = _iterator2()).done;) {\n            field = _step2.value;\n            proms.push(cacheFieldIndexImages(field, index));\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(Promise.all(proms));\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function cacheFieldIndexImages(field, index) {\n  var proms, a, l, observation, idx;\n  return _regeneratorRuntime.async(function cacheFieldIndexImages$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          proms = [];\n\n          if (field.visiona) {\n            for (a = 0, l = field.visiona.length; a < l; a++) {\n              observation = field.visiona[a];\n              idx = getProperty(observation.stats.indice, index.name);\n\n              if (idx != null && idx.browseUrl) {\n                proms.push(checkAndDownloadIndexImage(idx.browseUrl));\n              }\n            }\n          }\n\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(Promise.all(proms));\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction checkAndDownloadIndexImage(remoteUri) {\n  var localUri, _await$FileSystem$get, exists, data, size;\n\n  return _regeneratorRuntime.async(function checkAndDownloadIndexImage$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          localUri = translateToLocalUri(remoteUri);\n\n          if (!localUri) {\n            _context3.next = 15;\n            break;\n          }\n\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(FileSystem.getInfoAsync(localUri));\n\n        case 4:\n          _await$FileSystem$get = _context3.sent;\n          exists = _await$FileSystem$get.exists;\n\n          if (exists) {\n            _context3.next = 15;\n            break;\n          }\n\n          _context3.next = 9;\n          return _regeneratorRuntime.awrap(downloadIndexImage(remoteUri, localUri));\n\n        case 9:\n          data = _context3.sent;\n\n          if (!(data.status === 200)) {\n            _context3.next = 15;\n            break;\n          }\n\n          size = Number.parseInt(data.headers['Content-Length'], 10);\n\n          if (!(size === 0)) {\n            _context3.next = 15;\n            break;\n          }\n\n          _context3.next = 15;\n          return _regeneratorRuntime.awrap(FileSystem.deleteAsync(localUri));\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport function getDatesForIndexDataFromArea(area, filterDate) {\n  var dates = [];\n\n  for (var _iterator3 = _createForOfIteratorHelperLoose(area.field), _step3; !(_step3 = _iterator3()).done;) {\n    var field = _step3.value;\n    var indicesDates = getDatesForIndexDataFromField(field, filterDate);\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose(indicesDates), _step4; !(_step4 = _iterator4()).done;) {\n      var date = _step4.value;\n\n      if (!dates.includes(date)) {\n        dates.push(date);\n      }\n    }\n  }\n\n  return dates;\n}\nexport function getDatesForIndexDataFromField(field, filterDate) {\n  var dateArr = [];\n\n  if (field.visiona) {\n    for (var a = 0, l = field.visiona.length; a < l; a++) {\n      var observation = field.visiona[a];\n\n      if (filterDate) {\n        if (dayjs(observation.date).isAfter(dayjs(filterDate))) dateArr.push(observation.date);\n      } else {\n        dateArr.push(observation.date);\n      }\n    }\n  }\n\n  return dateArr;\n}\n\nfunction translateToLocalUri(remoteUri) {\n  var localUri;\n\n  if (remoteUri != null && remoteUri.includes('/img/')) {\n    var r = remoteUri.split('/img/')[1];\n    var localName = r.replace(/\\//g, '_');\n    localUri = \"\" + FileSystem.documentDirectory + localName + \".png\";\n  }\n\n  return localUri;\n}\n\nfunction getProperty(o, propertyName) {\n  return o[propertyName];\n}","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/src/utils/visiona-indices.ts"],"names":["dayjs","FileSystem","downloadIndexImage","isAnyIndexAvailableForArea","area","isAny","field","isIndexAvailable","visiona","length","getIndexImageLocalUri","idxName","date","obs","find","observation","format","idx","getProperty","stats","indice","translateToLocalUri","browseUrl","undefined","cacheAreaIndexImages","index","proms","push","cacheFieldIndexImages","Promise","all","a","l","name","checkAndDownloadIndexImage","remoteUri","localUri","getInfoAsync","exists","data","status","size","Number","parseInt","headers","deleteAsync","getDatesForIndexDataFromArea","filterDate","dates","indicesDates","getDatesForIndexDataFromField","includes","dateArr","isAfter","r","split","localName","replace","documentDirectory","o","propertyName"],"mappings":"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","sourcesContent":["import dayjs from 'dayjs';\nimport { Models, VegetationIndex, VegetationIndexName } from '../../models';\nimport * as FileSystem from 'expo-file-system';\nimport { downloadIndexImage } from '../network';\n\nexport function isAnyIndexAvailableForArea(area: Models.area) {\n\tlet isAny = false;\n\tfor (const field of area.field) {\n\t\tisAny = isIndexAvailable(field) || isAny;\n\t}\n\n\treturn isAny;\n}\n\nexport function isIndexAvailable(field: Models.field) {\n\tif (field.visiona) return field.visiona.length > 0;\n\treturn false;\n}\n\nexport function getIndexImageLocalUri(field: Models.field, idxName: VegetationIndexName, date: string) {\n\tif (field?.visiona && field?.visiona.length > 0) {\n\t\tconst obs = field.visiona.find((observation) => dayjs(observation.date).format('YYYY-MM-DD') === date);\n\t\tif (obs) {\n\t\t\tconst idx = getProperty(obs.stats.indice, idxName);\n\t\t\tif (idx) {\n\t\t\t\treturn translateToLocalUri(idx.browseUrl);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport async function cacheAreaIndexImages(area: Models.area, index: VegetationIndex) {\n\tconst proms = [];\n\tfor (const field of area.field) {\n\t\tproms.push(cacheFieldIndexImages(field, index));\n\t}\n\n\tawait Promise.all(proms);\n}\n\nexport async function cacheFieldIndexImages(field: Models.field, index: VegetationIndex) {\n\tconst proms = [];\n\tif (field.visiona) {\n\t\tfor (let a = 0, l = field.visiona.length; a < l; a++) {\n\t\t\tconst observation = field.visiona[a];\n\t\t\tconst idx = getProperty(observation.stats.indice, index.name);\n\t\t\tif (idx?.browseUrl) {\n\t\t\t\tproms.push(checkAndDownloadIndexImage(idx.browseUrl));\n\t\t\t}\n\t\t}\n\t}\n\n\tawait Promise.all(proms);\n}\n\nasync function checkAndDownloadIndexImage(remoteUri: string) {\n\tconst localUri = translateToLocalUri(remoteUri);\n\tif (localUri) {\n\t\tconst { exists } = await FileSystem.getInfoAsync(localUri);\n\t\tif (!exists) {\n\t\t\tconst data = await downloadIndexImage(remoteUri, localUri);\n\t\t\tif (data.status === 200) {\n\t\t\t\tconst size = Number.parseInt(data.headers['Content-Length'], 10);\n\t\t\t\tif (size === 0) await FileSystem.deleteAsync(localUri);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function getDatesForIndexDataFromArea(area: Models.area, filterDate?: string): string[] {\n\tconst dates: string[] = [];\n\t// add all dates into single array\n\tfor (const field of area.field) {\n\t\tconst indicesDates = getDatesForIndexDataFromField(field, filterDate);\n\t\tfor (const date of indicesDates) {\n\t\t\tif (!dates.includes(date)) {\n\t\t\t\tdates.push(date);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dates;\n}\n\nexport function getDatesForIndexDataFromField(field: Models.field, filterDate?: string): string[] {\n\tconst dateArr: string[] = [];\n\tif (field.visiona) {\n\t\tfor (let a = 0, l = field.visiona.length; a < l; a++) {\n\t\t\tconst observation = field.visiona[a];\n\t\t\tif (filterDate) {\n\t\t\t\tif (dayjs(observation.date).isAfter(dayjs(filterDate))) dateArr.push(observation.date);\n\t\t\t} else {\n\t\t\t\tdateArr.push(observation.date);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dateArr;\n}\n\nfunction translateToLocalUri(remoteUri: string): string | undefined {\n\tlet localUri;\n\tif (remoteUri?.includes('/img/')) {\n\t\tconst r = remoteUri.split('/img/')[1];\n\t\tconst localName = r.replace(/\\//g, '_');\n\t\tlocalUri = `${FileSystem.documentDirectory!}${localName}.png`;\n\t}\n\n\treturn localUri;\n}\n\nfunction getProperty<T, K extends keyof T>(o: T, propertyName: K): T[K] {\n\treturn o[propertyName]; // o[propertyName] is of type T[K]\n}\n"]},"metadata":{},"sourceType":"module"}