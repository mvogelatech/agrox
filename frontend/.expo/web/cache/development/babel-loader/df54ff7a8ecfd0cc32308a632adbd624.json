{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/06-quotation-summary/index.tsx\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createTStyleSheet } from \"../../src/utils/style\";\nimport { ClosableHeader } from \"../00-common\";\nimport { PackageDetails } from \"./package-details\";\nimport { PulverizationMethods } from \"../../models\";\nimport { useMainSelector, useIsOffline } from \"../../redux-things\";\nimport { ky } from \"../../src/network/ky\";\nimport { Button } from 'react-native-paper';\nimport { displayAlert, needsToBeOnline, confirmQuotationLeave, displayTimeoutErrorSnackbar } from \"../../src/utils/alert-messages\";\nimport { asAliveOnlyScreenComponent } from \"../../src/utils/smart-lifecycle-components\";\nimport { WaitOverlay } from \"../00-common/wait-overlay\";\n\nfunction postQuotation(newQuotation) {\n  var createdQuotation;\n  return _regeneratorRuntime.async(function postQuotation$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(ky.post('quotation', {\n            json: {\n              pulverizationStartDate: newQuotation.pulverizationStartDate,\n              pulverizationEndDate: newQuotation.pulverizationEndDate,\n              fieldsWithMethods: Object.fromEntries(newQuotation.fieldsWithMethods)\n            }\n          }).json());\n\n        case 2:\n          createdQuotation = _context.sent;\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getFieldsById(id, areas) {\n  for (var _iterator = _createForOfIteratorHelperLoose(areas), _step; !(_step = _iterator()).done;) {\n    var _area = _step.value;\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(_area.field), _step2; !(_step2 = _iterator2()).done;) {\n      var _field = _step2.value;\n      if (_field.id === id) return _field;\n    }\n  }\n}\n\nexport var QuotationSummary = asAliveOnlyScreenComponent(function (_ref) {\n  var navigation = _ref.navigation;\n  var newQuotation = useMainSelector(function (state) {\n    return state.interactionData.newQuotation;\n  });\n  var fieldsWithMethods = useMainSelector(function (state) {\n    return state.interactionData.newQuotation.fieldsWithMethods;\n  });\n  var fromServices = useMainSelector(function (state) {\n    return state.interactionData.general.servicesPulverization;\n  });\n  var areas = useMainSelector(function (state) {\n    return state.backendData.user.many_user_has_many_farm[0].farm.area;\n  });\n  var isOnline = !useIsOffline();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showIndicator = _useState2[0],\n      setShowIndicator = _useState2[1];\n\n  var planeFields = [];\n  var droneFields = [];\n\n  _toConsumableArray(fieldsWithMethods.keys()).forEach(function (fieldId) {\n    return fieldsWithMethods.get(fieldId) === PulverizationMethods.DRONE ? droneFields.push(getFieldsById(fieldId, areas)) : planeFields.push(getFieldsById(fieldId, areas));\n  });\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, showIndicator ? React.createElement(WaitOverlay, {\n    text: \"Aguarde\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }) : undefined, React.createElement(ClosableHeader, {\n    onBackPress: function onBackPress() {\n      navigation.goBack();\n    },\n    onClose: function onClose() {\n      void confirmQuotationLeave(navigation);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.mainView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.contentView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }\n  }, \"Veja o resumo do seu\\nor\\xE7amento de pulveriza\\xE7\\xE3o\"), planeFields.length > 0 ? React.createElement(PackageDetails, {\n    method: \"plane\",\n    isShowDetailsButton: !fromServices,\n    fields: planeFields.map(function (field) {\n      return field.name;\n    }),\n    onSeeMorePress: function onSeeMorePress() {\n      navigation.navigate('Details', {\n        method: PulverizationMethods.PLANE,\n        fields: planeFields\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }) : undefined, droneFields.length > 0 ? React.createElement(PackageDetails, {\n    method: \"drone\",\n    isShowDetailsButton: !fromServices,\n    fields: droneFields.map(function (field) {\n      return field.name;\n    }),\n    onSeeMorePress: function onSeeMorePress() {\n      navigation.navigate('Details', {\n        method: PulverizationMethods.DRONE,\n        fields: droneFields\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }) : undefined), React.createElement(Button, {\n    uppercase: false,\n    mode: \"contained\",\n    style: styles.button,\n    labelStyle: styles.buttonText,\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!isOnline) {\n                _context2.next = 14;\n                break;\n              }\n\n              setShowIndicator(true);\n              _context2.prev = 2;\n              navigation.navigate('FeedbackQuotation');\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(postQuotation(newQuotation));\n\n            case 6:\n              _context2.next = 12;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](2);\n              setShowIndicator(false);\n              displayTimeoutErrorSnackbar(_context2.t0, 'Post Quotation');\n\n            case 12:\n              _context2.next = 15;\n              break;\n\n            case 14:\n              displayAlert(needsToBeOnline);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[2, 8]], Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, \"Or\\xE7ar Pulveriza\\xE7\\xE3o\")));\n});\nvar styles = createTStyleSheet({\n  mainView: {\n    flex: 1,\n    backgroundColor: 'white',\n    paddingHorizontal: '16rem',\n    justifyContent: 'space-between'\n  },\n  titleText: {\n    paddingLeft: '8rem',\n    paddingVertical: '8rem',\n    fontSize: '23rem'\n  },\n  contentView: {},\n  button: {\n    marginVertical: '24rem',\n    height: '45rem',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  buttonText: {\n    fontSize: '14rem'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/06-quotation-summary/index.tsx"],"names":["React","useState","createTStyleSheet","ClosableHeader","PackageDetails","PulverizationMethods","useMainSelector","useIsOffline","ky","Button","displayAlert","needsToBeOnline","confirmQuotationLeave","displayTimeoutErrorSnackbar","asAliveOnlyScreenComponent","WaitOverlay","postQuotation","newQuotation","post","json","pulverizationStartDate","pulverizationEndDate","fieldsWithMethods","Object","fromEntries","createdQuotation","getFieldsById","id","areas","area","field","QuotationSummary","navigation","state","interactionData","fromServices","general","servicesPulverization","backendData","user","many_user_has_many_farm","farm","isOnline","showIndicator","setShowIndicator","planeFields","droneFields","keys","forEach","fieldId","get","DRONE","push","flex","undefined","goBack","styles","mainView","contentView","titleText","length","map","name","navigate","method","PLANE","fields","button","buttonText","backgroundColor","paddingHorizontal","justifyContent","paddingLeft","paddingVertical","fontSize","marginVertical","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text } from 'react-native';\nimport { createTStyleSheet } from '../../src/utils/style';\n\nimport { ClosableHeader } from '../00-common';\nimport { AgroXScreenProps } from '../navigation-types';\nimport { PackageDetails } from './package-details';\n\nimport { Models, PulverizationMethods } from '../../models';\nimport { MainState, dispatch, useMainSelector, useIsOffline } from '../../redux-things';\nimport { ky } from '../../src/network/ky';\nimport { Button } from 'react-native-paper';\nimport { displayAlert, needsToBeOnline, confirmQuotationLeave, displayTimeoutErrorSnackbar } from '../../src/utils/alert-messages';\nimport { asAliveOnlyScreenComponent } from '../../src/utils/smart-lifecycle-components';\nimport { WaitOverlay } from '../00-common/wait-overlay';\n\ntype ScreenProps = AgroXScreenProps<'QuotationSummary'>;\n\nasync function postQuotation(newQuotation: MainState['interactionData']['newQuotation']) {\n\tconst createdQuotation = await ky\n\t\t.post('quotation', {\n\t\t\tjson: {\n\t\t\t\tpulverizationStartDate: newQuotation.pulverizationStartDate,\n\t\t\t\tpulverizationEndDate: newQuotation.pulverizationEndDate,\n\t\t\t\tfieldsWithMethods: Object.fromEntries(newQuotation.fieldsWithMethods!),\n\t\t\t},\n\t\t})\n\t\t.json<Models.quotation_package>();\n\t// dispatch({ type: 'BACKEND_DATA__POSTED_NEW_QUOTATION_PACKAGE', package: createdQuotation });\n}\n\nfunction getFieldsById(id: number, areas: Models.area[]) {\n\tfor (const area of areas) {\n\t\tfor (const field of area.field) {\n\t\t\tif (field.id === id) return field;\n\t\t}\n\t}\n}\n\nexport const QuotationSummary = asAliveOnlyScreenComponent(({ navigation }: ScreenProps) => {\n\tconst newQuotation = useMainSelector((state) => state.interactionData.newQuotation);\n\tconst fieldsWithMethods = useMainSelector((state) => state.interactionData.newQuotation.fieldsWithMethods);\n\tconst fromServices = useMainSelector((state) => state.interactionData.general.servicesPulverization);\n\n\tconst areas = useMainSelector((state) => state.backendData.user!.many_user_has_many_farm[0].farm.area);\n\n\tconst isOnline = !useIsOffline();\n\n\tconst [showIndicator, setShowIndicator] = useState(false);\n\n\tconst planeFields: Models.field[] = [];\n\tconst droneFields: Models.field[] = [];\n\t[...fieldsWithMethods!.keys()].forEach((fieldId) =>\n\t\tfieldsWithMethods!.get(fieldId) === PulverizationMethods.DRONE\n\t\t\t? droneFields.push(getFieldsById(fieldId, areas)!)\n\t\t\t: planeFields.push(getFieldsById(fieldId, areas)!),\n\t);\n\n\treturn (\n\t\t<View style={{ flex: 1 }}>\n\t\t\t{showIndicator ? <WaitOverlay text=\"Aguarde\" /> : undefined}\n\t\t\t<ClosableHeader\n\t\t\t\tonBackPress={() => {\n\t\t\t\t\tnavigation.goBack();\n\t\t\t\t}}\n\t\t\t\tonClose={() => {\n\t\t\t\t\tvoid confirmQuotationLeave(navigation);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<View style={styles.mainView}>\n\t\t\t\t<View style={styles.contentView}>\n\t\t\t\t\t<Text style={styles.titleText}>{`Veja o resumo do seu\\norçamento de pulverização`}</Text>\n\t\t\t\t\t{planeFields.length > 0 ? (\n\t\t\t\t\t\t<PackageDetails\n\t\t\t\t\t\t\tmethod=\"plane\"\n\t\t\t\t\t\t\tisShowDetailsButton={!fromServices}\n\t\t\t\t\t\t\tfields={planeFields.map((field) => field.name)}\n\t\t\t\t\t\t\tonSeeMorePress={() => {\n\t\t\t\t\t\t\t\tnavigation.navigate('Details', { method: PulverizationMethods.PLANE, fields: planeFields });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : undefined}\n\n\t\t\t\t\t{droneFields.length > 0 ? (\n\t\t\t\t\t\t<PackageDetails\n\t\t\t\t\t\t\tmethod=\"drone\"\n\t\t\t\t\t\t\tisShowDetailsButton={!fromServices}\n\t\t\t\t\t\t\tfields={droneFields.map((field) => field.name)}\n\t\t\t\t\t\t\tonSeeMorePress={() => {\n\t\t\t\t\t\t\t\tnavigation.navigate('Details', { method: PulverizationMethods.DRONE, fields: droneFields });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : undefined}\n\t\t\t\t</View>\n\n\t\t\t\t<Button\n\t\t\t\t\tuppercase={false}\n\t\t\t\t\tmode=\"contained\"\n\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\tlabelStyle={styles.buttonText}\n\t\t\t\t\tonPress={async () => {\n\t\t\t\t\t\tif (isOnline) {\n\t\t\t\t\t\t\tsetShowIndicator(true);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tnavigation.navigate('FeedbackQuotation');\n\t\t\t\t\t\t\t\tawait postQuotation(newQuotation);\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tsetShowIndicator(false);\n\t\t\t\t\t\t\t\tdisplayTimeoutErrorSnackbar(error, 'Post Quotation');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdisplayAlert(needsToBeOnline);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tOrçar Pulverização\n\t\t\t\t</Button>\n\t\t\t</View>\n\t\t</View>\n\t);\n});\n\nconst styles = createTStyleSheet({\n\tmainView: {\n\t\tflex: 1,\n\t\tbackgroundColor: 'white',\n\t\tpaddingHorizontal: '16rem',\n\t\tjustifyContent: 'space-between',\n\t},\n\ttitleText: {\n\t\tpaddingLeft: '8rem',\n\t\tpaddingVertical: '8rem',\n\t\tfontSize: '23rem',\n\t},\n\tcontentView: {},\n\tbutton: {\n\t\tmarginVertical: '24rem',\n\t\theight: '45rem',\n\t\tjustifyContent: 'center',\n\t\twidth: '100%',\n\t},\n\tbuttonText: {\n\t\tfontSize: '14rem',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}