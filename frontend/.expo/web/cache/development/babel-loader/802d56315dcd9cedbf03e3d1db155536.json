{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport { debug } from \"../debug\";\n\nfunction preventSplashScreenAutoHide_() {\n  return _regeneratorRuntime.async(function preventSplashScreenAutoHide_$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(SplashScreen.preventAutoHideAsync());\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          debug(\"[\" + new Date().toISOString() + \"] Could not prevent splash screen from auto hiding! Error:\", _context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n}\n\nfunction hideSplashScreen_() {\n  return _regeneratorRuntime.async(function hideSplashScreen_$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(SplashScreen.hideAsync());\n\n        case 3:\n          _context2.next = 8;\n          break;\n\n        case 5:\n          _context2.prev = 5;\n          _context2.t0 = _context2[\"catch\"](0);\n          debug(\"[\" + new Date().toISOString() + \"] Could not hide splash screen! Error:\", _context2.t0);\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n}\n\nexport function preventSplashScreenAutoHide() {\n  void preventSplashScreenAutoHide_();\n}\nexport function hideSplashScreen() {\n  void hideSplashScreen_();\n}","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/src/splash-screen/index.ts"],"names":["SplashScreen","debug","preventSplashScreenAutoHide_","preventAutoHideAsync","Date","toISOString","hideSplashScreen_","hideAsync","preventSplashScreenAutoHide","hideSplashScreen"],"mappings":";AAAA,OAAO,KAAKA,YAAZ,MAA8B,oBAA9B;AACA,SAASC,KAAT;;AAEA,SAAeC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEQF,YAAY,CAACG,oBAAb,EAFR;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIEF,UAAAA,KAAK,OAAK,IAAIG,IAAJ,GAAWC,WAAX,EAAL,6EAAL;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,SAAeC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEQN,YAAY,CAACO,SAAb,EAFR;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIEN,UAAAA,KAAK,OAAK,IAAIG,IAAJ,GAAWC,WAAX,EAAL,0DAAL;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,OAAO,SAASG,2BAAT,GAA6C;AACnD,OAAKN,4BAA4B,EAAjC;AACA;AAED,OAAO,SAASO,gBAAT,GAAkC;AACxC,OAAKH,iBAAiB,EAAtB;AACA","sourcesContent":["import * as SplashScreen from 'expo-splash-screen';\nimport { debug } from '../debug';\n\nasync function preventSplashScreenAutoHide_(): Promise<void> {\n\ttry {\n\t\tawait SplashScreen.preventAutoHideAsync();\n\t} catch (error) {\n\t\tdebug(`[${new Date().toISOString()}] Could not prevent splash screen from auto hiding! Error:`, error);\n\t}\n}\n\nasync function hideSplashScreen_(): Promise<void> {\n\ttry {\n\t\tawait SplashScreen.hideAsync();\n\t} catch (error) {\n\t\tdebug(`[${new Date().toISOString()}] Could not hide splash screen! Error:`, error);\n\t}\n}\n\nexport function preventSplashScreenAutoHide(): void {\n\tvoid preventSplashScreenAutoHide_();\n}\n\nexport function hideSplashScreen(): void {\n\tvoid hideSplashScreen_();\n}\n"]},"metadata":{},"sourceType":"module"}