{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/04-method-selection/choosable-field-card.tsx\";\nimport * as React from 'react';\nimport { Card, Divider, Checkbox } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createTStyleSheet } from \"../../src/utils/style\";\nimport { getLatestCrop } from \"../../src/utils\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nexport function ChoosableFieldCard(props) {\n  var latestCrop = getLatestCrop(props.field);\n  console.log('+++++++pa', latestCrop.diagnosis[0].prescription[0]);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      checked2 = _React$useState4[0],\n      setChecked2 = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      checked3 = _React$useState6[0],\n      setChecked3 = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      checked4 = _React$useState8[0],\n      setChecked4 = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      checked5 = _React$useState10[0],\n      setChecked5 = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      checked6 = _React$useState12[0],\n      setChecked6 = _React$useState12[1];\n\n  return React.createElement(View, {\n    style: styles.mainView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, React.createElement(Card, {\n    style: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    style: styles.touchable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }\n  }, \"Tratamento:\"), React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }\n  }, \"ERVAS DANINHAS\")))), React.createElement(View, {\n    style: styles.childrenView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.choosableView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  }, React.createElement(Divider, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.radioItemView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }\n  }, React.createElement(Checkbox, {\n    status: checked ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      setChecked(!checked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.itemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Daninhas Indefinidas\"))), React.createElement(TouchableOpacity, {\n    style: styles.radioItemView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 8\n    }\n  }, React.createElement(Checkbox, {\n    status: checked2 ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      setChecked2(!checked2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.itemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Gram\\xEDneas Porte Alto\"))), React.createElement(TouchableOpacity, {\n    style: styles.radioItemView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 8\n    }\n  }, React.createElement(Checkbox, {\n    status: checked3 ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      setChecked3(!checked3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.itemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Gram\\xEDneas Porte Baixo\"))), React.createElement(TouchableOpacity, {\n    style: styles.radioItemView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 8\n    }\n  }, React.createElement(Checkbox, {\n    status: checked4 ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      setChecked4(!checked4);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.itemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Mamona\"))), React.createElement(TouchableOpacity, {\n    style: styles.radioItemView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 8\n    }\n  }, React.createElement(Checkbox, {\n    status: checked5 ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      setChecked5(!checked5);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.itemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Outras Folhas Largas\"))), React.createElement(TouchableOpacity, {\n    style: styles.radioItemView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 8\n    }\n  }, React.createElement(Checkbox, {\n    status: checked6 ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      setChecked6(!checked6);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.itemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, \"Trepadeiras\")))))));\n}\nvar styles = createTStyleSheet({\n  mainView: {\n    flexBasis: '100%'\n  },\n  choosableView: {\n    marginVertical: '8rem',\n    paddingRight: '6rem',\n    alignItems: 'flex-start',\n    justifyContent: 'space-around'\n  },\n  methodText: {\n    textAlign: 'center',\n    fontSize: '12rem',\n    color: '#78849E',\n    paddingVertical: '8rem'\n  },\n  card: {\n    elevation: '4rem',\n    margin: '8rem',\n    borderRadius: '10rem'\n  },\n  fieldView: {\n    alignItems: 'flex-start',\n    justifyContent: 'center'\n  },\n  divider: {\n    width: '100%',\n    height: '1rem',\n    marginVertical: '4rem'\n  },\n  itemText: {\n    paddingLeft: '1rem'\n  },\n  recommendedText: {\n    paddingVertical: '1rem',\n    paddingHorizontal: '5rem',\n    fontSize: '9.5rem',\n    backgroundColor: '#469BA2',\n    fontWeight: 'bold',\n    borderRadius: '6rem',\n    color: 'white',\n    marginHorizontal: '8rem'\n  },\n  radioItemView: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/04-method-selection/choosable-field-card.tsx"],"names":["React","Card","Divider","Checkbox","createTStyleSheet","getLatestCrop","TouchableOpacity","ChoosableFieldCard","props","latestCrop","field","console","log","diagnosis","prescription","useState","checked","setChecked","checked2","setChecked2","checked3","setChecked3","checked4","setChecked4","checked5","setChecked5","checked6","setChecked6","styles","mainView","card","touchable","flexDirection","alignItems","justifyContent","title","subtitle","childrenView","choosableView","divider","radioItemView","itemText","flexBasis","marginVertical","paddingRight","methodText","textAlign","fontSize","color","paddingVertical","elevation","margin","borderRadius","fieldView","width","height","paddingLeft","recommendedText","paddingHorizontal","backgroundColor","fontWeight","marginHorizontal"],"mappings":"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","sourcesContent":["import * as React from 'react';\n// import { Card, Divider, RadioButton, Checkbox } from 'react-native-paper';\nimport { Card, Divider, Checkbox } from 'react-native-paper';\nimport { View, Text } from 'react-native';\nimport { createTStyleSheet } from '../../src/utils/style';\n// import { Models, PulverizationMethod, PulverizationMethods } from '../../models';\nimport { Models } from '../../models';\n// import { FieldCard } from '../00-common/field-card';\nimport { getLatestCrop } from '../../src/utils';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\ntype ChoosableFieldCardProps = {\n\tfield: Models.field;\n\tisDiagnosisMode: boolean;\n\tchosenMethod: PulverizationMethod;\n\tonRadioButtonPress: (method: PulverizationMethod) => void;\n};\n\nexport function ChoosableFieldCard(props: ChoosableFieldCardProps) {\n\tconst latestCrop = getLatestCrop(props.field);\n\tconsole.log('+++++++pa', latestCrop.diagnosis[0].prescription[0]);\n\t// const recommendedMethodNumber = getLatestPrescriptionPulverizationMethod(props.field);\n\t// const recommendedMethod = recommendedMethodNumber === 1 ? 'Drone' : recommendedMethodNumber === 2 ? 'Plane' : undefined;\n\tconst [checked, setChecked] = React.useState(false);\n\tconst [checked2, setChecked2] = React.useState(false);\n\tconst [checked3, setChecked3] = React.useState(false);\n\tconst [checked4, setChecked4] = React.useState(false);\n\tconst [checked5, setChecked5] = React.useState(false);\n\tconst [checked6, setChecked6] = React.useState(false);\n\treturn (\n\t\t<View style={styles.mainView}>\n\t\t\t<Card style={styles.card}>\n\t\t\t\t<TouchableOpacity activeOpacity={0.5} style={styles.touchable}>\n\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'flex-start' }}>\n\t\t\t\t\t\t{/* <MaterialIcons name={props.isExpanded ? 'keyboard-arrow-up' : 'keyboard-arrow-down'} color=\"#6C6464\" style={styles.icon} /> */}\n\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t<Text numberOfLines={1} style={styles.title}>\n\t\t\t\t\t\t\t\tTratamento:\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t{/* {props.subtitle ? ( */}\n\t\t\t\t\t\t\t<Text numberOfLines={1} style={styles.subtitle}>\n\t\t\t\t\t\t\t\tERVAS DANINHAS\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t{/* ) : undefined} */}\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t\t{/* {props.titleRight} */}\n\t\t\t\t</TouchableOpacity>\n\t\t\t\t{/* {props.isExpanded ? ( */}\n\t\t\t\t<View style={styles.childrenView}>\n\t\t\t\t\t{/* {props.divider} */}\n\t\t\t\t\t<View style={styles.choosableView}>\n\t\t\t\t\t\t{/* <RadioButton.Group */}\n\t\t\t\t\t\t{/* value={props.chosenMethod === PulverizationMethods.DRONE ? 'Drone' : props.chosenMethod === PulverizationMethods.PLANE ? 'Plane' : ''}\n\t\t\t\t\t\t\tonValueChange={() => console.log('')} */}\n\t\t\t\t\t\t{/* > */}\n\t\t\t\t\t\t{/* <TouchableOpacity style={styles.radioItemView} onPress={() => props.onRadioButtonPress(PulverizationMethods.DRONE)}>\n\t\t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t\t<RadioButton color=\"#327387\" value=\"Drone\" />\n\t\t\t\t\t\t\t\t\t<Text style={styles.itemText}>Drone</Text>\n\t\t\t\t\t\t\t\t\t{recommendedMethod === 'Drone' ? <Text style={styles.recommendedText}>Recomendado</Text> : undefined}\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t<Divider style={styles.divider} /> */}\n\t\t\t\t\t\t<Divider style={styles.divider} />\n\t\t\t\t\t\t<TouchableOpacity style={styles.radioItemView}>\n\t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tstatus={checked ? 'checked' : 'unchecked'}\n\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\tsetChecked(!checked);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/* <RadioButton color=\"#327387\" value=\"Drone\" /> */}\n\t\t\t\t\t\t\t\t<Text style={styles.itemText}>Daninhas Indefinidas</Text>\n\t\t\t\t\t\t\t\t{/* {recommendedMethod === 'Drone' ? <Text style={styles.recommendedText}>Recomendado</Text> : undefined} */}\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t<TouchableOpacity style={styles.radioItemView}>\n\t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tstatus={checked2 ? 'checked' : 'unchecked'}\n\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\tsetChecked2(!checked2);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/* <RadioButton color=\"#327387\" value=\"Drone\" /> */}\n\t\t\t\t\t\t\t\t<Text style={styles.itemText}>Gramíneas Porte Alto</Text>\n\t\t\t\t\t\t\t\t{/* {recommendedMethod === 'Drone' ? <Text style={styles.recommendedText}>Recomendado</Text> : undefined} */}\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t<TouchableOpacity style={styles.radioItemView}>\n\t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tstatus={checked3 ? 'checked' : 'unchecked'}\n\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\tsetChecked3(!checked3);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/* <RadioButton color=\"#327387\" value=\"Drone\" /> */}\n\t\t\t\t\t\t\t\t<Text style={styles.itemText}>Gramíneas Porte Baixo</Text>\n\t\t\t\t\t\t\t\t{/* {recommendedMethod === 'Drone' ? <Text style={styles.recommendedText}>Recomendado</Text> : undefined} */}\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t<TouchableOpacity style={styles.radioItemView}>\n\t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tstatus={checked4 ? 'checked' : 'unchecked'}\n\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\tsetChecked4(!checked4);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/* <RadioButton color=\"#327387\" value=\"Drone\" /> */}\n\t\t\t\t\t\t\t\t<Text style={styles.itemText}>Mamona</Text>\n\t\t\t\t\t\t\t\t{/* {recommendedMethod === 'Drone' ? <Text style={styles.recommendedText}>Recomendado</Text> : undefined} */}\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t<TouchableOpacity style={styles.radioItemView}>\n\t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tstatus={checked5 ? 'checked' : 'unchecked'}\n\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\tsetChecked5(!checked5);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/* <RadioButton color=\"#327387\" value=\"Drone\" /> */}\n\t\t\t\t\t\t\t\t<Text style={styles.itemText}>Outras Folhas Largas</Text>\n\t\t\t\t\t\t\t\t{/* {recommendedMethod === 'Drone' ? <Text style={styles.recommendedText}>Recomendado</Text> : undefined} */}\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t<TouchableOpacity style={styles.radioItemView}>\n\t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tstatus={checked6 ? 'checked' : 'unchecked'}\n\t\t\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\t\t\tsetChecked6(!checked6);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/* <RadioButton color=\"#327387\" value=\"Drone\" /> */}\n\t\t\t\t\t\t\t\t<Text style={styles.itemText}>Trepadeiras</Text>\n\t\t\t\t\t\t\t\t{/* {recommendedMethod === 'Drone' ? <Text style={styles.recommendedText}>Recomendado</Text> : undefined} */}\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t{/* <TouchableOpacity style={styles.radioItemView} onPress={() => props.onRadioButtonPress(PulverizationMethods.PLANE)}>\n\t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t<RadioButton color=\"#327387\" value=\"Plane\" />\n\t\t\t\t\t\t\t\t<Text style={styles.itemText}>Avião</Text>\n\t\t\t\t\t\t\t\t{recommendedMethod === 'Plane' ? <Text style={styles.recommendedText}>Recomendado</Text> : undefined}\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t<TouchableOpacity style={styles.radioItemView} onPress={() => props.onRadioButtonPress(PulverizationMethods.PLANE)}>\n\t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t<RadioButton color=\"#327387\" value=\"Plane\" />\n\t\t\t\t\t\t\t\t<Text style={styles.itemText}>Avião</Text>\n\t\t\t\t\t\t\t\t{recommendedMethod === 'Plane' ? <Text style={styles.recommendedText}>Recomendado</Text> : undefined}\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</TouchableOpacity> */}\n\t\t\t\t\t\t{/* </RadioButton.Group> */}\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t{/* ) : undefined} */}\n\t\t\t</Card>\n\t\t\t{/* <Card style={styles.card}>\n\t\t\t\t<Divider />\n\t\t\t\t<View style={styles.fieldView}>\n\t\t\t\t\t<FieldCard isHideCircle isIndexNotAvailable={false} isDiagnosisMode={props.isDiagnosisMode} isElevated={false} field={props.field} />\n\t\t\t\t</View>\n\t\t\t\t<Divider style={styles.divider} /> */}\n\t\t\t{/* <View style={styles.choosableView}>\n\t\t\t\t\t<RadioButton.Group\n\t\t\t\t\t\tvalue={props.chosenMethod === PulverizationMethods.DRONE ? 'Drone' : props.chosenMethod === PulverizationMethods.PLANE ? 'Plane' : ''}\n\t\t\t\t\t\tonValueChange={() => console.log('')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TouchableOpacity style={styles.radioItemView} onPress={() => props.onRadioButtonPress(PulverizationMethods.DRONE)}>\n\t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t<RadioButton color=\"#327387\" value=\"Drone\" />\n\t\t\t\t\t\t\t\t<Text style={styles.itemText}>Drone</Text>\n\t\t\t\t\t\t\t\t{recommendedMethod === 'Drone' ? <Text style={styles.recommendedText}>Recomendado</Text> : undefined}\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t<Divider style={styles.divider} />\n\t\t\t\t\t\t<TouchableOpacity style={styles.radioItemView} onPress={() => props.onRadioButtonPress(PulverizationMethods.PLANE)}>\n\t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t<RadioButton color=\"#327387\" value=\"Plane\" />\n\t\t\t\t\t\t\t\t<Text style={styles.itemText}>Avião</Text>\n\t\t\t\t\t\t\t\t{recommendedMethod === 'Plane' ? <Text style={styles.recommendedText}>Recomendado</Text> : undefined}\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</RadioButton.Group>\n\t\t\t\t</View> */}\n\t\t\t{/* </Card> */}\n\t\t</View>\n\t);\n}\n\nconst styles = createTStyleSheet({\n\tmainView: {\n\t\tflexBasis: '100%',\n\t},\n\tchoosableView: {\n\t\tmarginVertical: '8rem',\n\t\tpaddingRight: '6rem',\n\t\talignItems: 'flex-start',\n\t\tjustifyContent: 'space-around',\n\t},\n\tmethodText: {\n\t\ttextAlign: 'center',\n\t\tfontSize: '12rem',\n\t\tcolor: '#78849E',\n\t\tpaddingVertical: '8rem',\n\t},\n\tcard: {\n\t\televation: '4rem',\n\t\tmargin: '8rem',\n\t\tborderRadius: '10rem',\n\t},\n\tfieldView: {\n\t\talignItems: 'flex-start',\n\t\tjustifyContent: 'center',\n\t},\n\tdivider: {\n\t\twidth: '100%',\n\t\theight: '1rem',\n\t\tmarginVertical: '4rem',\n\t},\n\titemText: {\n\t\tpaddingLeft: '1rem',\n\t},\n\trecommendedText: {\n\t\tpaddingVertical: '1rem',\n\t\tpaddingHorizontal: '5rem',\n\t\tfontSize: '9.5rem',\n\t\tbackgroundColor: '#469BA2',\n\t\tfontWeight: 'bold',\n\t\tborderRadius: '6rem',\n\t\tcolor: 'white',\n\t\tmarginHorizontal: '8rem',\n\t},\n\tradioItemView: {\n\t\tflexDirection: 'row',\n\t\talignItems: 'flex-start',\n\t\tjustifyContent: 'flex-start',\n\t\twidth: '100%',\n\t},\n});\n\n// import React from 'react';\n// import { Card, Divider, RadioButton } from 'react-native-paper';\n// import { View, Text } from 'react-native';\n// import { createTStyleSheet } from '../../src/utils/style';\n// import { Models, PulverizationMethod, PulverizationMethods } from '../../models';\n// import { FieldCard } from '../00-common/field-card';\n// import { getLatestPrescriptionPulverizationMethod } from '../../src/utils';\n// import { TouchableOpacity } from 'react-native-gesture-handler';\n\n// type ChoosableFieldCardProps = {\n// \tfield: Models.field;\n// \tisDiagnosisMode: boolean;\n// \tchosenMethod: PulverizationMethod;\n// \tonRadioButtonPress: (method: PulverizationMethod) => void;\n// };\n\n// export function ChoosableFieldCard(props: ChoosableFieldCardProps) {\n// \tconst recommendedMethodNumber = getLatestPrescriptionPulverizationMethod(props.field);\n// \tconst recommendedMethod = recommendedMethodNumber === 1 ? 'Drone' : recommendedMethodNumber === 2 ? 'Plane' : undefined;\n// \treturn (\n// \t\t<View style={styles.mainView}>\n// \t\t\t<Card style={styles.card}>\n// \t\t\t\t<Divider />\n// \t\t\t\t<View style={styles.fieldView}>\n// \t\t\t\t\t<FieldCard isHideCircle isIndexNotAvailable={false} isDiagnosisMode={props.isDiagnosisMode} isElevated={false} field={props.field} />\n// \t\t\t\t</View>\n// \t\t\t\t<Divider style={styles.divider} />\n// \t\t\t\t<View style={styles.choosableView}>\n// \t\t\t\t\t<RadioButton.Group\n// \t\t\t\t\t\tvalue={props.chosenMethod === PulverizationMethods.DRONE ? 'Drone' : props.chosenMethod === PulverizationMethods.PLANE ? 'Plane' : ''}\n// \t\t\t\t\t\tonValueChange={() => console.log('')}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<TouchableOpacity style={styles.radioItemView} onPress={() => props.onRadioButtonPress(PulverizationMethods.DRONE)}>\n// \t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n// \t\t\t\t\t\t\t\t<RadioButton color=\"#327387\" value=\"Drone\" />\n// \t\t\t\t\t\t\t\t<Text style={styles.itemText}>Drone</Text>\n// \t\t\t\t\t\t\t\t{recommendedMethod === 'Drone' ? <Text style={styles.recommendedText}>Recomendado</Text> : undefined}\n// \t\t\t\t\t\t\t</View>\n// \t\t\t\t\t\t</TouchableOpacity>\n// \t\t\t\t\t\t<Divider style={styles.divider} />\n// \t\t\t\t\t\t<TouchableOpacity style={styles.radioItemView} onPress={() => props.onRadioButtonPress(PulverizationMethods.PLANE)}>\n// \t\t\t\t\t\t\t<View style={{ flexDirection: 'row', alignItems: 'center' }}>\n// \t\t\t\t\t\t\t\t<RadioButton color=\"#327387\" value=\"Plane\" />\n// \t\t\t\t\t\t\t\t<Text style={styles.itemText}>Avião</Text>\n// \t\t\t\t\t\t\t\t{recommendedMethod === 'Plane' ? <Text style={styles.recommendedText}>Recomendado</Text> : undefined}\n// \t\t\t\t\t\t\t</View>\n// \t\t\t\t\t\t</TouchableOpacity>\n// \t\t\t\t\t</RadioButton.Group>\n// \t\t\t\t</View>\n// \t\t\t</Card>\n// \t\t</View>\n// \t);\n// }\n\n// const styles = createTStyleSheet({\n// \tmainView: {\n// \t\tflexBasis: '50%',\n// \t},\n// \tchoosableView: {\n// \t\tmarginVertical: '8rem',\n// \t\tpaddingRight: '6rem',\n// \t\talignItems: 'flex-start',\n// \t\tjustifyContent: 'space-around',\n// \t},\n// \tmethodText: {\n// \t\ttextAlign: 'center',\n// \t\tfontSize: '12rem',\n// \t\tcolor: '#78849E',\n// \t\tpaddingVertical: '8rem',\n// \t},\n// \tcard: {\n// \t\televation: '4rem',\n// \t\tmargin: '8rem',\n// \t\tborderRadius: '10rem',\n// \t},\n// \tfieldView: {\n// \t\talignItems: 'center',\n// \t\tjustifyContent: 'center',\n// \t},\n// \tdivider: {\n// \t\twidth: '100%',\n// \t\theight: '1rem',\n// \t\tmarginVertical: '4rem',\n// \t},\n// \titemText: {\n// \t\tpaddingLeft: '2rem',\n// \t},\n// \trecommendedText: {\n// \t\tpaddingVertical: '1rem',\n// \t\tpaddingHorizontal: '5rem',\n// \t\tfontSize: '9.5rem',\n// \t\tbackgroundColor: '#469BA2',\n// \t\tfontWeight: 'bold',\n// \t\tborderRadius: '6rem',\n// \t\tcolor: 'white',\n// \t\tmarginHorizontal: '8rem',\n// \t},\n// \tradioItemView: {\n// \t\tflexDirection: 'row',\n// \t\talignItems: 'center',\n// \t\tjustifyContent: 'space-between',\n// \t\twidth: '100%',\n// \t},\n// });\n"]},"metadata":{},"sourceType":"module"}