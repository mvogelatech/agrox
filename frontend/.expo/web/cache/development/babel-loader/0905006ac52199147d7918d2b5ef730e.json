{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/08-details/index.tsx\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { createTStyleSheet } from \"../../src/utils/style\";\nimport { RoundIcon } from \"../00-common\";\nimport { getLatestDiagnosis, getPrescriptionStatus } from \"../../src/utils\";\nimport { PulverizationMethods } from \"../../models\";\nimport { prescriptionNotInfested, prescriptionNotAvailable, displayAlert, defaultNotImplemented } from \"../../src/utils/alert-messages\";\nimport { DetailsFieldCard } from \"./details-field-card\";\nimport { asAliveOnlyScreenComponent } from \"../../src/utils/smart-lifecycle-components\";\nimport { Message } from \"../00-common/message\";\nimport { PrescriptionTable } from \"../00-common/prescription-table\";\nimport { FAB } from 'react-native-paper';\nimport Constants from 'expo-constants';\nimport { colors } from \"../../src/assets\";\n\nfunction compare(a, b) {\n  if (getLatestDiagnosis(a).affected_area_ha > getLatestDiagnosis(b).affected_area_ha) return -1;\n  if (getLatestDiagnosis(b).affected_area_ha > getLatestDiagnosis(a).affected_area_ha) return 1;\n  return 0;\n}\n\nexport var Details = asAliveOnlyScreenComponent(function (_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var fields = route.params.fields;\n\n  var _React$useState = React.useState(fields.slice().sort(compare)[0]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedField = _React$useState2[0],\n      setSelectedField = _React$useState2[1];\n\n  var pulverizationMethod = route.params.method;\n  var latestDiagnosis = getLatestDiagnosis(selectedField);\n  var prescription = latestDiagnosis.prescription[0];\n  var status = getPrescriptionStatus(latestDiagnosis);\n  return React.createElement(View, {\n    style: styles.mainView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, React.createElement(FAB, {\n    small: true,\n    style: styles.fab,\n    color: \"#6F6F6F\",\n    icon: \"close\",\n    onPress: function onPress() {\n      navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.titleView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, React.createElement(RoundIcon, {\n    isEnabled: true,\n    icon: pulverizationMethod === PulverizationMethods.DRONE ? 'drone' : 'plane',\n    color: colors.lightBlue,\n    size: \"50rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    style: styles.recommendedText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"M\\xC9TODO SELECIONADO\"), React.createElement(Text, {\n    style: styles.methodText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, \"Pulveriza\\xE7\\xE3o por \", pulverizationMethod === PulverizationMethods.DRONE ? 'Drone' : 'Avi√£o')), React.createElement(View, {\n    style: styles.fieldsView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles.fieldsText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, \"TALH\\xD5ES\"), React.createElement(FlatList, {\n    persistentScrollbar: true,\n    horizontal: true,\n    showsHorizontalScrollIndicator: true,\n    data: fields.slice().sort(compare),\n    renderItem: function renderItem(_ref2) {\n      var field = _ref2.item;\n      return React.createElement(DetailsFieldCard, {\n        field: field,\n        isSelected: field === selectedField,\n        onFieldPress: function onFieldPress() {\n          return setSelectedField(field);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    style: {\n      flexGrow: 0,\n      alignSelf: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  })), React.createElement(Text, {\n    style: styles.selectedFieldText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }, \"RECEITU\\xC1RIO DO TALH\\xC3O \", selectedField.name.split(' ')[1]), status === 'not-infested' ? React.createElement(Message, _extends({}, prescriptionNotInfested, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  })) : status === 'not-available' ? React.createElement(Message, _extends({}, prescriptionNotAvailable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  })) : React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(PrescriptionTable, {\n    mode: \"details\",\n    prescription: prescription,\n    onWhatsAppButtonPress: function onWhatsAppButtonPress() {\n      return displayAlert(defaultNotImplemented);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  })));\n});\nvar styles = createTStyleSheet({\n  fab: {\n    position: 'absolute',\n    top: Constants.statusBarHeight,\n    left: 0,\n    backgroundColor: 'transparent',\n    elevation: 0,\n    paddingLeft: '8rem'\n  },\n  mainView: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: 'white',\n    justifyContent: 'space-between',\n    paddingBottom: '8rem'\n  },\n  titleView: {\n    paddingTop: Constants.statusBarHeight,\n    paddingHorizontal: '24rem',\n    backgroundColor: 'white'\n  },\n  recommendedText: {\n    fontSize: '14rem',\n    textAlign: 'center',\n    color: '#78849E'\n  },\n  methodText: {\n    fontSize: '18rem',\n    textAlign: 'center'\n  },\n  fieldsText: {\n    marginBottom: '16rem',\n    fontSize: '14rem',\n    textAlign: 'center',\n    color: '#78849E'\n  },\n  selectedFieldText: {\n    fontWeight: 'bold',\n    color: '#78849E',\n    textAlign: 'center',\n    marginVertical: '12rem'\n  },\n  fieldsView: {\n    marginTop: '8rem'\n  },\n  contentView: {\n    flexDirection: 'row',\n    paddingTop: '16rem'\n  },\n  header: {\n    fontSize: '14rem',\n    color: '#78849E',\n    fontWeight: '500'\n  },\n  buttonView: {\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    marginTop: '32rem',\n    marginBottom: '16rem',\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/08-details/index.tsx"],"names":["React","createTStyleSheet","RoundIcon","getLatestDiagnosis","getPrescriptionStatus","PulverizationMethods","prescriptionNotInfested","prescriptionNotAvailable","displayAlert","defaultNotImplemented","DetailsFieldCard","asAliveOnlyScreenComponent","Message","PrescriptionTable","FAB","Constants","colors","compare","a","b","affected_area_ha","Details","navigation","route","fields","params","useState","slice","sort","selectedField","setSelectedField","pulverizationMethod","method","latestDiagnosis","prescription","status","styles","mainView","fab","goBack","titleView","DRONE","lightBlue","recommendedText","methodText","fieldsView","fieldsText","field","item","id","toString","flexGrow","alignSelf","selectedFieldText","name","split","flex","position","top","statusBarHeight","left","backgroundColor","elevation","paddingLeft","alignItems","justifyContent","paddingBottom","paddingTop","paddingHorizontal","fontSize","textAlign","color","marginBottom","fontWeight","marginVertical","marginTop","contentView","flexDirection","header","buttonView","bottom","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, FlatList } from 'react-native';\nimport { createTStyleSheet } from '../../src/utils/style';\nimport { RoundIcon } from '../00-common';\nimport { AgroXScreenProps } from '../navigation-types';\nimport { getLatestDiagnosis, getPrescriptionStatus } from '../../src/utils';\n\nimport { Models, PulverizationMethods } from '../../models';\nimport { prescriptionNotInfested, prescriptionNotAvailable, displayAlert, defaultNotImplemented } from '../../src/utils/alert-messages';\nimport { DetailsFieldCard } from './details-field-card';\nimport { asAliveOnlyScreenComponent } from '../../src/utils/smart-lifecycle-components';\nimport { Message } from '../00-common/message';\nimport { PrescriptionTable } from '../00-common/prescription-table';\nimport { FAB } from 'react-native-paper';\nimport Constants from 'expo-constants';\nimport { colors } from '../../src/assets';\n\nfunction compare(a: Models.field, b: Models.field) {\n\tif (getLatestDiagnosis(a)!.affected_area_ha > getLatestDiagnosis(b)!.affected_area_ha) return -1;\n\tif (getLatestDiagnosis(b)!.affected_area_ha > getLatestDiagnosis(a)!.affected_area_ha) return 1;\n\treturn 0;\n}\n\ntype ScreenProps = AgroXScreenProps<'Details'>;\n\nexport const Details = asAliveOnlyScreenComponent(({ navigation, route }: ScreenProps) => {\n\tconst { fields } = route.params;\n\tconst [selectedField, setSelectedField] = React.useState(fields.slice().sort(compare)[0]);\n\tconst pulverizationMethod = route.params.method;\n\tconst latestDiagnosis = getLatestDiagnosis(selectedField)!;\n\tconst prescription = latestDiagnosis.prescription[0];\n\tconst status = getPrescriptionStatus(latestDiagnosis);\n\n\treturn (\n\t\t<View style={styles.mainView}>\n\t\t\t{/* eslint-disable-next-line  react/jsx-pascal-case */}\n\t\t\t<FAB\n\t\t\t\tsmall\n\t\t\t\tstyle={styles.fab}\n\t\t\t\tcolor=\"#6F6F6F\"\n\t\t\t\ticon=\"close\"\n\t\t\t\tonPress={() => {\n\t\t\t\t\tnavigation.goBack();\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<View style={styles.titleView}>\n\t\t\t\t<RoundIcon isEnabled icon={pulverizationMethod === PulverizationMethods.DRONE ? 'drone' : 'plane'} color={colors.lightBlue} size=\"50rem\" />\n\t\t\t\t<Text style={styles.recommendedText}>M√âTODO SELECIONADO</Text>\n\t\t\t\t<Text style={styles.methodText}>Pulveriza√ß√£o por {pulverizationMethod === PulverizationMethods.DRONE ? 'Drone' : 'Avi√£o'}</Text>\n\t\t\t</View>\n\n\t\t\t<View style={styles.fieldsView}>\n\t\t\t\t<Text style={styles.fieldsText}>TALH√ïES</Text>\n\t\t\t\t<FlatList\n\t\t\t\t\tpersistentScrollbar\n\t\t\t\t\thorizontal\n\t\t\t\t\tshowsHorizontalScrollIndicator\n\t\t\t\t\tdata={fields.slice().sort(compare)}\n\t\t\t\t\trenderItem={({ item: field }) => (\n\t\t\t\t\t\t<DetailsFieldCard field={field} isSelected={field === selectedField} onFieldPress={() => setSelectedField(field)} />\n\t\t\t\t\t)}\n\t\t\t\t\tkeyExtractor={(item) => item.id.toString()}\n\t\t\t\t\tstyle={{ flexGrow: 0, alignSelf: 'center' }}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t<Text style={styles.selectedFieldText}>RECEITU√ÅRIO DO TALH√ÉO {selectedField.name.split(' ')[1]}</Text>\n\n\t\t\t{status === 'not-infested' ? (\n\t\t\t\t<Message {...prescriptionNotInfested} />\n\t\t\t) : status === 'not-available' ? (\n\t\t\t\t<Message {...prescriptionNotAvailable} />\n\t\t\t) : (\n\t\t\t\t<View style={{ flex: 1 }}>\n\t\t\t\t\t<PrescriptionTable mode=\"details\" prescription={prescription} onWhatsAppButtonPress={() => displayAlert(defaultNotImplemented)} />\n\t\t\t\t</View>\n\t\t\t)}\n\t\t</View>\n\t);\n});\n\nconst styles = createTStyleSheet({\n\tfab: {\n\t\tposition: 'absolute',\n\t\ttop: Constants.statusBarHeight,\n\t\tleft: 0,\n\t\tbackgroundColor: 'transparent',\n\t\televation: 0,\n\t\tpaddingLeft: '8rem',\n\t},\n\tmainView: {\n\t\tflex: 1,\n\t\talignItems: 'center',\n\t\tbackgroundColor: 'white',\n\t\tjustifyContent: 'space-between',\n\t\tpaddingBottom: '8rem',\n\t},\n\ttitleView: {\n\t\tpaddingTop: Constants.statusBarHeight,\n\t\tpaddingHorizontal: '24rem',\n\t\tbackgroundColor: 'white',\n\t},\n\trecommendedText: {\n\t\tfontSize: '14rem',\n\t\ttextAlign: 'center',\n\t\tcolor: '#78849E',\n\t},\n\tmethodText: {\n\t\tfontSize: '18rem',\n\t\ttextAlign: 'center',\n\t},\n\tfieldsText: {\n\t\t// marginTop: '8rem',\n\t\tmarginBottom: '16rem',\n\n\t\tfontSize: '14rem',\n\t\ttextAlign: 'center',\n\t\tcolor: '#78849E',\n\t},\n\tselectedFieldText: {\n\t\tfontWeight: 'bold',\n\t\tcolor: '#78849E',\n\t\ttextAlign: 'center',\n\t\tmarginVertical: '12rem',\n\t},\n\tfieldsView: {\n\t\tmarginTop: '8rem',\n\t},\n\tcontentView: {\n\t\tflexDirection: 'row',\n\t\tpaddingTop: '16rem',\n\t},\n\n\theader: {\n\t\tfontSize: '14rem',\n\t\tcolor: '#78849E',\n\t\tfontWeight: '500',\n\t},\n\n\tbuttonView: {\n\t\tposition: 'absolute',\n\t\tleft: 0,\n\t\tbottom: 0,\n\t\tmarginTop: '32rem',\n\t\tmarginBottom: '16rem',\n\t\twidth: '100%',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}