{"ast":null,"code":"var _jsxFileName = \"/home/jmgoncalves/git/agro-x/frontend/components/02-general/bottom-cards/diagnosis-details/diagnosis-details.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { createTStyleSheet } from \"../../../../src/utils/style\";\nimport { CardTitle } from \"../../../00-common/card-title\";\nimport { useMainSelector } from \"../../../../redux-things\";\nimport { getAreaAffectedAreaHA, getAllFieldsAreaHA, getLatestPrescriptionPulverizationMethod } from \"../../../../src/utils\";\nimport { InfestationStatus } from \"../../../00-common/infestation-status\";\nimport { PlagueTypes } from \"../../plagues/plague-types\";\nimport { Divider } from 'react-native-paper';\nimport { CardButton } from \"../../../00-common\";\nimport { dbHasNoCompanies, waitingForPrescription } from \"../../../../src/utils/alert-messages\";\nimport { colors } from \"../../../../src/assets\";\nexport function DiagnosisDetails(props) {\n  var area = useMainSelector(function (state) {\n    return state.interactionData.general.currentArea;\n  });\n  var companies = useMainSelector(function (state) {\n    return state.backendData.companies;\n  });\n  var affectedArea = getAreaAffectedAreaHA(area);\n  var allFieldsHavePrecriptions = area.field.every(function (field) {\n    return getLatestPrescriptionPulverizationMethod(field);\n  });\n  var dbHasCompanies = companies.length > 0;\n\n  function getDisabledMessage() {\n    if (!allFieldsHavePrecriptions) return waitingForPrescription;\n    return dbHasNoCompanies;\n  }\n\n  function getenabledStatus() {\n    if (!dbHasCompanies) return false;\n    if (!allFieldsHavePrecriptions) return false;\n    return true;\n  }\n\n  return React.createElement(View, {\n    style: styles.mainView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, React.createElement(CardTitle, {\n    text: \"Detalhes\",\n    titleIcon: \"info\",\n    onClose: props.onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.contentView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }, React.createElement(InfestationStatus, {\n    affectedArea: affectedArea,\n    totalArea: getAllFieldsAreaHA(area),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), React.createElement(Divider, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), React.createElement(PlagueTypes, {\n    area: area,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }), React.createElement(CardButton, {\n    disabledMessage: getDisabledMessage(),\n    enabled: getenabledStatus(),\n    text: \"Or\\xE7ar Pulveriza\\xE7\\xE3o\",\n    icon: \"pulverization\",\n    iconColor: colors.secondary.green_30,\n    customStyle: {\n      marginVertical: '16rem'\n    },\n    onPress: props.onHirePulverizationButtonPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  })));\n}\nvar styles = createTStyleSheet({\n  mainView: {\n    backgroundColor: 'white'\n  },\n  divider: {\n    marginVertical: '8rem'\n  },\n  contentView: {\n    marginHorizontal: '16rem',\n    marginTop: '8rem'\n  }\n});","map":{"version":3,"sources":["/home/jmgoncalves/git/agro-x/frontend/components/02-general/bottom-cards/diagnosis-details/diagnosis-details.tsx"],"names":["React","createTStyleSheet","CardTitle","useMainSelector","getAreaAffectedAreaHA","getAllFieldsAreaHA","getLatestPrescriptionPulverizationMethod","InfestationStatus","PlagueTypes","Divider","CardButton","dbHasNoCompanies","waitingForPrescription","colors","DiagnosisDetails","props","area","state","interactionData","general","currentArea","companies","backendData","affectedArea","allFieldsHavePrecriptions","field","every","dbHasCompanies","length","getDisabledMessage","getenabledStatus","styles","mainView","onClose","contentView","divider","secondary","green_30","marginVertical","onHirePulverizationButtonPress","backgroundColor","marginHorizontal","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport { createTStyleSheet } from '../../../../src/utils/style';\n\nimport { CardTitle } from '../../../00-common/card-title';\nimport { useMainSelector } from '../../../../redux-things';\nimport { CloseableBottomCardProps } from '../closeable-bottom-card-props';\nimport { getAreaAffectedAreaHA, getAllFieldsAreaHA, getLatestPrescriptionPulverizationMethod } from '../../../../src/utils';\nimport { InfestationStatus } from '../../../00-common/infestation-status';\nimport { PlagueTypes } from '../../plagues/plague-types';\nimport { Divider } from 'react-native-paper';\nimport { CardButton } from '../../../00-common';\nimport { dbHasNoCompanies, waitingForPrescription } from '../../../../src/utils/alert-messages';\nimport { colors } from '../../../../src/assets';\n\nexport function DiagnosisDetails(props: CloseableBottomCardProps) {\n\tconst area = useMainSelector((state) => state.interactionData.general.currentArea)!;\n\tconst companies = useMainSelector((state) => state.backendData.companies)!;\n\tconst affectedArea = getAreaAffectedAreaHA(area)!;\n\n\tconst allFieldsHavePrecriptions = area.field.every((field) => getLatestPrescriptionPulverizationMethod(field));\n\tconst dbHasCompanies = companies.length > 0;\n\n\tfunction getDisabledMessage() {\n\t\tif (!allFieldsHavePrecriptions) return waitingForPrescription;\n\t\treturn dbHasNoCompanies;\n\t}\n\n\tfunction getenabledStatus() {\n\t\tif (!dbHasCompanies) return false;\n\t\tif (!allFieldsHavePrecriptions) return false;\n\t\treturn true;\n\t}\n\n\treturn (\n\t\t<View style={styles.mainView}>\n\t\t\t<CardTitle text=\"Detalhes\" titleIcon=\"info\" onClose={props.onClose} />\n\t\t\t<View style={styles.contentView}>\n\t\t\t\t<InfestationStatus affectedArea={affectedArea} totalArea={getAllFieldsAreaHA(area)} />\n\t\t\t\t<Divider style={styles.divider} />\n\t\t\t\t<PlagueTypes area={area} />\n\t\t\t\t<CardButton\n\t\t\t\t\tdisabledMessage={getDisabledMessage()}\n\t\t\t\t\tenabled={getenabledStatus()}\n\t\t\t\t\ttext=\"Orçar Pulverização\"\n\t\t\t\t\ticon=\"pulverization\"\n\t\t\t\t\ticonColor={colors.secondary.green_30}\n\t\t\t\t\tcustomStyle={{ marginVertical: '16rem' }}\n\t\t\t\t\tonPress={props.onHirePulverizationButtonPress}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = createTStyleSheet({\n\tmainView: {\n\t\tbackgroundColor: 'white',\n\t},\n\tdivider: {\n\t\tmarginVertical: '8rem',\n\t},\n\tcontentView: {\n\t\tmarginHorizontal: '16rem',\n\t\tmarginTop: '8rem',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}