{
  "_from": "geojson2shp@^0.3.2",
  "_id": "geojson2shp@0.3.2",
  "_inBundle": false,
  "_integrity": "sha1-QrDFut7TiPeI/NveqSDU+8I+DQs=",
  "_location": "/geojson2shp",
  "_phantomChildren": {
    "core-util-is": "1.0.3",
    "end-of-stream": "1.4.4",
    "inherits": "2.0.4",
    "isarray": "1.0.0",
    "once": "1.4.0",
    "process-nextick-args": "2.0.1",
    "stream-shift": "1.0.1",
    "util-deprecate": "1.0.2"
  },
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "geojson2shp@^0.3.2",
    "name": "geojson2shp",
    "escapedName": "geojson2shp",
    "rawSpec": "^0.3.2",
    "saveSpec": null,
    "fetchSpec": "^0.3.2"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/geojson2shp/-/geojson2shp-0.3.2.tgz",
  "_shasum": "42b0c5baded388f788fcdbdea920d4fbc23e0d0b",
  "_spec": "geojson2shp@^0.3.2",
  "_where": "/Users/atech/Downloads/agro-x4/backend/cloud-functions/field-map-parser",
  "author": {
    "name": "Jérôme Desboeufs",
    "email": "jerome.desboeufs@gmail.com"
  },
  "bin": {
    "geojson2shp": "cli.js"
  },
  "bugs": {
    "url": "https://github.com/jdesboeufs/geojson2shp/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "epsg-index": "^0.13.0",
    "geojson-stream": "^0.0.1",
    "gunzip-stream": "^1.0.1",
    "is-stream": "^1.1.0",
    "pump": "^3.0.0",
    "pumpify": "^1.5.1",
    "reproject": "^1.2.1",
    "yazl": "^2.4.3"
  },
  "deprecated": false,
  "description": "Convert GeoJSON into Shapefile in pure JavaScript",
  "devDependencies": {
    "ava": "^0.25.0",
    "dev-null": "^0.1.1",
    "xo": "^0.20.3"
  },
  "engines": {
    "node": ">= 8"
  },
  "homepage": "https://github.com/jdesboeufs/geojson2shp#readme",
  "license": "MIT",
  "main": "index.js",
  "name": "geojson2shp",
  "private": false,
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/jdesboeufs/geojson2shp.git"
  },
  "scripts": {
    "lint": "xo",
    "test": "ava"
  },
  "version": "0.3.2",
  "xo": {
    "semicolon": false,
    "space": 2,
    "rules": {
      "unicorn/no-abusive-eslint-disable": "warn"
    }
  }
}
